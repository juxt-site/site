{"version":3,"sources":["ajax/xml_http_request.cljs"],"mappings":"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","names":["ajax.xml-http-request/ready-state","e","G__22504","fexpr__22503","ajax.xml-http-request/append","current","next","ajax.xml-http-request/process-headers","header-str","cljs.core.reduce","headers","header-line","goog.string/isEmptyOrWhitespace","key-value","goog.string/splitLimit","cljs.core.update","ajax.xml-http-request/xmlhttprequest","js/goog","js/goog.global","js/goog.global.XMLHttpRequest","goog/global.XMLHttpRequest","js/require","req","cljs.core/PROTOCOL_SENTINEL","p__22519","map__22520","cljs.core/--destructure-map","cljs.core.get","this","uri","method","body","timeout","with-credentials","response-format","handler","p1__22516#","cljs.core._EQ_","temp__5804__auto__","response-type","cljs.core/name","seq__22522","cljs.core/seq","chunk__22523","count__22524","i__22525","vec__22532","cljs.core.nth","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__22536","cljs.core/first","cljs.core/next","k","v","or__5045__auto__","header"],"sourcesContent":["(ns ajax.xml-http-request\n  (:require [ajax.protocols :refer [AjaxImpl AjaxRequest\n                                    AjaxResponse Interceptor]]\n            goog.string))\n\n(defn ready-state [e]\n  ({0 :not-initialized\n    1 :connection-established\n    2 :request-received\n    3 :processing-request\n    4 :response-ready} (.-readyState (.-target e))))\n\n(defn append [current next]\n  (if current\n    (str current \", \" next)\n    next))\n\n(defn process-headers [header-str]\n  (if header-str\n    (reduce (fn [headers header-line]\n              (if (goog.string/isEmptyOrWhitespace header-line)\n                headers\n                (let [key-value (goog.string/splitLimit header-line \": \" 2)]\n                  (update headers (aget key-value 0) append (aget key-value 1)))))\n            {}\n            (.split header-str \"\\r\\n\"))\n    {}))\n\n(def xmlhttprequest\n  (cond\n    (exists? goog/global.XMLHttpRequest)\n    goog/global.XMLHttpRequest\n    (exists? js/require)\n    (let [req js/require]\n      (.-XMLHttpRequest (req \"xmlhttprequest\")))))\n\n(extend-type xmlhttprequest\n  AjaxImpl\n  (-js-ajax-request\n    [this\n     {:keys [uri method body headers timeout with-credentials\n             response-format]\n      :or {with-credentials false\n           timeout 0}}\n     handler]\n    (set! (.-withCredentials this) with-credentials)\n    (set! (.-onreadystatechange this)\n          #(when (= :response-ready (ready-state %))\n             (handler this)))\n    (.open this method uri true)\n    (set! (.-timeout this) timeout)\n;;; IE8 needs timeout to be set between open and send\n;;; https://msdn.microsoft.com/en-us/library/cc304105(v=vs.85).aspx\n    (when-let [response-type (:type response-format)]\n      (set! (.-responseType this) (name response-type)))\n    (doseq [[k v] headers]\n      (.setRequestHeader this k v))\n    (.send this (or body \"\"))\n    this)\n  AjaxRequest\n  (-abort [this] (.abort this))\n  AjaxResponse\n  (-body [this] (.-response this))\n  (-status [this] (.-status this))\n  (-status-text [this] (.-statusText this))\n  (-get-all-headers [this]\n    (process-headers (.getAllResponseHeaders this)))\n  (-get-response-header [this header]\n    (.getResponseHeader this header))\n  (-was-aborted [this] (= 0 (.-readyState this))))\n"]}