{
"version":3,
"file":"goog.useragent.product_isversion.js",
"lineCount":50,
"mappings":"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",
"sources":["goog/useragent/product_isversion.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Functions for understanding the version of the browser.\n * This is pulled out of product.js to ensure that only builds that need\n * this functionality actually get it, without having to rely on the compiler\n * to strip out unneeded pieces.\n *\n * TODO(nnaze): Move to more appropriate filename/namespace.\n */\n\n\ngoog.provide('goog.userAgent.product.isVersion');\n\n\ngoog.require('goog.labs.userAgent.platform');\ngoog.require('goog.string');\ngoog.require('goog.userAgent');\ngoog.require('goog.userAgent.product');\n\n\n/**\n * @return {string} The string that describes the version number of the user\n *     agent product.  This is a string rather than a number because it may\n *     contain 'b', 'a', and so on.\n * @private\n */\ngoog.userAgent.product.determineVersion_ = function() {\n  'use strict';\n  // All browsers have different ways to detect the version and they all have\n  // different naming schemes.\n\n  if (goog.userAgent.product.FIREFOX) {\n    // Firefox/2.0.0.1 or Firefox/3.5.3\n    return goog.userAgent.product.getFirstRegExpGroup_(/Firefox\\/([0-9.]+)/);\n  }\n\n  if (goog.userAgent.product.IE || goog.userAgent.product.EDGE ||\n      goog.userAgent.product.OPERA) {\n    return goog.userAgent.VERSION;\n  }\n\n  if (goog.userAgent.product.CHROME) {\n    // CriOS is Chrome on iOS, but iPadOS 13+ spoofs macOS by default.\n    // So it's possible that CriOS appears to be running on macOS.\n    if (goog.labs.userAgent.platform.isIos() ||\n        goog.labs.userAgent.platform.isMacintosh()) {\n      // CriOS/56.0.2924.79\n      const chromeIosVersion =\n          goog.userAgent.product.getFirstRegExpGroup_(/CriOS\\/([0-9.]+)/);\n      if (chromeIosVersion) {\n        return chromeIosVersion;\n      }\n    }\n    // Chrome/4.0.223.1\n    return goog.userAgent.product.getFirstRegExpGroup_(/Chrome\\/([0-9.]+)/);\n  }\n\n  // This replicates legacy logic, which considered Safari and iOS to be\n  // different products.\n  if (goog.userAgent.product.SAFARI && !goog.labs.userAgent.platform.isIos()) {\n    // Version/5.0.3\n    //\n    // NOTE: Before version 3, Safari did not report a product version number.\n    // The product version number for these browsers will be the empty string.\n    // They may be differentiated by WebKit version number in goog.userAgent.\n    return goog.userAgent.product.getFirstRegExpGroup_(/Version\\/([0-9.]+)/);\n  }\n\n  if (goog.userAgent.product.IPHONE || goog.userAgent.product.IPAD) {\n    // Mozilla/5.0 (iPod; U; CPU like Mac OS X; en) AppleWebKit/420.1\n    // (KHTML, like Gecko) Version/3.0 Mobile/3A100a Safari/419.3\n    // Version is the browser version, Mobile is the build number. We combine\n    // the version string with the build number: 3.0.3A100a for the example.\n    var arr =\n        goog.userAgent.product.execRegExp_(/Version\\/(\\S+).*Mobile\\/(\\S+)/);\n    if (arr) {\n      return arr[1] + '.' + arr[2];\n    }\n  } else if (goog.userAgent.product.ANDROID) {\n    // Mozilla/5.0 (Linux; U; Android 0.5; en-us) AppleWebKit/522+\n    // (KHTML, like Gecko) Safari/419.3\n    //\n    // Mozilla/5.0 (Linux; U; Android 1.0; en-us; dream) AppleWebKit/525.10+\n    // (KHTML, like Gecko) Version/3.0.4 Mobile Safari/523.12.2\n    //\n    // Prefer Version number if present, else make do with the OS number\n    var version =\n        goog.userAgent.product.getFirstRegExpGroup_(/Android\\s+([0-9.]+)/);\n    if (version) {\n      return version;\n    }\n\n    return goog.userAgent.product.getFirstRegExpGroup_(/Version\\/([0-9.]+)/);\n  }\n\n  return '';\n};\n\n\n/**\n * Return the first group of the given regex.\n * @param {!RegExp} re Regular expression with at least one group.\n * @return {string} Contents of the first group or an empty string if no match.\n * @private\n */\ngoog.userAgent.product.getFirstRegExpGroup_ = function(re) {\n  'use strict';\n  var arr = goog.userAgent.product.execRegExp_(re);\n  return arr ? arr[1] : '';\n};\n\n\n/**\n * Run regexp's exec() on the userAgent string.\n * @param {!RegExp} re Regular expression.\n * @return {?IArrayLike<string>} A result array, or null for no match.\n * @private\n */\ngoog.userAgent.product.execRegExp_ = function(re) {\n  'use strict';\n  return re.exec(goog.userAgent.getUserAgentString());\n};\n\n\n/**\n * The version of the user agent. This is a string because it might contain\n * 'b' (as in beta) as well as multiple dots.\n * @type {string}\n */\ngoog.userAgent.product.VERSION = goog.userAgent.product.determineVersion_();\n\n\n/**\n * Whether the user agent product version is higher or the same as the given\n * version.\n *\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the user agent product version is higher or the\n *     same as the given version.\n */\ngoog.userAgent.product.isVersion = function(version) {\n  'use strict';\n  return goog.string.compareVersions(goog.userAgent.product.VERSION, version) >=\n      0;\n};\n"],
"names":["goog","provide","require","userAgent","product","determineVersion_","goog.userAgent.product.determineVersion_","FIREFOX","getFirstRegExpGroup_","IE","EDGE","OPERA","VERSION","CHROME","labs","platform","isIos","isMacintosh","chromeIosVersion","SAFARI","IPHONE","IPAD","arr","execRegExp_","ANDROID","version","goog.userAgent.product.getFirstRegExpGroup_","re","goog.userAgent.product.execRegExp_","exec","getUserAgentString","isVersion","goog.userAgent.product.isVersion","string","compareVersions"]
}
