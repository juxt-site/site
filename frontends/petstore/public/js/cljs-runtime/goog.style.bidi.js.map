{
"version":3,
"file":"goog.style.bidi.js",
"lineCount":75,
"mappings":"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",
"sources":["goog/style/bidi.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Bidi utility functions.\n */\n\ngoog.provide('goog.style.bidi');\n\ngoog.require('goog.dom');\ngoog.require('goog.style');\ngoog.require('goog.userAgent');\ngoog.require('goog.userAgent.platform');\ngoog.require('goog.userAgent.product');\ngoog.require('goog.userAgent.product.isVersion');\n\n\n/**\n * Returns the normalized scrollLeft position for a scrolled element.\n * @param {Element} element The scrolled element.\n * @return {number} The number of pixels the element is scrolled. 0 indicates\n *     that the element is not scrolled at all (which, in general, is the\n *     left-most position in ltr and the right-most position in rtl).\n */\ngoog.style.bidi.getScrollLeft = function(element) {\n  'use strict';\n  var isRtl = goog.style.isRightToLeft(element);\n  if (isRtl && goog.style.bidi.usesNegativeScrollLeftInRtl_()) {\n    return -element.scrollLeft;\n  } else if (isRtl && !goog.userAgent.EDGE_OR_IE) {\n    // ScrollLeft starts at the maximum positive value and decreases towards\n    // 0 as the element is scrolled towards the left. However, for overflow\n    // visible, there is no scrollLeft and the value always stays correctly at 0\n    var overflowX = goog.style.getComputedOverflowX(element);\n    if (overflowX == 'visible') {\n      return element.scrollLeft;\n    } else {\n      return element.scrollWidth - element.clientWidth - element.scrollLeft;\n    }\n  }\n  // ScrollLeft behavior is identical in rtl and ltr, it starts at 0 and\n  // increases as the element is scrolled away from the start.\n  return element.scrollLeft;\n};\n\n\n/**\n * Returns the \"offsetStart\" of an element, analogous to offsetLeft but\n * normalized for right-to-left environments and various browser\n * inconsistencies. This value returned can always be passed to setScrollOffset\n * to scroll to an element's left edge in a left-to-right offsetParent or\n * right edge in a right-to-left offsetParent.\n *\n * For example, here offsetStart is 10px in an LTR environment and 5px in RTL:\n *\n * <pre>\n * |          xxxxxxxxxx     |\n *  ^^^^^^^^^^   ^^^^   ^^^^^\n *     10px      elem    5px\n * </pre>\n *\n * If an element is positioned before the start of its offsetParent, the\n * startOffset may be negative.  This can be used with setScrollOffset to\n * reliably scroll to an element:\n *\n * <pre>\n * var scrollOffset = goog.style.bidi.getOffsetStart(element);\n * goog.style.bidi.setScrollOffset(element.offsetParent, scrollOffset);\n * </pre>\n *\n * @see setScrollOffset\n *\n * @param {Element} element The element for which we need to determine the\n *     offsetStart position.\n * @return {number} The offsetStart for that element.\n */\ngoog.style.bidi.getOffsetStart = function(element) {\n  'use strict';\n  element = /** @type {!HTMLElement} */ (element);\n  var offsetLeftForReal = element.offsetLeft;\n\n  // The element might not have an offsetParent.\n  // For example, the node might not be attached to the DOM tree,\n  // and position:fixed children do not have an offset parent.\n  // Just try to do the best we can with what we have.\n  var bestParent = element.offsetParent;\n\n  if (!bestParent && goog.style.getComputedPosition(element) == 'fixed') {\n    bestParent = goog.dom.getOwnerDocument(element).documentElement;\n  }\n\n  // Just give up in this case.\n  if (!bestParent) {\n    return offsetLeftForReal;\n  }\n\n  if (goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher(58)) {\n    // When calculating an element's offsetLeft, Firefox 57 and below\n    // erroneously subtracts the border width from the actual distance.\n    // So we need to add it back. (Fixed in FireFox 58+)\n    var borderWidths = goog.style.getBorderBox(bestParent);\n    offsetLeftForReal += borderWidths.left;\n  } else if (\n      goog.userAgent.isDocumentModeOrHigher(8) &&\n      !goog.userAgent.isDocumentModeOrHigher(9)) {\n    // When calculating an element's offsetLeft, IE8/9-Standards Mode\n    // erroneously adds the border width to the actual distance.  So we need to\n    // subtract it.\n    var borderWidths = goog.style.getBorderBox(bestParent);\n    offsetLeftForReal -= borderWidths.left;\n  }\n\n  if (goog.style.isRightToLeft(bestParent)) {\n    // Right edge of the element relative to the left edge of its parent.\n    var elementRightOffset = offsetLeftForReal + element.offsetWidth;\n\n    // Distance from the parent's right edge to the element's right edge.\n    return bestParent.clientWidth - elementRightOffset;\n  }\n\n  return offsetLeftForReal;\n};\n\n\n/**\n * Sets the element's scrollLeft attribute so it is correctly scrolled by\n * offsetStart pixels.  This takes into account whether the element is RTL and\n * the nuances of different browsers.  To scroll to the \"beginning\" of an\n * element use getOffsetStart to obtain the element's offsetStart value and then\n * pass the value to setScrollOffset.\n * @see getOffsetStart\n * @param {Element} element The element to set scrollLeft on.\n * @param {number} offsetStart The number of pixels to scroll the element.\n *     If this value is < 0, 0 is used.\n */\ngoog.style.bidi.setScrollOffset = function(element, offsetStart) {\n  'use strict';\n  offsetStart = Math.max(offsetStart, 0);\n  // In LTR and in \"mirrored\" browser RTL (such as IE), we set scrollLeft to\n  // the number of pixels to scroll.\n  // Otherwise, in RTL, we need to account for different browser behavior.\n  if (!goog.style.isRightToLeft(element)) {\n    element.scrollLeft = offsetStart;\n  } else if (goog.style.bidi.usesNegativeScrollLeftInRtl_()) {\n    element.scrollLeft = -offsetStart;\n  } else if (!goog.userAgent.EDGE_OR_IE) {\n    // Take the current scrollLeft value and move to the right by the\n    // offsetStart to get to the left edge of the element, and then by\n    // the clientWidth of the element to get to the right edge.\n    element.scrollLeft =\n        element.scrollWidth - offsetStart - element.clientWidth;\n  } else {\n    element.scrollLeft = offsetStart;\n  }\n};\n\n\n/**\n * @return {boolean} Whether the current browser returns negative scrollLeft\n *     values for RTL elements. If true, then scrollLeft starts at 0 and then\n *     becomes more negative as the element is scrolled towards the left.\n * @private\n */\ngoog.style.bidi.usesNegativeScrollLeftInRtl_ = function() {\n  'use strict';\n  var isSafari10Plus =\n      goog.userAgent.product.SAFARI && goog.userAgent.product.isVersion(10);\n  var isIOS10Plus = goog.userAgent.IOS && goog.userAgent.platform.isVersion(10);\n  const isChrome85Plus =\n      goog.userAgent.product.CHROME && goog.userAgent.product.isVersion(85);\n  return goog.userAgent.GECKO || isSafari10Plus || isIOS10Plus ||\n      isChrome85Plus;\n};\n\n\n/**\n * Sets the element's left style attribute in LTR or right style attribute in\n * RTL.  Also clears the left attribute in RTL and the right attribute in LTR.\n * @param {Element} elem The element to position.\n * @param {number} left The left position in LTR; will be set as right in RTL.\n * @param {?number} top The top position.  If null only the left/right is set.\n * @param {boolean} isRtl Whether we are in RTL mode.\n */\ngoog.style.bidi.setPosition = function(elem, left, top, isRtl) {\n  'use strict';\n  if (top !== null) {\n    elem.style.top = top + 'px';\n  }\n  if (isRtl) {\n    elem.style.right = left + 'px';\n    elem.style.left = '';\n  } else {\n    elem.style.left = left + 'px';\n    elem.style.right = '';\n  }\n};\n"],
"names":["goog","provide","require","style","bidi","getScrollLeft","goog.style.bidi.getScrollLeft","element","isRtl","isRightToLeft","usesNegativeScrollLeftInRtl_","scrollLeft","userAgent","EDGE_OR_IE","overflowX","getComputedOverflowX","scrollWidth","clientWidth","getOffsetStart","goog.style.bidi.getOffsetStart","offsetLeftForReal","offsetLeft","bestParent","offsetParent","getComputedPosition","dom","getOwnerDocument","documentElement","GECKO","isVersionOrHigher","borderWidths","getBorderBox","left","isDocumentModeOrHigher","elementRightOffset","offsetWidth","setScrollOffset","goog.style.bidi.setScrollOffset","offsetStart","Math","max","goog.style.bidi.usesNegativeScrollLeftInRtl_","isSafari10Plus","product","SAFARI","isVersion","isIOS10Plus","IOS","platform","isChrome85Plus","CHROME","setPosition","goog.style.bidi.setPosition","elem","top","right"]
}
