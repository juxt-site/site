{"version":3,"sources":["pet/ui/env.cljs"],"mappings":";AAMA,oBAAA,2CAAA,mEAAA,2CAAA,qDAAA,yDAAA,mEAAA,0EAAA,wDAAA,mCAAA,uDAAA,1jBAAKA;AAQL,uBAAA,vBAAKC;AAGL,mBAAA,nBAAKC;AAEL,GAAA,QAAAC,gCAAAC,mCAAAC,uCAAAC;AAAA;AAAA,AAAA,AAASC,wcAISN,4FACDC,jeACX,0BAAA,2CAAA,0EAAA,IAAA,4EAAA,KAAA,gFAAA,MAAA,gGAAA,1ZAACM,0fAAaR,viBACd,AAACS;;AAEP,GAAA,QAAAN,gCAAAC,mCAAAC,uCAAAK;AAAA;AAAA,AAAA,AAASC,oBAEH,mDAAA,uDAAA,1GAACC,sFAAWL","names":["pet.ui.env/schema","pet.ui.env/init-user","pet.ui.env/route","js/pet","js/pet.ui","js/pet.ui.env","js/pet.ui.env.data-ref","pet.ui.env/data-ref","shadow.grove.db/configure","cljs.core.atom","js/pet.ui.env.rt-ref","pet.ui.env/rt-ref","shadow.grove.prepare"],"sourcesContent":["(ns pet.ui.env\n  (:require\n    [shadow.grove :as sg]\n    [shadow.grove.db :as db]\n    [pet.model :as-alias m]))\n\n(def schema\n  {::m/pet\n   {:type :entity\n    :primary-key ::m/pet-id\n    :attrs {}\n    :joins {}}\n   })\n\n(def init-user\n  {})\n\n(def route \"/\")\n\n(defonce data-ref\n  (-> {::m/id-seq 0\n       ::m/editing nil\n       ::m/logged-in false\n       ::m/whoami init-user\n       ::m/route route}\n      (db/configure schema)\n      (atom)))\n\n(defonce rt-ref\n  (-> {}\n      (sg/prepare data-ref ::db)))\n\n"]}