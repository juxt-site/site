{"version":3,"sources":["shadow/grove/events.cljs"],"mappings":";AAcA,+BAAA,/BAAMA,sEAAUC,IAAIC,MAAMC;AAA1B,AACE,OAACC,sBAAYH,IAAIC,MAAMC;;AAEzB,gCAAA,hCAAME,wEAAWC,QAAQC,MAAMC;AAA/B,AACE,OAACC,uBAAaH,QAAQC,MAAMC;;AAE9B,6BAAA,7BAAME,kEAAQJ,QAAQJ,MAAMM;AAA5B,AACE,OAACG,oBAAUL,QAAQJ,MAAMM","names":["shadow.grove.events/queue-fx","env","fx-id","fx-val","shadow.grove/queue-fx","shadow.grove.events/reg-event","app-ref","ev-id","handler-fn","shadow.grove/reg-event","shadow.grove.events/reg-fx","shadow.grove/reg-fx"],"sourcesContent":["(ns shadow.grove.events\n  \"re-frame style event handling\"\n  (:require-macros [shadow.grove.events])\n  (:require\n    [clojure.set :as set]\n    [shadow.grove.components :as comp]\n    [shadow.grove.runtime :as rt]\n    [shadow.grove.protocols :as gp]\n    [shadow.grove.db :as db]\n    [shadow.grove :as sg]))\n\n;; moved into the shadow.grove main ns\n;; FIXME: figure out what to do with the macro stuff\n\n(defn queue-fx [env fx-id fx-val]\n  (sg/queue-fx env fx-id fx-val))\n\n(defn reg-event [app-ref ev-id handler-fn]\n  (sg/reg-event app-ref ev-id handler-fn))\n\n(defn reg-fx [app-ref fx-id handler-fn]\n  (sg/reg-fx app-ref fx-id handler-fn))\n"]}