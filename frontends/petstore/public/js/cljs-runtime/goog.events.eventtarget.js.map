{
"version":3,
"file":"goog.events.eventtarget.js",
"lineCount":139,
"mappings":"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",
"sources":["goog/events/eventtarget.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A disposable implementation of a custom\n * listenable/event target. See also: documentation for\n * `goog.events.Listenable`.\n *\n * @see ../demos/eventtarget.html\n * @see goog.events.Listenable\n */\n\ngoog.provide('goog.events.EventTarget');\n\ngoog.require('goog.Disposable');\ngoog.require('goog.asserts');\ngoog.require('goog.events');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.Listenable');\ngoog.require('goog.events.ListenerMap');\ngoog.require('goog.object');\ngoog.requireType('goog.events.EventId');\ngoog.requireType('goog.events.EventLike');\ngoog.requireType('goog.events.ListenableKey');\n\n\n\n/**\n * An implementation of `goog.events.Listenable` with full W3C\n * EventTarget-like support (capture/bubble mechanism, stopping event\n * propagation, preventing default actions).\n *\n * You may subclass this class to turn your class into a Listenable.\n *\n * Unless propagation is stopped, an event dispatched by an\n * EventTarget will bubble to the parent returned by\n * `getParentEventTarget`. To set the parent, call\n * `setParentEventTarget`. Subclasses that don't support\n * changing the parent can override the setter to throw an error.\n *\n * Example usage:\n * <pre>\n *   var source = new goog.events.EventTarget();\n *   function handleEvent(e) {\n *     alert('Type: ' + e.type + '; Target: ' + e.target);\n *   }\n *   source.listen('foo', handleEvent);\n *   // Or: goog.events.listen(source, 'foo', handleEvent);\n *   ...\n *   source.dispatchEvent('foo');  // will call handleEvent\n *   ...\n *   source.unlisten('foo', handleEvent);\n *   // Or: goog.events.unlisten(source, 'foo', handleEvent);\n * </pre>\n *\n * @constructor\n * @extends {goog.Disposable}\n * @implements {goog.events.Listenable}\n */\ngoog.events.EventTarget = function() {\n  'use strict';\n  goog.Disposable.call(this);\n\n  /**\n   * Maps of event type to an array of listeners.\n   * @private {!goog.events.ListenerMap}\n   */\n  this.eventTargetListeners_ = new goog.events.ListenerMap(this);\n\n  /**\n   * The object to use for event.target. Useful when mixing in an\n   * EventTarget to another object.\n   * @private {!Object}\n   */\n  this.actualEventTarget_ = this;\n\n  /**\n   * Parent event target, used during event bubbling.\n   *\n   * TODO(chrishenry): Change this to goog.events.Listenable. This\n   * currently breaks people who expect getParentEventTarget to return\n   * goog.events.EventTarget.\n   *\n   * @private {?goog.events.EventTarget}\n   */\n  this.parentEventTarget_ = null;\n};\ngoog.inherits(goog.events.EventTarget, goog.Disposable);\ngoog.events.Listenable.addImplementation(goog.events.EventTarget);\n\n\n/**\n * An artificial cap on the number of ancestors you can have. This is mainly\n * for loop detection.\n * @const {number}\n * @private\n */\ngoog.events.EventTarget.MAX_ANCESTORS_ = 1000;\n\n\n/**\n * Returns the parent of this event target to use for bubbling.\n *\n * @return {goog.events.EventTarget} The parent EventTarget or null if\n *     there is no parent.\n * @override\n */\ngoog.events.EventTarget.prototype.getParentEventTarget = function() {\n  'use strict';\n  return this.parentEventTarget_;\n};\n\n\n/**\n * Sets the parent of this event target to use for capture/bubble\n * mechanism.\n * @param {goog.events.EventTarget} parent Parent listenable (null if none).\n */\ngoog.events.EventTarget.prototype.setParentEventTarget = function(parent) {\n  'use strict';\n  this.parentEventTarget_ = parent;\n};\n\n\n/**\n * Adds an event listener to the event target. The same handler can only be\n * added once per the type. Even if you add the same handler multiple times\n * using the same type then it will only be called once when the event is\n * dispatched.\n *\n * @param {string|!goog.events.EventId} type The type of the event to listen for\n * @param {function(?):?|{handleEvent:function(?):?}|null} handler The function\n *     to handle the event. The handler can also be an object that implements\n *     the handleEvent method which takes the event object as argument.\n * @param {boolean=} opt_capture In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase\n *     of the event.\n * @param {Object=} opt_handlerScope Object in whose scope to call\n *     the listener.\n * @deprecated Use `#listen` instead, when possible. Otherwise, use\n *     `goog.events.listen` if you are passing Object\n *     (instead of Function) as handler.\n */\ngoog.events.EventTarget.prototype.addEventListener = function(\n    type, handler, opt_capture, opt_handlerScope) {\n  'use strict';\n  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);\n};\n\n\n/**\n * Removes an event listener from the event target. The handler must be the\n * same object as the one added. If the handler has not been added then\n * nothing is done.\n *\n * @param {string|!goog.events.EventId} type The type of the event to listen for\n * @param {function(?):?|{handleEvent:function(?):?}|null} handler The function\n *     to handle the event. The handler can also be an object that implements\n *     the handleEvent method which takes the event object as argument.\n * @param {boolean=} opt_capture In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase\n *     of the event.\n * @param {Object=} opt_handlerScope Object in whose scope to call\n *     the listener.\n * @deprecated Use `#unlisten` instead, when possible. Otherwise, use\n *     `goog.events.unlisten` if you are passing Object\n *     (instead of Function) as handler.\n */\ngoog.events.EventTarget.prototype.removeEventListener = function(\n    type, handler, opt_capture, opt_handlerScope) {\n  'use strict';\n  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);\n};\n\n\n/**\n * @param {?goog.events.EventLike} e Event object.\n * @return {boolean} If anyone called preventDefault on the event object (or\n *     if any of the listeners returns false) this will also return false.\n * @override\n */\ngoog.events.EventTarget.prototype.dispatchEvent = function(e) {\n  'use strict';\n  this.assertInitialized_();\n\n  var ancestorsTree, ancestor = this.getParentEventTarget();\n  if (ancestor) {\n    ancestorsTree = [];\n    var ancestorCount = 1;\n    for (; ancestor; ancestor = ancestor.getParentEventTarget()) {\n      ancestorsTree.push(ancestor);\n      goog.asserts.assert(\n          (++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_),\n          'infinite loop');\n    }\n  }\n\n  return goog.events.EventTarget.dispatchEventInternal_(\n      this.actualEventTarget_, e, ancestorsTree);\n};\n\n\n/**\n * Removes listeners from this object.  Classes that extend EventTarget may\n * need to override this method in order to remove references to DOM Elements\n * and additional listeners.\n * @override\n * @protected\n */\ngoog.events.EventTarget.prototype.disposeInternal = function() {\n  'use strict';\n  goog.events.EventTarget.superClass_.disposeInternal.call(this);\n\n  this.removeAllListeners();\n  this.parentEventTarget_ = null;\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n * @template SCOPE,EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.listen = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  'use strict';\n  this.assertInitialized_();\n  return this.eventTargetListeners_.add(\n      String(type), listener, false /* callOnce */, opt_useCapture,\n      opt_listenerScope);\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n * @template SCOPE,EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.listenOnce = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  'use strict';\n  return this.eventTargetListeners_.add(\n      String(type), listener, true /* callOnce */, opt_useCapture,\n      opt_listenerScope);\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call\n *     the listener.\n * @return {boolean} Whether any listener was removed.\n * @template SCOPE,EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.unlisten = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  'use strict';\n  return this.eventTargetListeners_.remove(\n      String(type), listener, opt_useCapture, opt_listenerScope);\n};\n\n\n/**\n * @param {!goog.events.ListenableKey} key The key returned by\n *     listen() or listenOnce().\n * @return {boolean} Whether any listener was removed.\n * @override\n */\ngoog.events.EventTarget.prototype.unlistenByKey = function(key) {\n  'use strict';\n  return this.eventTargetListeners_.removeByKey(key);\n};\n\n\n/**\n * @param {string|!goog.events.EventId=} opt_type Type of event to remove,\n *     default is to remove all types.\n * @return {number} Number of listeners removed.\n * @override\n */\ngoog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {\n  'use strict';\n  // TODO(chrishenry): Previously, removeAllListeners can be called on\n  // uninitialized EventTarget, so we preserve that behavior. We\n  // should remove this when usages that rely on that fact are purged.\n  if (!this.eventTargetListeners_) {\n    return 0;\n  }\n  return this.eventTargetListeners_.removeAll(opt_type);\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The type of the\n *     listeners to fire.\n * @param {boolean} capture The capture mode of the listeners to fire.\n * @param {EVENTOBJ} eventObject The event object to fire.\n * @return {boolean} Whether all listeners succeeded without\n *     attempting to prevent default behavior. If any listener returns\n *     false or called goog.events.Event#preventDefault, this returns\n *     false.\n * @template EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.fireListeners = function(\n    type, capture, eventObject) {\n  'use strict';\n  // TODO(chrishenry): Original code avoids array creation when there\n  // is no listener, so we do the same. If this optimization turns\n  // out to be not required, we can replace this with\n  // getListeners(type, capture) instead, which is simpler.\n  var listenerArray = this.eventTargetListeners_.listeners[String(type)];\n  if (!listenerArray) {\n    return true;\n  }\n  listenerArray = listenerArray.concat();\n\n  var rv = true;\n  for (var i = 0; i < listenerArray.length; ++i) {\n    var listener = listenerArray[i];\n    // We might not have a listener if the listener was removed.\n    if (listener && !listener.removed && listener.capture == capture) {\n      var listenerFn = listener.listener;\n      var listenerHandler = listener.handler || listener.src;\n\n      if (listener.callOnce) {\n        this.unlistenByKey(listener);\n      }\n      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;\n    }\n  }\n\n  return rv && !eventObject.defaultPrevented;\n};\n\n\n/**\n * @param {string|!goog.events.EventId} type The type of the listeners to fire.\n * @param {boolean} capture The capture mode of the listeners to fire.\n * @return {!Array<!goog.events.ListenableKey>} An array of registered\n *     listeners.\n * @template EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.getListeners = function(type, capture) {\n  'use strict';\n  return this.eventTargetListeners_.getListeners(String(type), capture);\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The name of the event\n *     without the 'on' prefix.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener The\n *     listener function to get.\n * @param {boolean} capture Whether the listener is a capturing listener.\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {?goog.events.ListenableKey} the found listener or null if not found.\n * @template SCOPE,EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.getListener = function(\n    type, listener, capture, opt_listenerScope) {\n  'use strict';\n  return this.eventTargetListeners_.getListener(\n      String(type), listener, capture, opt_listenerScope);\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>=} opt_type Event type.\n * @param {boolean=} opt_capture Whether to check for capture or bubble\n *     listeners.\n * @return {boolean} Whether there is any active listeners matching\n *     the requested type and/or capture phase.\n * @template EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.hasListener = function(\n    opt_type, opt_capture) {\n  'use strict';\n  var id = (opt_type !== undefined) ? String(opt_type) : undefined;\n  return this.eventTargetListeners_.hasListener(id, opt_capture);\n};\n\n\n/**\n * Sets the target to be used for `event.target` when firing\n * event. Mainly used for testing. For example, see\n * `goog.testing.events.mixinListenable`.\n * @param {!Object} target The target.\n */\ngoog.events.EventTarget.prototype.setTargetForTesting = function(target) {\n  'use strict';\n  this.actualEventTarget_ = target;\n};\n\n\n/**\n * Asserts that the event target instance is initialized properly.\n * @private\n */\ngoog.events.EventTarget.prototype.assertInitialized_ = function() {\n  'use strict';\n  goog.asserts.assert(\n      this.eventTargetListeners_,\n      'Event target is not initialized. Did you call the superclass ' +\n          '(goog.events.EventTarget) constructor?');\n};\n\n\n/**\n * Dispatches the given event on the ancestorsTree.\n *\n * @param {!Object} target The target to dispatch on.\n * @param {goog.events.Event|Object|string} e The event object.\n * @param {Array<goog.events.Listenable>=} opt_ancestorsTree The ancestors\n *     tree of the target, in reverse order from the closest ancestor\n *     to the root event target. May be null if the target has no ancestor.\n * @return {boolean} If anyone called preventDefault on the event object (or\n *     if any of the listeners returns false) this will also return false.\n * @private\n */\ngoog.events.EventTarget.dispatchEventInternal_ = function(\n    target, e, opt_ancestorsTree) {\n  'use strict';\n  /** @suppress {missingProperties} */\n  var type = e.type || /** @type {string} */ (e);\n\n  // If accepting a string or object, create a custom event object so that\n  // preventDefault and stopPropagation work with the event.\n  if (typeof e === 'string') {\n    e = new goog.events.Event(e, target);\n  } else if (!(e instanceof goog.events.Event)) {\n    var oldEvent = e;\n    e = new goog.events.Event(type, target);\n    goog.object.extend(e, oldEvent);\n  } else {\n    e.target = e.target || target;\n  }\n\n  var rv = true, currentTarget;\n\n  // Executes all capture listeners on the ancestors, if any.\n  if (opt_ancestorsTree) {\n    for (var i = opt_ancestorsTree.length - 1;\n         !e.hasPropagationStopped() && i >= 0; i--) {\n      currentTarget = e.currentTarget = opt_ancestorsTree[i];\n      rv = currentTarget.fireListeners(type, true, e) && rv;\n    }\n  }\n\n  // Executes capture and bubble listeners on the target.\n  if (!e.hasPropagationStopped()) {\n    currentTarget = /** @type {?} */ (e.currentTarget = target);\n    rv = currentTarget.fireListeners(type, true, e) && rv;\n    if (!e.hasPropagationStopped()) {\n      rv = currentTarget.fireListeners(type, false, e) && rv;\n    }\n  }\n\n  // Executes all bubble listeners on the ancestors, if any.\n  if (opt_ancestorsTree) {\n    for (i = 0; !e.hasPropagationStopped() && i < opt_ancestorsTree.length;\n         i++) {\n      currentTarget = e.currentTarget = opt_ancestorsTree[i];\n      rv = currentTarget.fireListeners(type, false, e) && rv;\n    }\n  }\n\n  return rv;\n};\n"],
"names":["goog","provide","require","requireType","events","EventTarget","goog.events.EventTarget","Disposable","call","eventTargetListeners_","ListenerMap","actualEventTarget_","parentEventTarget_","inherits","Listenable","addImplementation","MAX_ANCESTORS_","prototype","getParentEventTarget","goog.events.EventTarget.prototype.getParentEventTarget","setParentEventTarget","goog.events.EventTarget.prototype.setParentEventTarget","parent","addEventListener","goog.events.EventTarget.prototype.addEventListener","type","handler","opt_capture","opt_handlerScope","listen","removeEventListener","goog.events.EventTarget.prototype.removeEventListener","unlisten","dispatchEvent","goog.events.EventTarget.prototype.dispatchEvent","e","assertInitialized_","ancestorsTree","ancestor","ancestorCount","push","asserts","assert","dispatchEventInternal_","disposeInternal","goog.events.EventTarget.prototype.disposeInternal","superClass_","removeAllListeners","goog.events.EventTarget.prototype.listen","listener","opt_useCapture","opt_listenerScope","add","String","listenOnce","goog.events.EventTarget.prototype.listenOnce","goog.events.EventTarget.prototype.unlisten","remove","unlistenByKey","goog.events.EventTarget.prototype.unlistenByKey","key","removeByKey","goog.events.EventTarget.prototype.removeAllListeners","opt_type","removeAll","fireListeners","goog.events.EventTarget.prototype.fireListeners","capture","eventObject","listenerArray","listeners","concat","rv","i","length","removed","listenerFn","listenerHandler","src","callOnce","defaultPrevented","getListeners","goog.events.EventTarget.prototype.getListeners","getListener","goog.events.EventTarget.prototype.getListener","hasListener","goog.events.EventTarget.prototype.hasListener","id","undefined","setTargetForTesting","goog.events.EventTarget.prototype.setTargetForTesting","target","goog.events.EventTarget.prototype.assertInitialized_","goog.events.EventTarget.dispatchEventInternal_","opt_ancestorsTree","Event","oldEvent","object","extend","currentTarget","hasPropagationStopped"]
}
