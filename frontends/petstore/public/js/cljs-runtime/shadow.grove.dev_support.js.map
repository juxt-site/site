{"version":3,"sources":["shadow/grove/dev_support.cljs"],"mappings":"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","names":["js/shadow","js/shadow.grove","js/shadow.grove.dev-support","js/shadow.grove.dev-support.perf-data-ref","shadow.grove.dev-support/perf-data-ref","cljs.core.atom","shadow.grove.dev-support/safe-inc","x","cljs.core/PROTOCOL_SENTINEL","shadow.grove.components/ManagedComponent","this","cljs.core/vec","cljs.core.array_seq","cljs.core.map","hook","cljs.core/not","shadow.grove.protocols/hook-value","component","writer","opts","cljs.core/-pr-writer","cljs.core.symbol","shadow.grove.protocols/ComponentConfig","shadow.grove.components/HookConfig","shadow.grove.components/SimpleVal","shadow.grove.impl/HookQuery","shadow.arborist/TreeRoot","js/Map","cljs.core/persistent!","cljs.core.reduce","m","k","cljs.core.assoc_BANG_","cljs.core/transient","js/Set","s","v","cljs.core.conj_BANG_","shadow.grove.db.ident/Ident","shadow.grove.db/ident-key","shadow.grove.db/ident-val","this__5330__auto__","writer__5331__auto__","opt__5332__auto__","cljs.core/-write","shadow.grove.dev-support/IdentFormatter","shadow.grove.dev-support/->IdentFormatter","obj","shadow.grove.db/ident?","temp__5804__auto__","f","js/goog.global.devtoolsFormatters","G__13447","shadow.grove.dev-support/find-owning-component","e","current","and__5043__auto__","cljs.core._EQ_","temp__5806__auto__","prev","temp__5808__auto__","parent","shadow.grove.dev-support/select-element","border-highlight","G__13478","js/document.createElement","goog.style/setStyle","highlight-ref","mouse-hook*","cljs.core/deref","cljs.core/reset!","marker-before","shadow.arborist.protocols/dom-first","nodes","cljs.core.not_EQ_","cljs.core.conj","cljs.core/seq","start","cljs.core/first","end","cljs.core/last","start-box","goog.style/getBounds","end-box","style","mouse-hook","goog.functions/throttle","overlay","G__13482","all-your-clicks","js/document.removeEventListener","selected","js/console.log","cljs.core/tap>","js/document.body.appendChild","js/document.addEventListener","js/window.addEventListener","js/shadow.grove.dev-support.keyboard-hook","shadow.grove.dev-support/keyboard-hook"],"sourcesContent":["(ns shadow.grove.dev-support\n  (:require\n    [goog.functions :as gfn]\n    [goog.style :as gs]\n    [goog.positioning :as goog-pos]\n    [clojure.core.protocols :as cp]\n    [shadow.remote.runtime.api :as rapi]\n    [shadow.debug :refer (?> ?-> ?->>)]\n    [shadow.arborist.protocols :as p]\n    [shadow.grove.components :as comp]\n    [shadow.grove :as sg]\n    [shadow.grove.protocols :as sp]\n    [shadow.arborist :as sa]\n    [shadow.grove.db :as db]\n    [shadow.grove.db.ident :as db-ident]\n    [shadow.grove.protocols :as gp]\n    [shadow.grove.impl :as impl]))\n\n;; sketch of some of the development support might work\n\n;; never used in production anyways\n(set! *warn-on-infer* false)\n\n(defonce perf-data-ref (atom {}))\n\n(defn safe-inc [x]\n  (if (nil? x)\n    1\n    (inc x)))\n\n(extend-type comp/ManagedComponent\n  cp/Datafiable\n  (datafy [this]\n    {:component-name (-> this .-config .-component-name)\n     :config (.-config this)\n     :parent-env (.-parent-env this)\n     :component-env (.-component-env this)\n     :args (.-args this)\n     :rendered-args (.-rendered-args this)\n     :events (.-events this)\n     :root (.-root this)\n     :current-idx (.-current-idx this)\n     :hooks (vec (.-hooks this))\n     :hook-values\n     (->> (array-seq (.-hooks this))\n          (map (fn [hook]\n                 (if-not hook\n                   :uninitialized\n                   (gp/hook-value hook))))\n          (vec))\n     :dirty-from-args (.-dirty-from-args this)\n     :dirty-hooks (.-dirty-hooks this)\n     :updated-hooks (.-updated-hooks this)\n     :needs-render? (.-needs-render? this)\n     :suspended? (.-suspended? this)\n     :destroyed? (.-destroyed? this)})\n\n  IPrintWithWriter\n  (-pr-writer [component writer opts]\n    (-pr-writer\n      [::comp/ManageComponent\n       (symbol (-> component .-config .-component-name))]\n      writer\n      opts)))\n\n(extend-type gp/ComponentConfig\n  cp/Datafiable\n  (datafy [this]\n    {:component-name (.-component-name this)\n     :hooks (.-hooks this)\n     :opts (.-opts this)\n     :render-deps (.-render-deps this)}))\n\n(extend-type comp/HookConfig\n  cp/Datafiable\n  (datafy [this]\n    {:depends-on (.-depends-on this)\n     :affects (.-affects this)}))\n\n(extend-type comp/SimpleVal\n  cp/Datafiable\n  (datafy [this]\n    {:val (.-val this)}))\n\n(extend-type impl/HookQuery\n  cp/Datafiable\n  (datafy [this]\n    {:ident (.-ident this)\n     :query (.-query this)\n     :config (.-config this)\n     :query-id (.-query-id this)\n     :ready? (.-ready? this)\n     :read-count (.-read-count this)\n     :read-keys (.-read-keys this)\n     :read-result (.-read-result this)}\n    )\n\n  IPrintWithWriter\n  (-pr-writer [this writer opts]\n    (-pr-writer\n      [::sg/QueryHook\n       (.-query-id this)\n       (.-ident this)\n       (.-query this)]\n      writer\n      opts)))\n\n#_(extend-type sa/TreeScheduler\n    cp/Datafiable\n    (datafy [this]\n      {:root (.-root this)\n       :pending-ref (.-pending-ref this)\n       :update-pending? (.-update-pending? this)}))\n\n(extend-type sa/TreeRoot\n  cp/Datafiable\n  (datafy [this]\n    {:container (.-container this)\n     :env (.-env this)\n     :root (.-root this)}))\n\n(extend-type js/Map\n  cp/Datafiable\n  (datafy [this]\n    (persistent!\n      (reduce\n        (fn [m k]\n          (assoc! m k (.get this k)))\n        (transient {})\n        (.keys this)))))\n\n(extend-type js/Set\n  cp/Datafiable\n  (datafy [this]\n    (persistent!\n      (reduce\n        (fn [s v]\n          (conj! s v))\n        (transient #{})\n        (.values this)))))\n\n(extend-type db-ident/Ident\n  cp/Datafiable\n  (datafy [this]\n    [(db/ident-key this)\n     (db/ident-val this)]))\n\n(deftype IdentFormatter []\n  Object\n  (header [this obj]\n    (when (db/ident? obj)\n      #js [\"span\" \"#gbd/ident [\"\n           #js [\"object\" #js {:object (db/ident-key obj)}]\n           \" \"\n           #js [\"object\" #js {:object (db/ident-val obj)}]\n           \"]\"]))\n\n  (hasBody [this obj]\n    false)\n  (body [this m]\n    nil))\n\n(when-let [^js f js/goog.global.devtoolsFormatters]\n  (doto f\n    (.push (IdentFormatter.))\n    ))\n\n(defn find-owning-component [e]\n  (loop [current (.. e -target)]\n    (if (and (= \"#comment\" (.-nodeName current))\n             (.-shadow$instance current))\n      (.-shadow$instance current)\n      (if-some [prev (.-previousSibling current)]\n        (recur prev)\n        (when-some [parent (.-parentNode current)]\n          (recur parent))))))\n\n(defn select-element []\n  (let [border-highlight\n        (doto (js/document.createElement \"div\")\n          (gs/setStyle\n            #js {\"border\" \"1px solid red\"\n                 \"position\" \"absolute\"\n                 \"pointer-events\" \"none\"\n                 \"z-index\" \"1000\"\n                 \"top\" \"0px\"\n                 \"left\" \"0px\"\n                 \"width\" \"0px\"\n                 \"height\" \"0px\"}))\n\n        highlight-ref (atom nil)\n\n        mouse-hook*\n        (fn mouse-hook* [e]\n          (when-some [component (find-owning-component e)]\n            (when-not (identical? component @highlight-ref)\n              (reset! highlight-ref component)\n              (let [marker-before (p/dom-first component)\n                    nodes\n                    (loop [current (.-nextSibling marker-before)\n                           nodes []]\n                      (if (identical? (.-shadow$instance current) component)\n                        nodes\n                        (recur\n                          (.-nextSibling current)\n                          (if (not= (.-nodeType current) 1)\n                            nodes\n                            (conj nodes current)))))]\n\n                (when (seq nodes)\n                  (let [start (first nodes)\n                        end (last nodes)\n\n                        start-box (gs/getBounds start)\n                        end-box (gs/getBounds end)\n\n                        style #js {\"top\" (str (.-top start-box) \"px\")\n                                   \"left\" (str (.-left start-box) \"px\")\n                                   \"height\" (-> (+ (.-top end-box) (.-height end-box))\n                                                (- (.-top start-box))\n                                                (str \"px\"))\n                                   \"width\" (str (.-width start-box) \"px\")}]\n\n                    (gs/setStyle border-highlight style)))))))\n\n        mouse-hook (gfn/throttle mouse-hook* 100)\n\n\n        overlay\n        (doto (js/document.createElement \"div\")\n          (gs/setStyle\n            #js {\"position\" \"absolute\"\n                 \"pointer-events\" \"none\"\n                 \"z-index\" \"10000\"\n                 \"top\" \"0px\"\n                 \"left\" \"0px\"\n                 \"bottom\" \"0px\"\n                 \"right\" \"0px\"}))\n\n        all-your-clicks\n        (fn [e]\n          (.preventDefault e)\n          (.remove border-highlight)\n          (js/document.removeEventListener \"mousemove\" mouse-hook)\n          (when-some [selected @highlight-ref]\n            (js/console.log \"selected\" selected)\n            (tap> selected)))]\n\n    (js/document.body.appendChild border-highlight)\n    (js/document.addEventListener \"mousemove\" mouse-hook)\n    (js/window.addEventListener \"click\" all-your-clicks #js {:once true :capture true})))\n\n(defonce keyboard-hook\n  (do (js/window.addEventListener\n        \"keydown\"\n        (fn [e]\n          ;; ctrl+shift+s\n          (when (and (= (.-key e) \"S\") (.-ctrlKey e) (.-shiftKey e))\n            (select-element))))\n      true))\n"]}