{"version":3,"sources":["ajax/xhrio.cljs"],"mappings":"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","names":["cljs.core/PROTOCOL_SENTINEL","js/goog.net.XhrIo","p__22541","map__22542","cljs.core/--destructure-map","cljs.core.get","this","uri","method","body","headers","timeout","with-credentials","response-format","progress-handler","handler","temp__5804__auto__","response-type","cljs.core/name","cljs.core/fn?","G__22544","goog.events/listen","js/goog.net.EventType.UPLOAD_PROGRESS","G__22545","p1__22539#","goog.net.EventType/COMPLETE","G__22546","cljs.core/clj->js","goog.net.ErrorCode/ABORT","cljs.core.js__GT_clj","header","cljs.core._EQ_","js/goog.net.XhrManager","p__22553","map__22557","id","priority","max-retries","G__22572"],"sourcesContent":["(ns ajax.xhrio\n  (:require goog.net.EventType\n            goog.net.ErrorCode\n            [goog.net.XhrIo :as xhr]\n            [goog.net.XhrManager :as xhrm]\n            [goog.Uri :as uri]\n            [goog.json :as goog-json]\n            [goog.events :as events]\n            [ajax.protocols :refer [AjaxImpl AjaxRequest\n                                    AjaxResponse Interceptor]]))\n\n(extend-type goog.net.XhrIo\n  AjaxImpl\n  (-js-ajax-request\n    [this\n     {:keys [uri method body headers timeout with-credentials\n             response-format progress-handler]\n      :or {with-credentials false\n           timeout 0}}\n     handler]\n    (when-let [response-type (:type response-format)]\n      (.setResponseType this (name response-type)))\n    (when (fn? progress-handler)\n      (doto this\n        (.setProgressEventsEnabled true)\n        (events/listen goog.net.EventType.UPLOAD_PROGRESS progress-handler)))\n    (doto this\n      (events/listen goog.net.EventType/COMPLETE\n                     #(handler (.-target %)))\n      (.setTimeoutInterval timeout)\n      (.setWithCredentials with-credentials)\n      (.send uri method body (clj->js headers))))\n  AjaxRequest\n  (-abort [this] (.abort this goog.net.ErrorCode/ABORT))\n  AjaxResponse\n  (-body [this] (.getResponse this))\n  (-status [this] (.getStatus this))\n  (-status-text [this] (.getStatusText this))\n  (-get-all-headers [this]\n    (js->clj (.getResponseHeaders this)))\n  (-get-response-header [this header]\n    (.getResponseHeader this header))\n  (-was-aborted [this]\n    (= (.getLastErrorCode this) goog.net.ErrorCode/ABORT)))\n\n(extend-type goog.net.XhrManager\n  AjaxImpl\n  (-js-ajax-request\n    [this {:keys [uri method body headers\n                  id timeout priority max-retries]\n           :or {timeout 0}}\n     handler]\n    (doto this\n      (.setTimeoutInterval timeout)\n      (.send id uri method body (clj->js headers)\n             priority handler max-retries))))\n"]}