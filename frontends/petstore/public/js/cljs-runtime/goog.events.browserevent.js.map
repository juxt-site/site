{
"version":3,
"file":"goog.events.browserevent.js",
"lineCount":129,
"mappings":"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",
"sources":["goog/events/browserevent.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A patched, standardized event object for browser events.\n *\n * <pre>\n * The patched event object contains the following members:\n * - type           {string}    Event type, e.g. 'click'\n * - target         {Object}    The element that actually triggered the event\n * - currentTarget  {Object}    The element the listener is attached to\n * - relatedTarget  {Object}    For mouseover and mouseout, the previous object\n * - offsetX        {number}    X-coordinate relative to target\n * - offsetY        {number}    Y-coordinate relative to target\n * - clientX        {number}    X-coordinate relative to viewport\n * - clientY        {number}    Y-coordinate relative to viewport\n * - screenX        {number}    X-coordinate relative to the edge of the screen\n * - screenY        {number}    Y-coordinate relative to the edge of the screen\n * - button         {number}    Mouse button. Use isButton() to test.\n * - keyCode        {number}    Key-code\n * - ctrlKey        {boolean}   Was ctrl key depressed\n * - altKey         {boolean}   Was alt key depressed\n * - shiftKey       {boolean}   Was shift key depressed\n * - metaKey        {boolean}   Was meta key depressed\n * - pointerId      {number}    Pointer ID\n * - pointerType    {string}    Pointer type, e.g. 'mouse', 'pen', or 'touch'\n * - defaultPrevented {boolean} Whether the default action has been prevented\n * - state          {Object}    History state object\n *\n * NOTE: The keyCode member contains the raw browser keyCode. For normalized\n * key and character code use {@link goog.events.KeyHandler}.\n * </pre>\n */\n\ngoog.provide('goog.events.BrowserEvent');\ngoog.provide('goog.events.BrowserEvent.MouseButton');\ngoog.provide('goog.events.BrowserEvent.PointerType');\n\ngoog.require('goog.debug');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.EventType');\ngoog.require('goog.reflect');\ngoog.require('goog.userAgent');\n\n/**\n * @define {boolean} If true, use the layerX and layerY properties of a native\n * browser event over the offsetX and offsetY properties, which cause expensive\n * reflow. If layerX or layerY is not defined, offsetX and offsetY will be used\n * as usual.\n */\ngoog.events.USE_LAYER_XY_AS_OFFSET_XY =\n    goog.define('goog.events.USE_LAYER_XY_AS_OFFSET_XY', false);\n\n/**\n * Accepts a browser event object and creates a patched, cross browser event\n * object.\n * The content of this object will not be initialized if no event object is\n * provided. If this is the case, init() needs to be invoked separately.\n * @param {Event=} opt_e Browser event object.\n * @param {EventTarget=} opt_currentTarget Current target for event.\n * @constructor\n * @extends {goog.events.Event}\n */\ngoog.events.BrowserEvent = function(opt_e, opt_currentTarget) {\n  'use strict';\n  goog.events.BrowserEvent.base(this, 'constructor', opt_e ? opt_e.type : '');\n\n  /**\n   * Target that fired the event.\n   * @override\n   * @type {?Node}\n   */\n  this.target = null;\n\n  /**\n   * Node that had the listener attached.\n   * @override\n   * @type {?Node|undefined}\n   */\n  this.currentTarget = null;\n\n  /**\n   * For mouseover and mouseout events, the related object for the event.\n   * @type {?Node}\n   */\n  this.relatedTarget = null;\n\n  /**\n   * X-coordinate relative to target.\n   * @type {number}\n   */\n  this.offsetX = 0;\n\n  /**\n   * Y-coordinate relative to target.\n   * @type {number}\n   */\n  this.offsetY = 0;\n\n  /**\n   * X-coordinate relative to the window.\n   * @type {number}\n   */\n  this.clientX = 0;\n\n  /**\n   * Y-coordinate relative to the window.\n   * @type {number}\n   */\n  this.clientY = 0;\n\n  /**\n   * X-coordinate relative to the monitor.\n   * @type {number}\n   */\n  this.screenX = 0;\n\n  /**\n   * Y-coordinate relative to the monitor.\n   * @type {number}\n   */\n  this.screenY = 0;\n\n  /**\n   * Which mouse button was pressed.\n   * @type {number}\n   */\n  this.button = 0;\n\n  /**\n   * Key of key press.\n   * @type {string}\n   */\n  this.key = '';\n\n  /**\n   * Keycode of key press.\n   * @type {number}\n   */\n  this.keyCode = 0;\n\n  /**\n   * Keycode of key press.\n   * @type {number}\n   */\n  this.charCode = 0;\n\n  /**\n   * Whether control was pressed at time of event.\n   * @type {boolean}\n   */\n  this.ctrlKey = false;\n\n  /**\n   * Whether alt was pressed at time of event.\n   * @type {boolean}\n   */\n  this.altKey = false;\n\n  /**\n   * Whether shift was pressed at time of event.\n   * @type {boolean}\n   */\n  this.shiftKey = false;\n\n  /**\n   * Whether the meta key was pressed at time of event.\n   * @type {boolean}\n   */\n  this.metaKey = false;\n\n  /**\n   * History state object, only set for PopState events where it's a copy of the\n   * state object provided to pushState or replaceState.\n   * @type {?Object}\n   */\n  this.state = null;\n\n  /**\n   * Whether the default platform modifier key was pressed at time of event.\n   * (This is control for all platforms except Mac, where it's Meta.)\n   * @type {boolean}\n   */\n  this.platformModifierKey = false;\n\n  /**\n   * @type {number}\n   */\n  this.pointerId = 0;\n\n  /**\n   * @type {string}\n   */\n  this.pointerType = '';\n\n  /**\n   * The browser event object.\n   * @private {?Event}\n   */\n  this.event_ = null;\n\n  if (opt_e) {\n    this.init(opt_e, opt_currentTarget);\n  }\n};\ngoog.inherits(goog.events.BrowserEvent, goog.events.Event);\n\n\n/**\n * Normalized button constants for the mouse.\n * @enum {number}\n */\ngoog.events.BrowserEvent.MouseButton = {\n  LEFT: 0,\n  MIDDLE: 1,\n  RIGHT: 2\n};\n\n\n/**\n * Normalized pointer type constants for pointer events.\n * @enum {string}\n */\ngoog.events.BrowserEvent.PointerType = {\n  MOUSE: 'mouse',\n  PEN: 'pen',\n  TOUCH: 'touch'\n};\n\n\n/**\n * Static data for mapping mouse buttons.\n * @type {!Array<number>}\n * @deprecated Use `goog.events.BrowserEvent.IE_BUTTON_MAP` instead.\n */\ngoog.events.BrowserEvent.IEButtonMap = goog.debug.freeze([\n  1,  // LEFT\n  4,  // MIDDLE\n  2   // RIGHT\n]);\n\n\n/**\n * Static data for mapping mouse buttons.\n * @const {!Array<number>}\n */\ngoog.events.BrowserEvent.IE_BUTTON_MAP = goog.events.BrowserEvent.IEButtonMap;\n\n\n/**\n * Static data for mapping MSPointerEvent types to PointerEvent types.\n * @const {!Object<number, goog.events.BrowserEvent.PointerType>}\n */\ngoog.events.BrowserEvent.IE_POINTER_TYPE_MAP = goog.debug.freeze({\n  2: goog.events.BrowserEvent.PointerType.TOUCH,\n  3: goog.events.BrowserEvent.PointerType.PEN,\n  4: goog.events.BrowserEvent.PointerType.MOUSE\n});\n\n\n/**\n * Accepts a browser event object and creates a patched, cross browser event\n * object.\n * @param {Event} e Browser event object.\n * @param {EventTarget=} opt_currentTarget Current target for event.\n */\ngoog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {\n  'use strict';\n  var type = this.type = e.type;\n\n  /**\n   * On touch devices use the first \"changed touch\" as the relevant touch.\n   * @type {?Touch}\n   */\n  var relevantTouch =\n      e.changedTouches && e.changedTouches.length ? e.changedTouches[0] : null;\n\n  // TODO(nicksantos): Change this.target to type EventTarget.\n  this.target = /** @type {Node} */ (e.target) || e.srcElement;\n\n  // TODO(nicksantos): Change this.currentTarget to type EventTarget.\n  this.currentTarget = /** @type {Node} */ (opt_currentTarget);\n\n  var relatedTarget = /** @type {Node} */ (e.relatedTarget);\n  if (relatedTarget) {\n    // There's a bug in FireFox where sometimes, relatedTarget will be a\n    // chrome element, and accessing any property of it will get a permission\n    // denied exception. See:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=497780\n    if (goog.userAgent.GECKO) {\n      if (!goog.reflect.canAccessProperty(relatedTarget, 'nodeName')) {\n        relatedTarget = null;\n      }\n    }\n  } else if (type == goog.events.EventType.MOUSEOVER) {\n    relatedTarget = e.fromElement;\n  } else if (type == goog.events.EventType.MOUSEOUT) {\n    relatedTarget = e.toElement;\n  }\n\n  this.relatedTarget = relatedTarget;\n\n  if (relevantTouch) {\n    this.clientX = relevantTouch.clientX !== undefined ? relevantTouch.clientX :\n                                                         relevantTouch.pageX;\n    this.clientY = relevantTouch.clientY !== undefined ? relevantTouch.clientY :\n                                                         relevantTouch.pageY;\n    this.screenX = relevantTouch.screenX || 0;\n    this.screenY = relevantTouch.screenY || 0;\n  } else {\n    if (goog.events.USE_LAYER_XY_AS_OFFSET_XY) {\n      this.offsetX = (e.layerX !== undefined) ? e.layerX : e.offsetX;\n      this.offsetY = (e.layerY !== undefined) ? e.layerY : e.offsetY;\n    } else {\n      // Webkit emits a lame warning whenever layerX/layerY is accessed.\n      // http://code.google.com/p/chromium/issues/detail?id=101733\n      this.offsetX = (goog.userAgent.WEBKIT || e.offsetX !== undefined) ?\n          e.offsetX :\n          e.layerX;\n      this.offsetY = (goog.userAgent.WEBKIT || e.offsetY !== undefined) ?\n          e.offsetY :\n          e.layerY;\n    }\n    this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;\n    this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;\n    this.screenX = e.screenX || 0;\n    this.screenY = e.screenY || 0;\n  }\n\n  this.button = e.button;\n\n  this.keyCode = e.keyCode || 0;\n  this.key = e.key || '';\n  this.charCode = e.charCode || (type == 'keypress' ? e.keyCode : 0);\n  this.ctrlKey = e.ctrlKey;\n  this.altKey = e.altKey;\n  this.shiftKey = e.shiftKey;\n  this.metaKey = e.metaKey;\n  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;\n  this.pointerId = e.pointerId || 0;\n  this.pointerType = goog.events.BrowserEvent.getPointerType_(e);\n  this.state = e.state;\n  this.event_ = e;\n  if (e.defaultPrevented) {\n    // Sync native event state to internal state via super class, where default\n    // prevention is implemented and managed.\n    goog.events.BrowserEvent.superClass_.preventDefault.call(this);\n  }\n};\n\n\n/**\n * Tests to see which button was pressed during the event. This is really only\n * useful in IE and Gecko browsers. And in IE, it's only useful for\n * mousedown/mouseup events, because click only fires for the left mouse button.\n *\n * Safari 2 only reports the left button being clicked, and uses the value '1'\n * instead of 0. Opera only reports a mousedown event for the middle button, and\n * no mouse events for the right button. Opera has default behavior for left and\n * middle click that can only be overridden via a configuration setting.\n *\n * There's a nice table of this mess at http://www.unixpapa.com/js/mouse.html.\n *\n * @param {goog.events.BrowserEvent.MouseButton} button The button\n *     to test for.\n * @return {boolean} True if button was pressed.\n */\ngoog.events.BrowserEvent.prototype.isButton = function(button) {\n  'use strict';\n  return this.event_.button == button;\n};\n\n\n/**\n * Whether this has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @return {boolean} The result.\n */\ngoog.events.BrowserEvent.prototype.isMouseActionButton = function() {\n  'use strict';\n  // Ctrl+click should never behave like a left-click on mac, regardless of\n  // whether or not the browser will actually ever emit such an event.  If\n  // we see it, treat it like right-click always.\n  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) &&\n      !(goog.userAgent.MAC && this.ctrlKey);\n};\n\n\n/**\n * @override\n */\ngoog.events.BrowserEvent.prototype.stopPropagation = function() {\n  'use strict';\n  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);\n  if (this.event_.stopPropagation) {\n    this.event_.stopPropagation();\n  } else {\n    this.event_.cancelBubble = true;\n  }\n};\n\n\n/**\n * @override\n */\ngoog.events.BrowserEvent.prototype.preventDefault = function() {\n  'use strict';\n  goog.events.BrowserEvent.superClass_.preventDefault.call(this);\n  var be = this.event_;\n  if (!be.preventDefault) {\n    be.returnValue = false;\n  } else {\n    be.preventDefault();\n  }\n};\n\n\n/**\n * @return {Event} The underlying browser event object.\n */\ngoog.events.BrowserEvent.prototype.getBrowserEvent = function() {\n  'use strict';\n  return this.event_;\n};\n\n\n/**\n * Extracts the pointer type from the given event.\n * @param {!Event} e\n * @return {string} The pointer type, e.g. 'mouse', 'pen', or 'touch'.\n * @private\n */\ngoog.events.BrowserEvent.getPointerType_ = function(e) {\n  'use strict';\n  if (typeof (e.pointerType) === 'string') {\n    return e.pointerType;\n  }\n  // IE10 uses integer codes for pointer type.\n  // https://msdn.microsoft.com/en-us/library/hh772359(v=vs.85).aspx\n  return goog.events.BrowserEvent.IE_POINTER_TYPE_MAP[e.pointerType] || '';\n};\n"],
"names":["goog","provide","require","events","USE_LAYER_XY_AS_OFFSET_XY","define","BrowserEvent","goog.events.BrowserEvent","opt_e","opt_currentTarget","base","type","target","currentTarget","relatedTarget","offsetX","offsetY","clientX","clientY","screenX","screenY","button","key","keyCode","charCode","ctrlKey","altKey","shiftKey","metaKey","state","platformModifierKey","pointerId","pointerType","event_","init","inherits","Event","MouseButton","LEFT","MIDDLE","RIGHT","PointerType","MOUSE","PEN","TOUCH","IEButtonMap","debug","freeze","IE_BUTTON_MAP","IE_POINTER_TYPE_MAP","prototype","goog.events.BrowserEvent.prototype.init","e","relevantTouch","changedTouches","length","srcElement","userAgent","GECKO","reflect","canAccessProperty","EventType","MOUSEOVER","fromElement","MOUSEOUT","toElement","undefined","pageX","pageY","layerX","layerY","WEBKIT","MAC","getPointerType_","defaultPrevented","superClass_","preventDefault","call","isButton","goog.events.BrowserEvent.prototype.isButton","isMouseActionButton","goog.events.BrowserEvent.prototype.isMouseActionButton","stopPropagation","goog.events.BrowserEvent.prototype.stopPropagation","cancelBubble","goog.events.BrowserEvent.prototype.preventDefault","be","returnValue","getBrowserEvent","goog.events.BrowserEvent.prototype.getBrowserEvent","goog.events.BrowserEvent.getPointerType_"]
}
