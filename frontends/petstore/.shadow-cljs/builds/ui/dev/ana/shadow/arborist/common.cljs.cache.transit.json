["^ ","~:output",["^ ","~:js","goog.provide('shadow.arborist.common');\nshadow.arborist.common.ifn1_wrap = (function shadow$arborist$common$ifn1_wrap(x){\nif(x.cljs$core$IFn$_invoke$arity$1){\nreturn (function (a){\nreturn x.cljs$core$IFn$_invoke$arity$1(a);\n});\n} else {\nreturn x;\n}\n});\nshadow.arborist.common.ifn2_wrap = (function shadow$arborist$common$ifn2_wrap(x){\nif(x.cljs$core$IFn$_invoke$arity$2){\nreturn (function (a,b,c){\nreturn x.cljs$core$IFn$_invoke$arity$2(a,b);\n});\n} else {\nreturn x;\n}\n});\nshadow.arborist.common.ifn3_wrap = (function shadow$arborist$common$ifn3_wrap(x){\nif(x.cljs$core$IFn$_invoke$arity$3){\nreturn (function (a,b,c){\nreturn x.cljs$core$IFn$_invoke$arity$3(a,b,c);\n});\n} else {\nreturn x;\n}\n});\nshadow.arborist.common.dom_marker = (function shadow$arborist$common$dom_marker(var_args){\nvar G__11448 = arguments.length;\nswitch (G__11448) {\ncase 1:\nreturn shadow.arborist.common.dom_marker.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn shadow.arborist.common.dom_marker.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(shadow.arborist.common.dom_marker.cljs$core$IFn$_invoke$arity$1 = (function (env){\nreturn document.createTextNode(\"\");\n}));\n\n(shadow.arborist.common.dom_marker.cljs$core$IFn$_invoke$arity$2 = (function (env,label){\nif(goog.DEBUG){\nreturn document.createComment(label);\n} else {\nreturn document.createTextNode(\"\");\n}\n}));\n\n(shadow.arborist.common.dom_marker.cljs$lang$maxFixedArity = 2);\n\nshadow.arborist.common.in_document_QMARK_ = (function shadow$arborist$common$in_document_QMARK_(el){\nreturn goog.dom.isInDocument(el);\n});\nshadow.arborist.common.fragment_replace = (function shadow$arborist$common$fragment_replace(old_managed,new_managed){\nvar first_node = shadow.arborist.protocols.dom_first(old_managed);\nvar _ = (((!((first_node == null))))?null:(function(){throw (new Error([\"Assert failed: \",\"fragment replacing a node that isn't in the DOM\",\"\\n\",\"(some? first-node)\"].join('')))})());\nvar parent = first_node.parentNode;\nshadow.arborist.protocols.dom_insert(new_managed,parent,first_node);\n\nshadow.arborist.protocols.destroy_BANG_(old_managed,true);\n\nreturn new_managed;\n});\nshadow.arborist.common.replace_managed = (function shadow$arborist$common$replace_managed(env,old,nval){\nvar new$ = shadow.arborist.protocols.as_managed(nval,env);\nreturn shadow.arborist.common.fragment_replace(old,new$);\n});\n\n/**\n* @constructor\n * @implements {shadow.arborist.protocols.IDirectUpdate}\n * @implements {shadow.arborist.protocols.IManaged}\n*/\nshadow.arborist.common.ManagedRoot = (function (env,dom_entered_QMARK_,marker,node,val){\nthis.env = env;\nthis.dom_entered_QMARK_ = dom_entered_QMARK_;\nthis.marker = marker;\nthis.node = node;\nthis.val = val;\n});\n(shadow.arborist.common.ManagedRoot.prototype.shadow$arborist$protocols$IManaged$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.arborist.common.ManagedRoot.prototype.shadow$arborist$protocols$IManaged$dom_first$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn self__.marker;\n}));\n\n(shadow.arborist.common.ManagedRoot.prototype.shadow$arborist$protocols$IManaged$dom_insert$arity$3 = (function (this$,parent,anchor){\nvar self__ = this;\nvar this$__$1 = this;\nparent.insertBefore(self__.marker,anchor);\n\nif(cljs.core.truth_(self__.node)){\nreturn self__.node.shadow$arborist$protocols$IManaged$dom_insert$arity$3(null,parent,anchor);\n} else {\nreturn null;\n}\n}));\n\n(shadow.arborist.common.ManagedRoot.prototype.shadow$arborist$protocols$IManaged$dom_entered_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\n(self__.dom_entered_QMARK_ = true);\n\nif(cljs.core.truth_(self__.node)){\nreturn self__.node.shadow$arborist$protocols$IManaged$dom_entered_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n}));\n\n(shadow.arborist.common.ManagedRoot.prototype.shadow$arborist$protocols$IManaged$supports_QMARK_$arity$2 = (function (this$,next){\nvar self__ = this;\nvar this$__$1 = this;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"invalid use, don't sync roots?\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"this\",\"this\",-611633625),this$__$1,new cljs.core.Keyword(null,\"next\",\"next\",-117701485),next], null));\n}));\n\n(shadow.arborist.common.ManagedRoot.prototype.shadow$arborist$protocols$IManaged$dom_sync_BANG_$arity$2 = (function (this$,next){\nvar self__ = this;\nvar this$__$1 = this;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"invalid use, don't sync roots?\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"this\",\"this\",-611633625),this$__$1,new cljs.core.Keyword(null,\"next\",\"next\",-117701485),next], null));\n}));\n\n(shadow.arborist.common.ManagedRoot.prototype.shadow$arborist$protocols$IManaged$destroy_BANG_$arity$2 = (function (this$,dom_remove_QMARK_){\nvar self__ = this;\nvar this$__$1 = this;\nif(dom_remove_QMARK_){\nself__.marker.remove();\n} else {\n}\n\nif(cljs.core.truth_(self__.node)){\nreturn self__.node.shadow$arborist$protocols$IManaged$destroy_BANG_$arity$2(null,dom_remove_QMARK_);\n} else {\nreturn null;\n}\n}));\n\n(shadow.arborist.common.ManagedRoot.prototype.shadow$arborist$protocols$IDirectUpdate$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.arborist.common.ManagedRoot.prototype.shadow$arborist$protocols$IDirectUpdate$update_BANG_$arity$2 = (function (this$,next){\nvar self__ = this;\nvar this$__$1 = this;\n(self__.val = next);\n\nif(cljs.core.not(self__.node)){\nvar el = shadow.arborist.protocols.as_managed(self__.val,self__.env);\n(self__.node = el);\n\nvar temp__5808__auto__ = self__.marker.parentElement;\nif((temp__5808__auto__ == null)){\nreturn null;\n} else {\nvar parent = temp__5808__auto__;\nself__.node.shadow$arborist$protocols$IManaged$dom_insert$arity$3(null,parent,self__.marker.nextSibling);\n\nif(self__.dom_entered_QMARK_){\nreturn self__.node.shadow$arborist$protocols$IManaged$dom_entered_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n}\n} else {\nif(self__.node.shadow$arborist$protocols$IManaged$supports_QMARK_$arity$2(null,next)){\nreturn self__.node.shadow$arborist$protocols$IManaged$dom_sync_BANG_$arity$2(null,next);\n} else {\nvar new$ = shadow.arborist.common.replace_managed(self__.env,self__.node,next);\n(self__.node = new$);\n\nif(self__.dom_entered_QMARK_){\nreturn shadow.arborist.protocols.dom_entered_BANG_(new$);\n} else {\nreturn null;\n}\n\n}\n}\n}));\n\n(shadow.arborist.common.ManagedRoot.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"env\",\"env\",-175281708,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"dom-entered?\",\"dom-entered?\",962657078,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"marker\",\"marker\",-1789317456,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"node\",\"node\",-2073234571,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"not-native\",\"not-native\",-236392494,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"val\",\"val\",1769233139,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(shadow.arborist.common.ManagedRoot.cljs$lang$type = true);\n\n(shadow.arborist.common.ManagedRoot.cljs$lang$ctorStr = \"shadow.arborist.common/ManagedRoot\");\n\n(shadow.arborist.common.ManagedRoot.cljs$lang$ctorPrWriter = (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\"shadow.arborist.common/ManagedRoot\");\n}));\n\n/**\n * Positional factory function for shadow.arborist.common/ManagedRoot.\n */\nshadow.arborist.common.__GT_ManagedRoot = (function shadow$arborist$common$__GT_ManagedRoot(env,dom_entered_QMARK_,marker,node,val){\nreturn (new shadow.arborist.common.ManagedRoot(env,dom_entered_QMARK_,marker,node,val));\n});\n\nshadow.arborist.common.managed_root = (function shadow$arborist$common$managed_root(env){\nreturn (new shadow.arborist.common.ManagedRoot(env,false,shadow.arborist.common.dom_marker.cljs$core$IFn$_invoke$arity$1(env),null,null));\n});\n\n/**\n* @constructor\n * @implements {shadow.arborist.protocols.IManaged}\n*/\nshadow.arborist.common.ManagedText = (function (env,val,node){\nthis.env = env;\nthis.val = val;\nthis.node = node;\n});\n(shadow.arborist.common.ManagedText.prototype.shadow$arborist$protocols$IManaged$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.arborist.common.ManagedText.prototype.shadow$arborist$protocols$IManaged$dom_first$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn self__.node;\n}));\n\n(shadow.arborist.common.ManagedText.prototype.shadow$arborist$protocols$IManaged$dom_insert$arity$3 = (function (this$,parent,anchor){\nvar self__ = this;\nvar this$__$1 = this;\nreturn parent.insertBefore(self__.node,anchor);\n}));\n\n(shadow.arborist.common.ManagedText.prototype.shadow$arborist$protocols$IManaged$dom_entered_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn null;\n}));\n\n(shadow.arborist.common.ManagedText.prototype.shadow$arborist$protocols$IManaged$supports_QMARK_$arity$2 = (function (this$,next){\nvar self__ = this;\nvar this$__$1 = this;\nreturn ((typeof next === 'string') || (((typeof next === 'number') || ((next == null)))));\n}));\n\n(shadow.arborist.common.ManagedText.prototype.shadow$arborist$protocols$IManaged$dom_sync_BANG_$arity$2 = (function (this$,next){\nvar self__ = this;\nvar this$__$1 = this;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(self__.val,next)){\n(self__.val = next);\n\n(self__.node.data = cljs.core.str.cljs$core$IFn$_invoke$arity$1(next));\n} else {\n}\n\nreturn new cljs.core.Keyword(null,\"synced\",\"synced\",-1518561120);\n}));\n\n(shadow.arborist.common.ManagedText.prototype.shadow$arborist$protocols$IManaged$destroy_BANG_$arity$2 = (function (this$,dom_remove_QMARK_){\nvar self__ = this;\nvar this$__$1 = this;\nif(dom_remove_QMARK_){\nreturn self__.node.remove();\n} else {\nreturn null;\n}\n}));\n\n(shadow.arborist.common.ManagedText.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"env\",\"env\",-175281708,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"val\",\"val\",1769233139,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"node\",\"node\",-2073234571,null)], null);\n}));\n\n(shadow.arborist.common.ManagedText.cljs$lang$type = true);\n\n(shadow.arborist.common.ManagedText.cljs$lang$ctorStr = \"shadow.arborist.common/ManagedText\");\n\n(shadow.arborist.common.ManagedText.cljs$lang$ctorPrWriter = (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\"shadow.arborist.common/ManagedText\");\n}));\n\n/**\n * Positional factory function for shadow.arborist.common/ManagedText.\n */\nshadow.arborist.common.__GT_ManagedText = (function shadow$arborist$common$__GT_ManagedText(env,val,node){\nreturn (new shadow.arborist.common.ManagedText(env,val,node));\n});\n\nshadow.arborist.common.managed_text = (function shadow$arborist$common$managed_text(env,val){\nreturn (new shadow.arborist.common.ManagedText(env,val,document.createTextNode(cljs.core.str.cljs$core$IFn$_invoke$arity$1(val))));\n});\n(shadow.arborist.protocols.IConstruct[\"string\"] = true);\n\n(shadow.arborist.protocols.as_managed[\"string\"] = (function (this$,env){\nreturn shadow.arborist.common.managed_text(env,this$);\n}));\n\n(shadow.arborist.protocols.IConstruct[\"number\"] = true);\n\n(shadow.arborist.protocols.as_managed[\"number\"] = (function (this$,env){\nreturn shadow.arborist.common.managed_text(env,this$);\n}));\n\n(shadow.arborist.protocols.IConstruct[\"null\"] = true);\n\n(shadow.arborist.protocols.as_managed[\"null\"] = (function (this$,env){\nreturn shadow.arborist.common.managed_text(env,this$);\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","shadow/arborist/common.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",27],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$shadow.arborist.common","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$goog.dom","^L","~$gdom","^L","~$shadow.arborist.protocols","^N","~$p","^N","~$cljs.core","^O","~$goog","^P"],"~:seen",["^D",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^O","^O"],"~:form",["~#list",["~$ns","^F",["^V",["^R",["^L","~:as","^M"],["^N","^X","~$p"]]]]],"~:flags",["^ ","^R",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^P","^O","^L","^N"]],"^I","^F","~:resource-id",["~:shadow.build.classpath/resource","shadow/arborist/common.cljs"],"~:compiled-at",1693994117651,"^G",["^ ","^L","^L","^M","^L","^N","^N","~$p","^N","^O","^O","^P","^P"],"~:resource-name","shadow/arborist/common.cljs","~:warnings",[],"~:source","(ns shadow.arborist.common\n  (:require\n    [goog.dom :as gdom]\n    [shadow.arborist.protocols :as p]))\n\n;; helper functions that lets us bypass the common CLJS ifn dispatch check\n;; helpful in hot loops or places where the same function (or ifn) is called multiple times\n;; and we just want to avoid the extra generated code\n\n;; in certain places we care about calling instead a function directly\n;;   x(y)\n\n;; instead of the inline check\n;;   x.cljs$core$IFn$_invoke$arity$1 ? x.cljs$core$IFn$_invoke$arity$1(y) : x.call(y)\n\n;; I'm sure JS engines are smart enough to skip the check after a while but best not to rely on it\n;; also generates less code which is always good\n\n;; never call these in a hot loop, better to leave the check for those cases\n\n(defn ifn1-wrap ^function [x]\n  (if ^boolean (.-cljs$core$IFn$_invoke$arity$1 x)\n    (fn [a]\n      (.cljs$core$IFn$_invoke$arity$1 x a))\n    x))\n\n(defn ifn2-wrap ^function [x]\n  (if ^boolean (.-cljs$core$IFn$_invoke$arity$2 x)\n    (fn [a b c]\n      (.cljs$core$IFn$_invoke$arity$2 x a b))\n    x))\n\n(defn ifn3-wrap ^function [x]\n  (if ^boolean (.-cljs$core$IFn$_invoke$arity$3 x)\n    (fn [a b c]\n      (.cljs$core$IFn$_invoke$arity$3 x a b c))\n    x))\n\n(defn dom-marker\n  ([env]\n   (js/document.createTextNode \"\"))\n  ([env label]\n   (if ^boolean js/goog.DEBUG\n     (js/document.createComment label)\n     (js/document.createTextNode \"\"))))\n\n(defn in-document? [el]\n  (gdom/isInDocument el))\n\n(defn fragment-replace [old-managed new-managed]\n  (let [first-node (p/dom-first old-managed)\n        _ (assert (some? first-node) \"fragment replacing a node that isn't in the DOM\")\n        parent (.-parentNode first-node)]\n\n    (p/dom-insert new-managed parent first-node)\n    (p/destroy! old-managed true)\n    new-managed))\n\n(defn replace-managed ^not-native [env old nval]\n  (let [new (p/as-managed nval env)]\n    (fragment-replace old new)))\n\n;; swappable root\n(deftype ManagedRoot\n  [env\n   ^boolean ^:mutable dom-entered?\n   ^:mutable marker\n   ^:mutable\n   ^not-native node\n   ^:mutable val]\n\n  p/IManaged\n  (dom-first [this] marker)\n\n  (dom-insert [this parent anchor]\n    (.insertBefore parent marker anchor)\n    (when node\n      (p/dom-insert node parent anchor)\n      ))\n\n  (dom-entered! [this]\n    (set! dom-entered? true)\n    (when node\n      (p/dom-entered! node)))\n\n  (supports? [this next]\n    (throw (ex-info \"invalid use, don't sync roots?\" {:this this :next next})))\n\n  (dom-sync! [this next]\n    (throw (ex-info \"invalid use, don't sync roots?\" {:this this :next next})))\n\n  (destroy! [this ^boolean dom-remove?]\n    (when dom-remove?\n      (.remove marker))\n    (when node\n      (p/destroy! node dom-remove?)))\n\n  p/IDirectUpdate\n  (update! [this next]\n    (set! val next)\n    (cond\n      (not node)\n      (let [el (p/as-managed val env)]\n        (set! node el)\n        ;; root was already inserted to dom but no node was available at the time\n        (when-some [parent (.-parentElement marker)]\n          (p/dom-insert node parent (.-nextSibling marker))\n          ;; root might not be in document yet\n          (when dom-entered?\n            (p/dom-entered! node))))\n\n      (p/supports? node next)\n      (p/dom-sync! node next)\n\n      :else\n      (let [new (replace-managed env node next)]\n        (set! node new)\n        (when dom-entered?\n          (p/dom-entered! new)\n          )))))\n\n(defn managed-root [env]\n  (ManagedRoot. env false (dom-marker env) nil nil))\n\n(deftype ManagedText [env ^:mutable val node]\n  p/IManaged\n  (dom-first [this] node)\n\n  (dom-insert [this parent anchor]\n    (.insertBefore parent node anchor))\n\n  (dom-entered! [this])\n\n  (supports? [this next]\n    ;; FIXME: anything else?\n    (or (string? next)\n        (number? next)\n        (nil? next)))\n\n  (dom-sync! [this next]\n    (when (not= val next)\n      (set! val next)\n      ;; https://twitter.com/_developit/status/1129093390883315712\n      (set! node -data (str next)))\n    :synced)\n\n  (destroy! [this ^boolean dom-remove?]\n    (when dom-remove?\n      (.remove node))))\n\n(defn managed-text [env val]\n  (ManagedText. env val (js/document.createTextNode (str val))))\n\n(extend-protocol p/IConstruct\n  string\n  (as-managed [this env]\n    (managed-text env this))\n\n  number\n  (as-managed [this env]\n    (managed-text env this))\n\n  ;; as a placeholder for (when condition (<< [:deep [:tree]]))\n  nil\n  (as-managed [this env]\n    (managed-text env this)))\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["shadow.arborist.common/ifn1-wrap","x","a","shadow.arborist.common/ifn2-wrap","b","c","shadow.arborist.common/ifn3-wrap","var_args","G__11448","shadow.arborist.common/dom-marker","js/Error","env","js/document.createTextNode","label","js/goog.DEBUG","js/document.createComment","shadow.arborist.common/in-document?","el","goog.dom/isInDocument","shadow.arborist.common/fragment-replace","old-managed","new-managed","first-node","shadow.arborist.protocols/dom-first","_","parent","shadow.arborist.protocols/dom-insert","shadow.arborist.protocols/destroy!","shadow.arborist.common/replace-managed","old","nval","new","shadow.arborist.protocols/as-managed","cljs.core/PROTOCOL_SENTINEL","this__5330__auto__","writer__5331__auto__","opt__5332__auto__","cljs.core/-write","shadow.arborist.common/ManagedRoot","shadow.arborist.common/->ManagedRoot","dom-entered?","marker","node","val","this","anchor","next","cljs.core.ex_info","dom-remove?","cljs.core/not","temp__5808__auto__","shadow.arborist.protocols/dom-entered!","shadow.arborist.common/managed-root","shadow.arborist.common.dom_marker","shadow.arborist.common/ManagedText","shadow.arborist.common/->ManagedText","cljs.core.not_EQ_","shadow.arborist.common/managed-text","shadow.arborist.protocols/IConstruct"]],"~:used-vars",["^D",["~$cljs.core/PROTOCOL_SENTINEL","~$shadow.arborist.protocols/dom-insert","~$shadow.arborist.protocols/dom-first","~$shadow.arborist.common/replace-managed","~$shadow.arborist.common/ManagedText","~$shadow.arborist.common/ManagedRoot","~$cljs.core/-write","~$shadow.arborist.common/in-document?","~$cljs.core/not=","~$js/document.createComment","~$shadow.arborist.common/managed-root","~$shadow.arborist.protocols/as-managed","~$shadow.arborist.common/ifn2-wrap","~$shadow.arborist.common/fragment-replace","~$shadow.arborist.common/->ManagedText","~$shadow.arborist.common/dom-marker","~$shadow.arborist.common/->ManagedRoot","~$cljs.core/ex-info","~$shadow.arborist.protocols/dom-sync!","~$js/goog.DEBUG","~$shadow.arborist.protocols/destroy!","~$shadow.arborist.protocols/supports?","~$cljs.core/not","~$goog.dom/isInDocument","~$shadow.arborist.protocols/dom-entered!","~$js/document.createTextNode","~$shadow.arborist.common/ifn3-wrap","~$shadow.arborist.common/managed-text","~$shadow.arborist.common/ifn1-wrap","~$shadow.arborist.protocols/IConstruct","~$js/Error"]]],"~:cache-keys",["~#cmap",[["^11","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^D",[]],"~:deps-syms",["^P","~$goog.dom.HtmlElement"]]],["^11","goog/labs/useragent/platform.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","~$goog.string.internal","~$goog.labs.userAgent.util"]]],["^11","goog/math/math.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","~$goog.asserts"]]],["^11","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P"]]],["^11","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","~$goog.array","~$goog.object","^28","^27"]]],["^11","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^29","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^27"]]],["^11","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^29"]]],["^11","goog/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^28","~$goog.reflect","^27"]]],["^11","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P"]]],["^11","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P"]]],["^11","shadow/arborist/protocols.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^O"]]],["^11","shadow/arborist/common.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^O","^L","^N"]]],["^11","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P"]]],["^11","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P"]]],["^11","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^29"]]],"~:SHADOW-TIMESTAMP",[1693915017000,1693915017000,1667395541000],["^11","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^29","^2E"]]],["^11","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^29","~$goog.fs.blob","^2<","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2>","^2?","^2@","^2A"]]],["^11","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P"]]],["^11","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P"]]],["^11","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^2@","~$goog.html.SafeUrl","^2A","^29","^27"]]],["^11","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^29","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^2H","~$goog.html.SafeStyle","^2J","^2=","~$goog.html.uncheckedconversions","^2@","^27"]]],["^11","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^2@","^2>","^2?","^2H","^2N","~$goog.html.SafeStyleSheet","^2J","~$goog.dom.TagName","^2=","^2A","^29","^2B","^2:","^2;","^27","~$goog.dom.tags","^2I"]]],["^11","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^2;"]]],["^11","goog/math/size.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P"]]],["^11","goog/labs/useragent/engine.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^2:","^27","^28"]]],["^11","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P"]]],["^11","goog/dom/dom.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^2:","^29","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^2Q","~$goog.dom.safe","^2M","^2O","~$goog.math.Coordinate","~$goog.math.Size","^2;","~$goog.string","^2@","~$goog.string.Unicode","~$goog.userAgent"]]],["^11","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","~$goog.debug.Error","^2T"]]],["^11","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^2:","^29","~$goog.collections.maps","^2X","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^11","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P"]]],["^11","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P"]]],["^11","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P"]]],["^11","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",[]]],["^11","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^2:","^2;"]]],["^11","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^2U","^2O","^2@","^27"]]],["^11","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P"]]],["^11","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","~$goog.labs.userAgent","^27"]]],["^11","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P"]]],["^11","goog/math/coordinate.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","~$goog.math"]]],["^11","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P"]]],["^11","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^29","^2M","^2H","^2N","^2P","^2J","^2=","^2@","^27","^2>"]]],["^11","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P"]]],["^11","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","~$goog.math.Long","~$goog.math.Integer","^2X","^2;","^2:","~$goog.Uri","~$goog.string.StringBuffer"]]],["^11","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^2@","^2A","^2I","^29"]]],["^11","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^2@","^2N","^2A","^2;","^29","^27"]]],["^11","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^2E"]]],["^11","goog/dom/browserfeature.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^2Z"]]],["^11","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^29","^2X"]]],["^11","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^22",["^ ","^23",null,"^24",["^D",[]],"^25",["^P","^29","^2A"]]]]],"~:clj-info",["^ ","jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1667395541000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","shadow/arborist/common.cljs","^7",1,"^8",5,"^9",1,"^:",27],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"~:shadow/js-access-properties",["^D",["createTextNode","createComment"]],"^E","^F","^G",["^ "],"^J",null,"^K",["^ ","^L","^L","^M","^L","^N","^N","~$p","^N","^O","^O","^P","^P"],"^Q",["^D",["^R"]],"~:shadow/js-access-global",["^D",["document","Error"]],"^S",null,"~:defs",["^ ","~$->ManagedText",["^ ","~:protocol-inline",null,"^5",["^ ","~:protocols",["^D",["~$shadow.arborist.protocols/IManaged"]],"^6","shadow/arborist/common.cljs","^:",21,"^8",10,"~:factory","~:positional","^7",125,"^9",125,"~:arglists",["^V",["~$quote",["^V",[["~$env","~$val","~$node"]]]]],"~:skip-protocol-flag",null,"~:doc","Positional factory function for shadow.arborist.common/ManagedText."],"^43",["^D",["^44"]],"^E","^1K","^6","shadow/arborist/common.cljs","^:",21,"~:method-params",["^V",[["^49","^4:","^4;"]]],"~:protocol-impl",null,"~:arglists-meta",["^V",[null,null]],"^8",1,"~:variadic?",false,"^45","^46","^7",125,"~:ret-tag","^1A","^9",125,"~:max-fixed-arity",3,"~:fn-var",true,"^47",["^V",["^48",["^V",[["^49","^4:","^4;"]]]]],"^4<",null,"^4=","Positional factory function for shadow.arborist.common/ManagedText."],"~$dom-marker",["^ ","^42",null,"^5",["^ ","^6","shadow/arborist/common.cljs","^7",39,"^8",7,"^9",39,"^:",17,"^47",["^V",["^48",["^V",[["^49"],["^49","~$label"]]]]],"~:top-fn",["^ ","^4A",false,"~:fixed-arity",2,"^4C",2,"^4>",[["^49"],["^49","^4F"]],"^47",["^V",[["^49"],["^49","^4F"]]],"^4@",["^V",[null,null]]]],"^E","^1L","^6","shadow/arborist/common.cljs","^:",17,"^4G",["^ ","^4A",false,"^4H",2,"^4C",2,"^4>",[["^49"],["^49","^4F"]],"^47",["^V",[["^49"],["^49","^4F"]]],"^4@",["^V",[null,null]]],"^4>",[["^49"],["^49","^4F"]],"^4?",null,"^4H",2,"^4@",["^V",[null,null]],"^8",1,"^4A",false,"~:methods",[["^ ","^4H",1,"^4A",false,"~:tag","~$js"],["^ ","^4H",2,"^4A",false,"^4J","^4K"]],"^7",39,"^9",39,"^4C",2,"^4D",true,"^47",["^V",[["^49"],["^49","^4F"]]]],"~$ifn1-wrap",["^ ","^42",null,"^5",["^ ","^6","shadow/arborist/common.cljs","^7",21,"^8",7,"^9",21,"^:",16,"^47",["^V",["^48",["^V",[["~$x"]]]]]],"^E","^1Y","^6","shadow/arborist/common.cljs","^:",16,"^4>",["^V",[["~$x"]]],"^4?",null,"^4@",["^V",[null,null]],"^8",1,"^4A",false,"^7",21,"^4B",["^D",[null,"~$function"]],"^9",21,"^4C",1,"^4D",true,"^47",["^V",["^48",["^V",[["~$x"]]]]]],"~$managed-text",["^ ","^42",null,"^5",["^ ","^6","shadow/arborist/common.cljs","^7",151,"^8",7,"^9",151,"^:",19,"^47",["^V",["^48",["^V",[["^49","^4:"]]]]]],"^E","^1X","^6","shadow/arborist/common.cljs","^:",19,"^4>",["^V",[["^49","^4:"]]],"^4?",null,"^4@",["^V",[null,null]],"^8",1,"^4A",false,"^7",151,"^4B","^1A","^9",151,"^4C",2,"^4D",true,"^47",["^V",["^48",["^V",[["^49","^4:"]]]]]],"~$->ManagedRoot",["^ ","^42",null,"^5",["^ ","^43",["^D",["~$shadow.arborist.protocols/IDirectUpdate","^44"]],"^6","shadow/arborist/common.cljs","^:",21,"^8",10,"^45","^46","^7",64,"^9",64,"^47",["^V",["^48",["^V",[["^49","~$dom-entered?","~$marker","^4;","^4:"]]]]],"^4<",null,"^4=","Positional factory function for shadow.arborist.common/ManagedRoot."],"^43",["^D",["^4P","^44"]],"^E","^1M","^6","shadow/arborist/common.cljs","^:",21,"^4>",["^V",[["^49","^4Q","^4R","^4;","^4:"]]],"^4?",null,"^4@",["^V",[null,null]],"^8",1,"^4A",false,"^45","^46","^7",64,"^4B","^1B","^9",64,"^4C",5,"^4D",true,"^47",["^V",["^48",["^V",[["^49","^4Q","^4R","^4;","^4:"]]]]],"^4<",null,"^4=","Positional factory function for shadow.arborist.common/ManagedRoot."],"~$ifn3-wrap",["^ ","^42",null,"^5",["^ ","^6","shadow/arborist/common.cljs","^7",33,"^8",7,"^9",33,"^:",16,"^47",["^V",["^48",["^V",[["~$x"]]]]]],"^E","^1W","^6","shadow/arborist/common.cljs","^:",16,"^4>",["^V",[["~$x"]]],"^4?",null,"^4@",["^V",[null,null]],"^8",1,"^4A",false,"^7",33,"^4B",["^D",[null,"^4M"]],"^9",33,"^4C",1,"^4D",true,"^47",["^V",["^48",["^V",[["~$x"]]]]]],"~$in-document?",["^ ","^42",null,"^5",["^ ","^6","shadow/arborist/common.cljs","^7",47,"^8",7,"^9",47,"^:",19,"^47",["^V",["^48",["^V",[["~$el"]]]]]],"^E","^1D","^6","shadow/arborist/common.cljs","^:",19,"^4>",["^V",[["^4U"]]],"^4?",null,"^4@",["^V",[null,null]],"^8",1,"^4A",false,"^7",47,"^4B","^4K","^9",47,"^4C",1,"^4D",true,"^47",["^V",["^48",["^V",[["^4U"]]]]]],"~$ifn2-wrap",["^ ","^42",null,"^5",["^ ","^6","shadow/arborist/common.cljs","^7",27,"^8",7,"^9",27,"^:",16,"^47",["^V",["^48",["^V",[["~$x"]]]]]],"^E","^1I","^6","shadow/arborist/common.cljs","^:",16,"^4>",["^V",[["~$x"]]],"^4?",null,"^4@",["^V",[null,null]],"^8",1,"^4A",false,"^7",27,"^4B",["^D",[null,"^4M"]],"^9",27,"^4C",1,"^4D",true,"^47",["^V",["^48",["^V",[["~$x"]]]]]],"~$ManagedText",["^ ","~:num-fields",3,"^43",["^D",["^44"]],"^E","^1A","^6","shadow/arborist/common.cljs","^:",21,"~:type",true,"^8",10,"^7",125,"~:record",false,"^9",125,"^4J","^4M","^4<",null],"~$replace-managed",["^ ","^42",null,"^5",["^ ","^6","shadow/arborist/common.cljs","^7",59,"^8",7,"^9",59,"^:",22,"^47",["^V",["^48",["^V",[["^49","~$old","~$nval"]]]]]],"^E","^1@","^6","shadow/arborist/common.cljs","^:",22,"^4>",["^V",[["^49","^50","^51"]]],"^4?",null,"^4@",["^V",[null,null]],"^8",1,"^4A",false,"^7",59,"^4B","~$any","^9",59,"^4C",3,"^4D",true,"^47",["^V",["^48",["^V",[["^49","^50","^51"]]]]]],"~$ManagedRoot",["^ ","^4X",5,"^43",["^D",["^4P","^44"]],"^E","^1B","^6","shadow/arborist/common.cljs","^:",21,"^4Y",true,"^8",10,"^7",64,"^4Z",false,"^9",64,"^4J","^4M","^4<",null],"~$managed-root",["^ ","^42",null,"^5",["^ ","^6","shadow/arborist/common.cljs","^7",122,"^8",7,"^9",122,"^:",19,"^47",["^V",["^48",["^V",[["^49"]]]]]],"^E","^1G","^6","shadow/arborist/common.cljs","^:",19,"^4>",["^V",[["^49"]]],"^4?",null,"^4@",["^V",[null,null]],"^8",1,"^4A",false,"^7",122,"^4B","^1B","^9",122,"^4C",1,"^4D",true,"^47",["^V",["^48",["^V",[["^49"]]]]]],"~$fragment-replace",["^ ","^42",null,"^5",["^ ","^6","shadow/arborist/common.cljs","^7",50,"^8",7,"^9",50,"^:",23,"^47",["^V",["^48",["^V",[["~$old-managed","~$new-managed"]]]]]],"^E","^1J","^6","shadow/arborist/common.cljs","^:",23,"^4>",["^V",[["^56","^57"]]],"^4?",null,"^4@",["^V",[null,null]],"^8",1,"^4A",false,"^7",50,"^9",50,"^4C",2,"^4D",true,"^47",["^V",["^48",["^V",[["^56","^57"]]]]]]],"^T",["^ ","^O","^O"],"~:cljs.analyzer/constants",["^ ","^Q",["^D",["~:synced","~$boolean","~:else","~:this","^4R","~$not-native","~:next","^4:","^49","^4;","^4Q","^4J","~:mutable"]],"~:order",["^5<","^5>","^5;","^49","^4Q","^5?","^4J","^5:","^4R","^4;","^5=","^4:","^59"]],"^Y",["^ ","^R",["^D",[]]],"^Z",["^ "],"^[",["^P","^O","^L","^N"]],"^I","^F","~:ns-specs",["^ "],"~:ns-spec-vars",["^D",[]],"~:compiler-options",["^21",[["^5C","~:static-fns"],true,["^5C","~:shadow-tweaks"],null,["^5C","~:source-map-inline"],null,["^5C","~:elide-asserts"],false,["^5C","~:optimize-constants"],null,["^5C","^14"],null,["^5C","~:external-config"],null,["^5C","~:tooling-config"],null,["^5C","~:emit-constants"],null,["^5C","~:load-tests"],null,["^5C","~:form-size-threshold"],null,["^5C","~:global-goog-object&array"],null,["^5C","~:data-readers"],null,["^5C","~:infer-externs"],"~:auto",["^5C","^16"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5C","~:fn-invoke-direct"],null,["^5C","~:source-map"],"/dev/null"]]]