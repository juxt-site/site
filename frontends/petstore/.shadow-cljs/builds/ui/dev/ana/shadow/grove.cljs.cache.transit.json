["^ ","~:output",["^ ","~:js","goog.provide('shadow.grove');\nshadow.grove.dispatch_up_BANG_ = (function shadow$grove$dispatch_up_BANG_(p__12923,ev_map){\nvar map__12926 = p__12923;\nvar map__12926__$1 = cljs.core.__destructure_map(map__12926);\nvar env = map__12926__$1;\nvar parent = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12926__$1,new cljs.core.Keyword(\"shadow.grove.components\",\"parent\",\"shadow.grove.components/parent\",522357606));\nif(cljs.core.map_QMARK_(env)){\n} else {\nthrow (new Error(\"Assert failed: (map? env)\"));\n}\n\nif(cljs.core.map_QMARK_(ev_map)){\n} else {\nthrow (new Error(\"Assert failed: (map? ev-map)\"));\n}\n\nif(cljs.core.qualified_keyword_QMARK_(new cljs.core.Keyword(null,\"e\",\"e\",1381269198).cljs$core$IFn$_invoke$arity$1(ev_map))){\n} else {\nthrow (new Error(\"Assert failed: (qualified-keyword? (:e ev-map))\"));\n}\n\nreturn parent.shadow$grove$protocols$IHandleEvents$handle_event_BANG_$arity$4(null,ev_map,null,env);\n});\nshadow.grove.query_ident = (function shadow$grove$query_ident(var_args){\nvar G__12935 = arguments.length;\nswitch (G__12935) {\ncase 1:\nreturn shadow.grove.query_ident.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn shadow.grove.query_ident.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn shadow.grove.query_ident.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(shadow.grove.query_ident.cljs$core$IFn$_invoke$arity$1 = (function (ident){\nreturn shadow.grove.impl.hook_query(ident,null,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(shadow.grove.query_ident.cljs$core$IFn$_invoke$arity$2 = (function (ident,query){\nreturn shadow.grove.impl.hook_query(ident,query,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(shadow.grove.query_ident.cljs$core$IFn$_invoke$arity$3 = (function (ident,query,config){\nreturn shadow.grove.impl.hook_query(ident,query,config);\n}));\n\n(shadow.grove.query_ident.cljs$lang$maxFixedArity = 3);\n\nshadow.grove.query_root = (function shadow$grove$query_root(var_args){\nvar G__12951 = arguments.length;\nswitch (G__12951) {\ncase 1:\nreturn shadow.grove.query_root.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn shadow.grove.query_root.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(shadow.grove.query_root.cljs$core$IFn$_invoke$arity$1 = (function (query){\nreturn shadow.grove.impl.hook_query(null,query,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(shadow.grove.query_root.cljs$core$IFn$_invoke$arity$2 = (function (query,config){\nreturn shadow.grove.impl.hook_query(null,query,config);\n}));\n\n(shadow.grove.query_root.cljs$lang$maxFixedArity = 2);\n\nshadow.grove.run_tx = (function shadow$grove$run_tx(p__12965,tx){\nvar map__12966 = p__12965;\nvar map__12966__$1 = cljs.core.__destructure_map(map__12966);\nvar env = map__12966__$1;\nvar runtime_ref = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12966__$1,new cljs.core.Keyword(\"shadow.grove.runtime\",\"runtime-ref\",\"shadow.grove.runtime/runtime-ref\",252005090));\nreturn shadow.grove.impl.process_event(runtime_ref,tx,env);\n});\nshadow.grove.run_tx_BANG_ = (function shadow$grove$run_tx_BANG_(runtime_ref,tx){\nif(cljs.core.truth_(shadow.grove.runtime.ref_QMARK_(runtime_ref))){\n} else {\nthrow (new Error([\"Assert failed: \",\"expected runtime ref?\",\"\\n\",\"(rt/ref? runtime-ref)\"].join('')));\n}\n\nvar map__12971 = cljs.core.deref(runtime_ref);\nvar map__12971__$1 = cljs.core.__destructure_map(map__12971);\nvar scheduler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12971__$1,new cljs.core.Keyword(\"shadow.grove.runtime\",\"scheduler\",\"shadow.grove.runtime/scheduler\",-1004241009));\nreturn shadow.grove.protocols.run_now_BANG_(scheduler,(function (){\nreturn shadow.grove.impl.process_event(runtime_ref,tx,null);\n}),new cljs.core.Keyword(\"shadow.grove\",\"run-tx!\",\"shadow.grove/run-tx!\",554470270));\n});\nshadow.grove.unmount_root = (function shadow$grove$unmount_root(root_el){\nvar temp__5804__auto__ = root_el.sg$root;\nif(cljs.core.truth_(temp__5804__auto__)){\nvar root = temp__5804__auto__;\nroot.destroy_BANG_(true);\n\ndelete root_el[\"sg$root\"];\n\nreturn delete root_el[\"sg$env\"];\n} else {\nreturn null;\n}\n});\n/**\n * hook that watches an atom and triggers an update on change\n * accepts an optional path-or-fn arg that can be used for quick diffs\n * \n * (watch the-atom [:foo])\n * (watch the-atom (fn [old new] ...))\n */\nshadow.grove.watch = (function shadow$grove$watch(var_args){\nvar G__12975 = arguments.length;\nswitch (G__12975) {\ncase 1:\nreturn shadow.grove.watch.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn shadow.grove.watch.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(shadow.grove.watch.cljs$core$IFn$_invoke$arity$1 = (function (the_atom){\nreturn shadow.grove.watch.cljs$core$IFn$_invoke$arity$2(the_atom,(function (old,new$){\nreturn new$;\n}));\n}));\n\n(shadow.grove.watch.cljs$core$IFn$_invoke$arity$2 = (function (the_atom,path_or_fn){\nif(cljs.core.vector_QMARK_(path_or_fn)){\nreturn (new shadow.grove.ui.atoms.AtomWatch(the_atom,(function (old,new$){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(new$,path_or_fn);\n}),null,null));\n} else {\nreturn (new shadow.grove.ui.atoms.AtomWatch(the_atom,path_or_fn,null,null));\n}\n}));\n\n(shadow.grove.watch.cljs$lang$maxFixedArity = 2);\n\nshadow.grove.env_watch = (function shadow$grove$env_watch(var_args){\nvar G__12981 = arguments.length;\nswitch (G__12981) {\ncase 1:\nreturn shadow.grove.env_watch.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn shadow.grove.env_watch.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn shadow.grove.env_watch.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(shadow.grove.env_watch.cljs$core$IFn$_invoke$arity$1 = (function (key_to_atom){\nreturn shadow.grove.env_watch.cljs$core$IFn$_invoke$arity$3(key_to_atom,cljs.core.PersistentVector.EMPTY,null);\n}));\n\n(shadow.grove.env_watch.cljs$core$IFn$_invoke$arity$2 = (function (key_to_atom,path){\nreturn shadow.grove.env_watch.cljs$core$IFn$_invoke$arity$3(key_to_atom,path,null);\n}));\n\n(shadow.grove.env_watch.cljs$core$IFn$_invoke$arity$3 = (function (key_to_atom,path,default$){\nif((key_to_atom instanceof cljs.core.Keyword)){\n} else {\nthrow (new Error(\"Assert failed: (keyword? key-to-atom)\"));\n}\n\nif(cljs.core.vector_QMARK_(path)){\n} else {\nthrow (new Error(\"Assert failed: (vector? path)\"));\n}\n\nreturn (new shadow.grove.ui.atoms.EnvWatch(key_to_atom,path,default$,null,null,null));\n}));\n\n(shadow.grove.env_watch.cljs$lang$maxFixedArity = 3);\n\nshadow.grove.suspense = (function shadow$grove$suspense(opts,vnode){\nreturn (new shadow.grove.ui.suspense.SuspenseInit(opts,vnode));\n});\nshadow.grove.simple_seq = (function shadow$grove$simple_seq(coll,render_fn){\nreturn shadow.arborist.collections.simple_seq(coll,render_fn);\n});\nshadow.grove.keyed_seq = (function shadow$grove$keyed_seq(coll,key_fn,render_fn){\nreturn shadow.arborist.collections.keyed_seq(coll,key_fn,render_fn);\n});\n\n/**\n* @constructor\n * @implements {shadow.grove.protocols.IHook}\n*/\nshadow.grove.TrackChange = (function (val,trigger_fn,result,component_handle){\nthis.val = val;\nthis.trigger_fn = trigger_fn;\nthis.result = result;\nthis.component_handle = component_handle;\n});\n(shadow.grove.TrackChange.prototype.shadow$grove$protocols$IHook$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.TrackChange.prototype.shadow$grove$protocols$IHook$hook_init_BANG_$arity$2 = (function (this$,ch){\nvar self__ = this;\nvar this$__$1 = this;\n(self__.component_handle = ch);\n\nreturn (self__.result = (function (){var G__12992 = self__.component_handle.shadow$grove$protocols$IEnvSource$get_component_env$arity$1(null);\nvar G__12993 = null;\nvar G__12994 = self__.val;\nreturn (self__.trigger_fn.cljs$core$IFn$_invoke$arity$3 ? self__.trigger_fn.cljs$core$IFn$_invoke$arity$3(G__12992,G__12993,G__12994) : self__.trigger_fn.call(null,G__12992,G__12993,G__12994));\n})());\n}));\n\n(shadow.grove.TrackChange.prototype.shadow$grove$protocols$IHook$hook_ready_QMARK_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn true;\n}));\n\n(shadow.grove.TrackChange.prototype.shadow$grove$protocols$IHook$hook_value$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn self__.result;\n}));\n\n(shadow.grove.TrackChange.prototype.shadow$grove$protocols$IHook$hook_update_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn false;\n}));\n\n(shadow.grove.TrackChange.prototype.shadow$grove$protocols$IHook$hook_deps_update_BANG_$arity$2 = (function (this$,new_track){\nvar self__ = this;\nvar this$__$1 = this;\nvar next_val = new_track.val;\nvar prev_result = self__.result;\n(self__.trigger_fn = new_track.trigger_fn);\n\n(self__.result = (function (){var G__13000 = self__.component_handle.shadow$grove$protocols$IEnvSource$get_component_env$arity$1(null);\nvar G__13001 = self__.val;\nvar G__13002 = next_val;\nreturn (self__.trigger_fn.cljs$core$IFn$_invoke$arity$3 ? self__.trigger_fn.cljs$core$IFn$_invoke$arity$3(G__13000,G__13001,G__13002) : self__.trigger_fn.call(null,G__13000,G__13001,G__13002));\n})());\n\n(self__.val = next_val);\n\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(self__.result,prev_result);\n}));\n\n(shadow.grove.TrackChange.prototype.shadow$grove$protocols$IHook$hook_destroy_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn null;\n}));\n\n(shadow.grove.TrackChange.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"val\",\"val\",1769233139,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"trigger-fn\",\"trigger-fn\",1400256141,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"result\",\"result\",-1239343558,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"component-handle\",\"component-handle\",-970224254,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"not-native\",\"not-native\",-236392494,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(shadow.grove.TrackChange.cljs$lang$type = true);\n\n(shadow.grove.TrackChange.cljs$lang$ctorStr = \"shadow.grove/TrackChange\");\n\n(shadow.grove.TrackChange.cljs$lang$ctorPrWriter = (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\"shadow.grove/TrackChange\");\n}));\n\n/**\n * Positional factory function for shadow.grove/TrackChange.\n */\nshadow.grove.__GT_TrackChange = (function shadow$grove$__GT_TrackChange(val,trigger_fn,result,component_handle){\nreturn (new shadow.grove.TrackChange(val,trigger_fn,result,component_handle));\n});\n\nshadow.grove.track_change = (function shadow$grove$track_change(val,trigger_fn){\nreturn (new shadow.grove.TrackChange(val,trigger_fn,null,null));\n});\nshadow.grove.ref = (function shadow$grove$ref(){\nreturn cljs.core.volatile_BANG_(null);\n});\n/**\n * calls (callback env) after render when provided deps argument changes\n * callback can return a function which will be called if cleanup is required\n */\nshadow.grove.effect = (function shadow$grove$effect(deps,callback){\nreturn (new shadow.grove.components.EffectHook(deps,callback,null,true,null));\n});\n/**\n * call (callback env) after every render\n */\nshadow.grove.render_effect = (function shadow$grove$render_effect(callback){\nreturn (new shadow.grove.components.EffectHook(new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),callback,null,true,null));\n});\n/**\n * call (callback env) on mount once\n */\nshadow.grove.mount_effect = (function shadow$grove$mount_effect(callback){\nreturn (new shadow.grove.components.EffectHook(new cljs.core.Keyword(null,\"mount\",\"mount\",-1560582470),callback,null,true,null));\n});\nshadow.grove.portal = (function shadow$grove$portal(var_args){\nvar G__13025 = arguments.length;\nswitch (G__13025) {\ncase 1:\nreturn shadow.grove.portal.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn shadow.grove.portal.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(shadow.grove.portal.cljs$core$IFn$_invoke$arity$1 = (function (body){\nreturn shadow.grove.ui.portal.portal(document.body,body);\n}));\n\n(shadow.grove.portal.cljs$core$IFn$_invoke$arity$2 = (function (ref_node,body){\nreturn shadow.grove.ui.portal.portal(ref_node,body);\n}));\n\n(shadow.grove.portal.cljs$lang$maxFixedArity = 2);\n\nshadow.grove.default_error_handler = (function shadow$grove$default_error_handler(component,ex){\nif(goog.DEBUG){\nconsole.error([\"An Error occurred in \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(component.config.component_name),\", it will not be rendered.\"].join(''),component);\n} else {\nconsole.error(\"An Error occurred in Component, it will not be rendered.\",component);\n}\n\nreturn console.error(ex);\n});\n\n/**\n* @constructor\n * @implements {shadow.grove.protocols.IHandleEvents}\n*/\nshadow.grove.RootEventTarget = (function (rt_ref){\nthis.rt_ref = rt_ref;\n});\n(shadow.grove.RootEventTarget.prototype.shadow$grove$protocols$IHandleEvents$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.RootEventTarget.prototype.shadow$grove$protocols$IHandleEvents$handle_event_BANG_$arity$4 = (function (this$,ev_map,e,origin){\nvar self__ = this;\nvar this$__$1 = this;\nreturn shadow.grove.impl.process_event(self__.rt_ref,ev_map,origin);\n}));\n\n(shadow.grove.RootEventTarget.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"rt-ref\",\"rt-ref\",-878707630,null)], null);\n}));\n\n(shadow.grove.RootEventTarget.cljs$lang$type = true);\n\n(shadow.grove.RootEventTarget.cljs$lang$ctorStr = \"shadow.grove/RootEventTarget\");\n\n(shadow.grove.RootEventTarget.cljs$lang$ctorPrWriter = (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\"shadow.grove/RootEventTarget\");\n}));\n\n/**\n * Positional factory function for shadow.grove/RootEventTarget.\n */\nshadow.grove.__GT_RootEventTarget = (function shadow$grove$__GT_RootEventTarget(rt_ref){\nreturn (new shadow.grove.RootEventTarget(rt_ref));\n});\n\nshadow.grove.make_root_env = (function shadow$grove$make_root_env(rt_ref,root_el){\nvar event_target = (new shadow.grove.RootEventTarget(rt_ref));\nvar env_init = new cljs.core.Keyword(\"shadow.grove.runtime\",\"env-init\",\"shadow.grove.runtime/env-init\",2005185019).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(rt_ref));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (env,init_fn){\nreturn (init_fn.cljs$core$IFn$_invoke$arity$1 ? init_fn.cljs$core$IFn$_invoke$arity$1(env) : init_fn.call(null,env));\n}),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(\"shadow.grove.components\",\"scheduler\",\"shadow.grove.components/scheduler\",189849247),new cljs.core.Keyword(\"shadow.grove.runtime\",\"scheduler\",\"shadow.grove.runtime/scheduler\",-1004241009).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(rt_ref)),new cljs.core.Keyword(\"shadow.grove.components\",\"event-target\",\"shadow.grove.components/event-target\",-649187734),event_target,new cljs.core.Keyword(\"shadow.grove\",\"suspense-keys\",\"shadow.grove/suspense-keys\",-1050374121),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY),new cljs.core.Keyword(\"shadow.grove.runtime\",\"root-el\",\"shadow.grove.runtime/root-el\",-221164066),root_el,new cljs.core.Keyword(\"shadow.grove.runtime\",\"runtime-ref\",\"shadow.grove.runtime/runtime-ref\",252005090),rt_ref,new cljs.core.Keyword(\"shadow.grove.components\",\"error-handler\",\"shadow.grove.components/error-handler\",-1078927315),shadow.grove.default_error_handler], null),env_init);\n});\nshadow.grove.render_STAR_ = (function shadow$grove$render_STAR_(rt_ref,root_el,root_node){\nif(cljs.core.truth_(shadow.grove.runtime.ref_QMARK_(rt_ref))){\n} else {\nthrow (new Error(\"Assert failed: (rt/ref? rt-ref)\"));\n}\n\nvar temp__5802__auto__ = root_el.sg$root;\nif(cljs.core.truth_(temp__5802__auto__)){\nvar active_root = temp__5802__auto__;\nif(goog.DEBUG){\nshadow.grove.components.mark_all_dirty_BANG_();\n} else {\n}\n\nshadow.arborist.update_BANG_(active_root,root_node);\n\nreturn new cljs.core.Keyword(\"shadow.grove\",\"updated\",\"shadow.grove/updated\",1086195901);\n} else {\nvar new_env = shadow.grove.make_root_env(rt_ref,root_el);\nvar new_root = shadow.arborist.dom_root.cljs$core$IFn$_invoke$arity$2(root_el,new_env);\nshadow.arborist.update_BANG_(new_root,root_node);\n\n(root_el.sg$root = new_root);\n\n(root_el.sg$env = new_env);\n\nreturn new cljs.core.Keyword(\"shadow.grove\",\"started\",\"shadow.grove/started\",-1053419007);\n}\n});\nshadow.grove.render = (function shadow$grove$render(rt_ref,root_el,root_node){\nif(cljs.core.truth_(shadow.grove.runtime.ref_QMARK_(rt_ref))){\n} else {\nthrow (new Error(\"Assert failed: (rt/ref? rt-ref)\"));\n}\n\nreturn new cljs.core.Keyword(\"shadow.grove.runtime\",\"scheduler\",\"shadow.grove.runtime/scheduler\",-1004241009).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(rt_ref)).shadow$grove$protocols$IScheduleWork$run_now_BANG_$arity$3(null,(function (){\nreturn shadow.grove.render_STAR_(rt_ref,root_el,root_node);\n}),new cljs.core.Keyword(\"shadow.grove\",\"render\",\"shadow.grove/render\",1304443147));\n});\n\n/**\n* @constructor\n * @implements {shadow.grove.protocols.IScheduleWork}\n*/\nshadow.grove.RootScheduler = (function (update_pending_QMARK_,work_set){\nthis.update_pending_QMARK_ = update_pending_QMARK_;\nthis.work_set = work_set;\n});\n(shadow.grove.RootScheduler.prototype.shadow$grove$protocols$IScheduleWork$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.RootScheduler.prototype.shadow$grove$protocols$IScheduleWork$schedule_work_BANG_$arity$3 = (function (this$,work_task,trigger){\nvar self__ = this;\nvar this$__$1 = this;\nself__.work_set.add(work_task);\n\nif(cljs.core.truth_(self__.update_pending_QMARK_)){\nreturn null;\n} else {\n(self__.update_pending_QMARK_ = true);\n\nreturn shadow.grove.runtime.next_tick((function (){\nreturn this$__$1.process_work_BANG_();\n}));\n}\n}));\n\n(shadow.grove.RootScheduler.prototype.shadow$grove$protocols$IScheduleWork$unschedule_BANG_$arity$2 = (function (this$,work_task){\nvar self__ = this;\nvar this$__$1 = this;\nreturn self__.work_set.delete(work_task);\n}));\n\n(shadow.grove.RootScheduler.prototype.shadow$grove$protocols$IScheduleWork$did_suspend_BANG_$arity$2 = (function (this$,target){\nvar self__ = this;\nvar this$__$1 = this;\nreturn null;\n}));\n\n(shadow.grove.RootScheduler.prototype.shadow$grove$protocols$IScheduleWork$did_finish_BANG_$arity$2 = (function (this$,target){\nvar self__ = this;\nvar this$__$1 = this;\nreturn null;\n}));\n\n(shadow.grove.RootScheduler.prototype.shadow$grove$protocols$IScheduleWork$run_now_BANG_$arity$3 = (function (this$,action,trigger){\nvar self__ = this;\nvar this$__$1 = this;\n(self__.update_pending_QMARK_ = true);\n\n(action.cljs$core$IFn$_invoke$arity$0 ? action.cljs$core$IFn$_invoke$arity$0() : action.call(null));\n\nreturn this$__$1.process_work_BANG_();\n}));\n\n(shadow.grove.RootScheduler.prototype.process_work_BANG_ = (function (){\nvar self__ = this;\nvar this$ = this;\ntry{var iter = self__.work_set.values();\nwhile(true){\nvar current = iter.next();\nif((!(current.done))){\ncurrent.value.shadow$grove$protocols$IWork$work_BANG_$arity$1(null);\n\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}finally {(self__.update_pending_QMARK_ = false);\n}}));\n\n(shadow.grove.RootScheduler.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"update-pending?\",\"update-pending?\",1522583236,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"work-set\",\"work-set\",1431323643,null)], null);\n}));\n\n(shadow.grove.RootScheduler.cljs$lang$type = true);\n\n(shadow.grove.RootScheduler.cljs$lang$ctorStr = \"shadow.grove/RootScheduler\");\n\n(shadow.grove.RootScheduler.cljs$lang$ctorPrWriter = (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\"shadow.grove/RootScheduler\");\n}));\n\n/**\n * Positional factory function for shadow.grove/RootScheduler.\n */\nshadow.grove.__GT_RootScheduler = (function shadow$grove$__GT_RootScheduler(update_pending_QMARK_,work_set){\nreturn (new shadow.grove.RootScheduler(update_pending_QMARK_,work_set));\n});\n\n\n/**\n* @constructor\n * @implements {shadow.grove.protocols.IScheduleWork}\n*/\nshadow.grove.TracingRootScheduler = (function (update_pending_QMARK_,work_set){\nthis.update_pending_QMARK_ = update_pending_QMARK_;\nthis.work_set = work_set;\n});\n(shadow.grove.TracingRootScheduler.prototype.shadow$grove$protocols$IScheduleWork$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.TracingRootScheduler.prototype.shadow$grove$protocols$IScheduleWork$schedule_work_BANG_$arity$3 = (function (this$,work_task,trigger){\nvar self__ = this;\nvar this$__$1 = this;\nself__.work_set.add(work_task);\n\nif(cljs.core.truth_(self__.update_pending_QMARK_)){\nreturn null;\n} else {\n(self__.update_pending_QMARK_ = true);\n\nreturn shadow.grove.runtime.next_tick((function (){\nconsole.group(cljs.core.str.cljs$core$IFn$_invoke$arity$1(trigger));\n\ntry{return this$__$1.process_work_BANG_();\n}finally {console.groupEnd();\n}}));\n}\n}));\n\n(shadow.grove.TracingRootScheduler.prototype.shadow$grove$protocols$IScheduleWork$unschedule_BANG_$arity$2 = (function (this$,work_task){\nvar self__ = this;\nvar this$__$1 = this;\nreturn self__.work_set.delete(work_task);\n}));\n\n(shadow.grove.TracingRootScheduler.prototype.shadow$grove$protocols$IScheduleWork$did_suspend_BANG_$arity$2 = (function (this$,target){\nvar self__ = this;\nvar this$__$1 = this;\nreturn null;\n}));\n\n(shadow.grove.TracingRootScheduler.prototype.shadow$grove$protocols$IScheduleWork$did_finish_BANG_$arity$2 = (function (this$,target){\nvar self__ = this;\nvar this$__$1 = this;\nreturn null;\n}));\n\n(shadow.grove.TracingRootScheduler.prototype.shadow$grove$protocols$IScheduleWork$run_now_BANG_$arity$3 = (function (this$,action,trigger){\nvar self__ = this;\nvar this$__$1 = this;\nconsole.group(cljs.core.str.cljs$core$IFn$_invoke$arity$1(trigger));\n\ntry{(self__.update_pending_QMARK_ = true);\n\n(action.cljs$core$IFn$_invoke$arity$0 ? action.cljs$core$IFn$_invoke$arity$0() : action.call(null));\n\nreturn this$__$1.process_work_BANG_();\n}finally {console.groupEnd();\n}}));\n\n(shadow.grove.TracingRootScheduler.prototype.process_work_BANG_ = (function (){\nvar self__ = this;\nvar this$ = this;\ntry{var iter = self__.work_set.values();\nwhile(true){\nvar current = iter.next();\nif((!(current.done))){\ncurrent.value.shadow$grove$protocols$IWork$work_BANG_$arity$1(null);\n\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}finally {(self__.update_pending_QMARK_ = false);\n}}));\n\n(shadow.grove.TracingRootScheduler.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"update-pending?\",\"update-pending?\",1522583236,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"work-set\",\"work-set\",1431323643,null)], null);\n}));\n\n(shadow.grove.TracingRootScheduler.cljs$lang$type = true);\n\n(shadow.grove.TracingRootScheduler.cljs$lang$ctorStr = \"shadow.grove/TracingRootScheduler\");\n\n(shadow.grove.TracingRootScheduler.cljs$lang$ctorPrWriter = (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\"shadow.grove/TracingRootScheduler\");\n}));\n\n/**\n * Positional factory function for shadow.grove/TracingRootScheduler.\n */\nshadow.grove.__GT_TracingRootScheduler = (function shadow$grove$__GT_TracingRootScheduler(update_pending_QMARK_,work_set){\nreturn (new shadow.grove.TracingRootScheduler(update_pending_QMARK_,work_set));\n});\n\n/**\n * @define {boolean}\n */\nshadow.grove.TRACE = goog.define(\"shadow.grove.TRACE\",false);\nshadow.grove.prepare = (function shadow$grove$prepare(var_args){\nvar G__13100 = arguments.length;\nswitch (G__13100) {\ncase 2:\nreturn shadow.grove.prepare.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn shadow.grove.prepare.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(shadow.grove.prepare.cljs$core$IFn$_invoke$arity$2 = (function (data_ref,runtime_id){\nreturn shadow.grove.prepare.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,data_ref,runtime_id);\n}));\n\n(shadow.grove.prepare.cljs$core$IFn$_invoke$arity$3 = (function (init,data_ref,runtime_id){\nvar root_scheduler = ((shadow.grove.TRACE)?(new shadow.grove.TracingRootScheduler(false,(new Set()))):(new shadow.grove.RootScheduler(false,(new Set()))));\nvar rt_ref = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\nvar active_queries_map = (new Map());\ncljs.core.reset_BANG_(rt_ref,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(init,new cljs.core.Keyword(\"shadow.grove.runtime\",\"rt\",\"shadow.grove.runtime/rt\",1216959489),true,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"shadow.grove.runtime\",\"scheduler\",\"shadow.grove.runtime/scheduler\",-1004241009),root_scheduler,new cljs.core.Keyword(\"shadow.grove.runtime\",\"runtime-id\",\"shadow.grove.runtime/runtime-id\",1330331054),runtime_id,new cljs.core.Keyword(\"shadow.grove.runtime\",\"data-ref\",\"shadow.grove.runtime/data-ref\",-1688628375),data_ref,new cljs.core.Keyword(\"shadow.grove.runtime\",\"event-config\",\"shadow.grove.runtime/event-config\",-570686649),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(\"shadow.grove.runtime\",\"fx-config\",\"shadow.grove.runtime/fx-config\",-254676192),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(\"shadow.grove.runtime\",\"active-queries-map\",\"shadow.grove.runtime/active-queries-map\",-592199771),active_queries_map,new cljs.core.Keyword(\"shadow.grove.runtime\",\"key-index-seq\",\"shadow.grove.runtime/key-index-seq\",1103349112),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),new cljs.core.Keyword(\"shadow.grove.runtime\",\"key-index-ref\",\"shadow.grove.runtime/key-index-ref\",-1341451448),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY),new cljs.core.Keyword(\"shadow.grove.runtime\",\"query-index-map\",\"shadow.grove.runtime/query-index-map\",1244541445),(new Map()),new cljs.core.Keyword(\"shadow.grove.runtime\",\"query-index-ref\",\"shadow.grove.runtime/query-index-ref\",1418908381),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY),new cljs.core.Keyword(\"shadow.grove.runtime\",\"env-init\",\"shadow.grove.runtime/env-init\",2005185019),cljs.core.PersistentVector.EMPTY], 0)));\n\nif(goog.DEBUG){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(shadow.grove.runtime.known_runtimes_ref,cljs.core.assoc,runtime_id,rt_ref);\n} else {\n}\n\nreturn rt_ref;\n}));\n\n(shadow.grove.prepare.cljs$lang$maxFixedArity = 3);\n\nshadow.grove.vec_conj = (function shadow$grove$vec_conj(x,y){\nif((x == null)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [y], null);\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(x,y);\n}\n});\nshadow.grove.queue_fx = (function shadow$grove$queue_fx(env,fx_id,fx_val){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(\"shadow.grove.runtime\",\"fx\",\"shadow.grove.runtime/fx\",-472553621),shadow.grove.vec_conj,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [fx_id,fx_val], null));\n});\nshadow.grove.reg_event = (function shadow$grove$reg_event(rt_ref,ev_id,handler_fn){\nif((ev_id instanceof cljs.core.Keyword)){\n} else {\nthrow (new Error(\"Assert failed: (keyword? ev-id)\"));\n}\n\nif(cljs.core.ifn_QMARK_(handler_fn)){\n} else {\nthrow (new Error(\"Assert failed: (ifn? handler-fn)\"));\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(rt_ref,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"shadow.grove.runtime\",\"event-config\",\"shadow.grove.runtime/event-config\",-570686649),ev_id], null),handler_fn);\n\nreturn rt_ref;\n});\nshadow.grove.reg_fx = (function shadow$grove$reg_fx(rt_ref,fx_id,handler_fn){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(rt_ref,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"shadow.grove.runtime\",\"fx-config\",\"shadow.grove.runtime/fx-config\",-254676192),fx_id], null),handler_fn);\n\nreturn rt_ref;\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","grove - a small wood or forested area (ie. trees)\n   a mini re-frame/fulcro hybrid. re-frame event styles + somewhat normalized db","~:file","shadow/grove.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",17],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:macros",["^ ","~$html",["^ ","~:arglists",["~#list",[["~$&","~$body"]]],"^8",19,"^9",1,"^7","shadow/grove.clj","~:name","~$shadow.grove/html","~:ns","~$shadow.grove","~:macro",true],"~$defc",["^ ","^H",["^I",[["~$&","~$args"]]],"^8",5,"^9",1,"^7","shadow/grove.clj","^K","~$shadow.grove/defc","^M","^N","^O",true],"~$fragment",["^ ","^H",["^I",[["~$&","^J"]]],"^8",16,"^9",1,"^7","shadow/grove.clj","^K","~$shadow.grove/fragment","^M","^N","^O",true],"~$css",["^ ","^H",["^I",[["~$&","^J"]]],"^8",25,"^9",1,"^7","shadow/grove.clj","^K","~$shadow.grove/css","^M","^N","^O",true],"~$<>",["^ ","^H",["^I",[["~$&","^J"]]],"^8",13,"^9",1,"^7","shadow/grove.clj","^K","~$shadow.grove/<>","^M","^N","^O",true],"~$svg",["^ ","^H",["^I",[["~$&","^J"]]],"^8",22,"^9",1,"^7","shadow/grove.clj","^K","~$shadow.grove/svg","^M","^N","^O",true],"~$<<",["^ ","^H",["^I",[["~$&","^J"]]],"^8",8,"^9",1,"^7","shadow/grove.clj","^K","~$shadow.grove/<<","^M","^N","^O",true]],"^K","^N","~:reader-aliases",["^ "],"~:op","^M","~:imports",null,"~:requires",["^ ","~$shadow.grove.runtime","^15","~$shadow.grove.ui.portal","^16","~$impl","~$shadow.grove.impl","~$shadow.grove.db","^19","~$shadow.css","^1:","~$a","~$shadow.arborist.attributes","~$comp","~$shadow.grove.components","~$shadow.arborist.protocols","^1>","~$cljs.core","^1?","~$gp","~$shadow.grove.protocols","^1=","^1=","~$shadow.arborist.collections","^1B","~$goog","^1C","^1;","^1;","~$portal","^16","~$atoms","~$shadow.grove.ui.atoms","~$db","^19","^18","^18","~$shadow.arborist","^1H","~$util","~$shadow.grove.ui.util","~$shadow.grove.ui.suspense","^1K","~$suspense","^1K","~$sa","^1H","^1F","^1F","~$shadow.arborist.common","^1N","~$common","^1N","~$rt","^15","^1J","^1J","^1A","^1A","~$ap","^1>","~$shadow.arborist.fragments","^1R","~$goog.async.nextTick","^1S","~$sc","^1B"],"~:seen",["^E",["~:require","~:require-macros"]],"~:uses",null,"^1W",["^ ","^N","^N","^1?","^1?","^1:","^1:","^1<","^1=","^1=","^1=","^1H","^1H","^1M","^1H","^1R","^1R"],"~:form",["^I",["~$ns","^N","grove - a small wood or forested area (ie. trees)\n   a mini re-frame/fulcro hybrid. re-frame event styles + somewhat normalized db",["^I",["^1W",["^N"]]],["^I",["^1V",["^1S"],["^1>","~:as","^1Q"],["^1N","^1[","^1O"],["^1R"],["^1H","^1[","^1M"],["^1B","^1[","^1T"],["^1A","^1[","^1@"],["^15","^1[","^1P"],["^1=","^1[","^1<"],["^1J","^1[","^1I"],["^1K","^1[","^1L"],["^1F","^1[","^1E"],["^16","^1[","^1D"],["^1;","^1[","~$a"],["^19","^1[","^1G"],["^18","^1[","^17"],["^1:"]]]]],"~:flags",["^ ","^1W",["^E",[]],"^1V",["^E",[]]],"~:js-deps",["^ "],"~:deps",["^1C","^1?","^1S","^1>","^1N","^1R","^1H","^1B","^1A","^15","^1=","^1J","^1K","^1F","^16","^1;","^19","^18","^1:"]],"^M","^N","~:resource-id",["~:shadow.build.classpath/resource","shadow/grove.cljs"],"~:compiled-at",1693994118347,"^11",["^ ","^15","^15","^16","^16","^17","^18","^19","^19","^1:","^1:","~$a","^1;","^1<","^1=","^N","^N","^1>","^1>","^1?","^1?","^1@","^1A","^1=","^1=","^1B","^1B","^1C","^1C","^1;","^1;","^1D","^16","^1E","^1F","^1G","^19","^18","^18","^1H","^1H","^1I","^1J","^1K","^1K","^1L","^1K","^1M","^1H","^1F","^1F","^1N","^1N","^1O","^1N","^1P","^15","^1J","^1J","^1A","^1A","^1Q","^1>","^1R","^1R","^1S","^1S","^1T","^1B"],"~:resource-name","shadow/grove.cljs","~:warnings",[],"~:source","(ns shadow.grove\n  \"grove - a small wood or forested area (ie. trees)\n   a mini re-frame/fulcro hybrid. re-frame event styles + somewhat normalized db\"\n  (:require-macros [shadow.grove])\n  (:require\n    [goog.async.nextTick]\n    [shadow.arborist.protocols :as ap]\n    [shadow.arborist.common :as common]\n    [shadow.arborist.fragments] ;; util macro references this\n    [shadow.arborist :as sa]\n    [shadow.arborist.collections :as sc]\n    [shadow.grove.protocols :as gp]\n    [shadow.grove.runtime :as rt]\n    [shadow.grove.components :as comp]\n    [shadow.grove.ui.util :as util]\n    [shadow.grove.ui.suspense :as suspense]\n    [shadow.grove.ui.atoms :as atoms]\n    [shadow.grove.ui.portal :as portal]\n    [shadow.arborist.attributes :as a]\n    [shadow.grove.db :as db]\n    [shadow.grove.impl :as impl]\n    [shadow.css] ;; used in macro ns\n    ))\n\n(set! *warn-on-infer* false)\n\n(defn dispatch-up! [{::comp/keys [^not-native parent] :as env} ev-map]\n  {:pre [(map? env)\n         (map? ev-map)\n         (qualified-keyword? (:e ev-map))]}\n  ;; FIXME: should schedule properly when it isn't in event handler already\n  (gp/handle-event! parent ev-map nil env))\n\n(defn query-ident\n  ;; shortcut for ident lookups that can skip EQL queries\n  ([ident]\n   (impl/hook-query ident nil {}))\n  ;; EQL queries\n  ([ident query]\n   (impl/hook-query ident query {}))\n  ([ident query config]\n   (impl/hook-query ident query config)))\n\n(defn query-root\n  ([query]\n   (impl/hook-query nil query {}))\n  ([query config]\n   (impl/hook-query nil query config)))\n\n(defn run-tx\n  [{::rt/keys [runtime-ref] :as env} tx]\n  (impl/process-event runtime-ref tx env))\n\n(defn run-tx! [runtime-ref tx]\n  (assert (rt/ref? runtime-ref) \"expected runtime ref?\")\n  (let [{::rt/keys [scheduler]} @runtime-ref]\n    (gp/run-now! scheduler #(impl/process-event runtime-ref tx nil) ::run-tx!)))\n\n(defn unmount-root [^js root-el]\n  (when-let [^sa/TreeRoot root (.-sg$root root-el)]\n    (.destroy! root true)\n    (js-delete root-el \"sg$root\")\n    (js-delete root-el \"sg$env\")))\n\n(defn watch\n  \"hook that watches an atom and triggers an update on change\n   accepts an optional path-or-fn arg that can be used for quick diffs\n\n   (watch the-atom [:foo])\n   (watch the-atom (fn [old new] ...))\"\n  ([the-atom]\n   (watch the-atom (fn [old new] new)))\n  ([the-atom path-or-fn]\n   (if (vector? path-or-fn)\n     (atoms/AtomWatch. the-atom (fn [old new] (get-in new path-or-fn)) nil nil)\n     (atoms/AtomWatch. the-atom path-or-fn nil nil))))\n\n(defn env-watch\n  ([key-to-atom]\n   (env-watch key-to-atom [] nil))\n  ([key-to-atom path]\n   (env-watch key-to-atom path nil))\n  ([key-to-atom path default]\n   {:pre [(keyword? key-to-atom)\n          (vector? path)]}\n   (atoms/EnvWatch. key-to-atom path default nil nil nil)))\n\n(defn suspense [opts vnode]\n  (suspense/SuspenseInit. opts vnode))\n\n(defn simple-seq [coll render-fn]\n  (sc/simple-seq coll render-fn))\n\n(defn keyed-seq [coll key-fn render-fn]\n  (sc/keyed-seq coll key-fn render-fn))\n\n(deftype TrackChange\n  [^:mutable val\n   ^:mutable trigger-fn\n   ^:mutable result\n   ^:mutable ^not-native component-handle]\n\n  gp/IHook\n  (hook-init! [this ch]\n    (set! component-handle ch)\n    (set! result (trigger-fn (gp/get-component-env component-handle) nil val)))\n\n  (hook-ready? [this] true)\n  (hook-value [this] result)\n  (hook-update! [this] false)\n\n  (hook-deps-update! [this ^TrackChange new-track]\n    (let [next-val (.-val new-track)\n          prev-result result]\n\n      (set! trigger-fn (.-trigger-fn new-track))\n      (set! result (trigger-fn (gp/get-component-env component-handle) val next-val))\n      (set! val next-val)\n\n      (not= result prev-result)))\n\n  (hook-destroy! [this]\n    ))\n\n(defn track-change [val trigger-fn]\n  (TrackChange. val trigger-fn nil nil))\n\n;; using volatile so nobody gets any ideas about add-watch\n;; pretty sure that would cause havoc on the entire rendering\n;; if sometimes does work immediately on set before render can even complete\n(defn ref []\n  (volatile! nil))\n\n(defn effect\n  \"calls (callback env) after render when provided deps argument changes\n   callback can return a function which will be called if cleanup is required\"\n  [deps callback]\n  (comp/EffectHook. deps callback nil true nil))\n\n(defn render-effect\n  \"call (callback env) after every render\"\n  [callback]\n  (comp/EffectHook. :render callback nil true nil))\n\n(defn mount-effect\n  \"call (callback env) on mount once\"\n  [callback]\n  (comp/EffectHook. :mount callback nil true nil))\n\n;; FIXME: does this ever need to take other options?\n(defn portal\n  ([body]\n   (portal/portal js/document.body body))\n  ([ref-node body]\n   (portal/portal ref-node body)))\n\n(defn default-error-handler [component ex]\n  ;; FIXME: this would be the only place there component-name is accessed\n  ;; without this access closure removes it completely in :advanced which is nice\n  ;; ok to access in debug builds though\n  (if ^boolean js/goog.DEBUG\n    (js/console.error (str \"An Error occurred in \" (.. component -config -component-name) \", it will not be rendered.\") component)\n    (js/console.error \"An Error occurred in Component, it will not be rendered.\" component))\n  (js/console.error ex))\n\n(deftype RootEventTarget [rt-ref]\n  gp/IHandleEvents\n  (handle-event! [this ev-map e origin]\n    ;; dropping DOM event since that should have been handled elsewhere already\n    ;; or it wasn't relevant to begin with\n    (impl/process-event rt-ref ev-map origin)))\n\n(defn- make-root-env\n  [rt-ref root-el]\n\n  ;; FIXME: have a shared root scheduler rt-ref\n  ;; multiple roots should schedule in some way not indepdendently\n  (let [event-target\n        (RootEventTarget. rt-ref)\n\n        env-init\n        (::rt/env-init @rt-ref)]\n\n    (reduce\n      (fn [env init-fn]\n        (init-fn env))\n\n      ;; base env, using init-fn to customize\n      {::comp/scheduler (::rt/scheduler @rt-ref)\n       ::comp/event-target event-target\n       ::suspense-keys (atom {})\n       ::rt/root-el root-el\n       ::rt/runtime-ref rt-ref\n       ;; FIXME: get this from rt-ref?\n       ::comp/error-handler default-error-handler}\n\n      env-init)))\n\n(defn render* [rt-ref ^js root-el root-node]\n  {:pre [(rt/ref? rt-ref)]}\n  (if-let [active-root (.-sg$root root-el)]\n    (do (when ^boolean js/goog.DEBUG\n          (comp/mark-all-dirty!))\n\n        ;; FIXME: somehow verify that env hasn't changed\n        ;; env is supposed to be immutable once mounted, but someone may still modify rt-ref\n        ;; but since env is constructed on first mount we don't know what might have changed\n        ;; this is really only a concern for hot-reload, apps only call this once and never update\n\n        (sa/update! active-root root-node)\n        ::updated)\n\n    (let [new-env (make-root-env rt-ref root-el)\n          new-root (sa/dom-root root-el new-env)]\n      (sa/update! new-root root-node)\n      (set! (.-sg$root root-el) new-root)\n      (set! (.-sg$env root-el) new-env)\n      ::started)))\n\n(defn render [rt-ref ^js root-el root-node]\n  {:pre [(rt/ref? rt-ref)]}\n  (gp/run-now! ^not-native (::rt/scheduler @rt-ref) #(render* rt-ref root-el root-node) ::render))\n\n\n(deftype RootScheduler [^:mutable update-pending? work-set]\n  gp/IScheduleWork\n  (schedule-work! [this work-task trigger]\n    (.add work-set work-task)\n\n    (when-not update-pending?\n      (set! update-pending? true)\n      (rt/next-tick #(.process-work! this))))\n\n  (unschedule! [this work-task]\n    (.delete work-set work-task))\n\n  (did-suspend! [this target])\n  (did-finish! [this target])\n\n  (run-now! [this action trigger]\n    (set! update-pending? true)\n    (action)\n    ;; work must happen immediately since (action) may need the DOM event that triggered it\n    ;; any delaying the work here may result in additional paint calls (making things slower overall)\n    ;; if things could have been async the work should have been queued as such and not ended up here\n    (.process-work! this))\n\n  Object\n  (process-work! [this]\n    (try\n      (let [iter (.values work-set)]\n        (loop []\n          (let [current (.next iter)]\n            (when (not ^boolean (.-done current))\n              (gp/work! ^not-native (.-value current))\n\n              ;; should time slice later and only continue work\n              ;; until a given time budget is consumed\n              (recur)))))\n\n      (finally\n        (set! update-pending? false)))))\n\n;; FIXME: make this delegate to the above, don't duplicate the code\n(deftype TracingRootScheduler [^:mutable update-pending? work-set]\n  gp/IScheduleWork\n  (schedule-work! [this work-task trigger]\n    (.add work-set work-task)\n\n    (when-not update-pending?\n      (set! update-pending? true)\n      (rt/next-tick\n        (fn []\n          (js/console.group (str trigger))\n          (try\n            (.process-work! this)\n            (finally\n              (js/console.groupEnd)))\n          ))))\n\n  (unschedule! [this work-task]\n    (.delete work-set work-task))\n\n  (did-suspend! [this target])\n  (did-finish! [this target])\n\n  (run-now! [this action trigger]\n    (js/console.group (str trigger))\n    (try\n      (set! update-pending? true)\n      (action)\n      ;; work must happen immediately since (action) may need the DOM event that triggered it\n      ;; any delaying the work here may result in additional paint calls (making things slower overall)\n      ;; if things could have been async the work should have been queued as such and not ended up here\n      (.process-work! this)\n\n      (finally\n        (js/console.groupEnd))\n      ))\n\n  Object\n  (process-work! [this]\n    (try\n      (let [iter (.values work-set)]\n        (loop []\n          (let [current (.next iter)]\n            (when (not ^boolean (.-done current))\n              (gp/work! ^not-native (.-value current))\n\n              ;; should time slice later and only continue work\n              ;; until a given time budget is consumed\n              (recur)))))\n\n      (finally\n        (set! update-pending? false)))))\n\n(goog-define TRACE false)\n\n(defn prepare\n  ([data-ref runtime-id]\n   (prepare {} data-ref runtime-id))\n  ([init data-ref runtime-id]\n   (let [root-scheduler\n         (if ^boolean TRACE\n           (TracingRootScheduler. false (js/Set.))\n           (RootScheduler. false (js/Set.)))\n\n         rt-ref\n         (atom nil)\n\n         active-queries-map\n         (js/Map.)]\n\n     (reset! rt-ref\n       (assoc init\n         ::rt/rt true\n         ::rt/scheduler root-scheduler\n         ::rt/runtime-id runtime-id\n         ::rt/data-ref data-ref\n         ::rt/event-config {}\n         ::rt/fx-config {}\n         ::rt/active-queries-map active-queries-map\n         ::rt/key-index-seq (atom 0)\n         ::rt/key-index-ref (atom {})\n         ::rt/query-index-map (js/Map.)\n         ::rt/query-index-ref (atom {})\n         ::rt/env-init []))\n\n     (when ^boolean js/goog.DEBUG\n       (swap! rt/known-runtimes-ref assoc runtime-id rt-ref))\n\n     rt-ref)))\n\n(defn vec-conj [x y]\n  (if (nil? x) [y] (conj x y)))\n\n(defn queue-fx [env fx-id fx-val]\n  (update env ::rt/fx vec-conj [fx-id fx-val]))\n\n(defn reg-event [rt-ref ev-id handler-fn]\n  {:pre [(keyword? ev-id)\n         (ifn? handler-fn)]}\n  (swap! rt-ref assoc-in [::rt/event-config ev-id] handler-fn)\n  rt-ref)\n\n(defn reg-fx [rt-ref fx-id handler-fn]\n  (swap! rt-ref assoc-in [::rt/fx-config fx-id] handler-fn)\n  rt-ref)\n","~:reader-features",["^E",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["p__12923","map__12926","cljs.core/--destructure-map","cljs.core.get","js/Error","shadow.grove/dispatch-up!","parent","env","ev-map","cljs.core/map?","cljs.core/qualified-keyword?","var_args","G__12935","shadow.grove/query-ident","ident","shadow.grove.impl/hook-query","query","config","G__12951","shadow.grove/query-root","p__12965","map__12966","shadow.grove/run-tx","runtime-ref","tx","shadow.grove.impl/process-event","shadow.grove/run-tx!","shadow.grove.runtime/ref?","map__12971","cljs.core/deref","scheduler","shadow.grove.protocols/run-now!","shadow.grove/unmount-root","root-el","temp__5804__auto__","root","G__12975","shadow.grove/watch","the-atom","shadow.grove.watch","old","new","path-or-fn","cljs.core/vector?","shadow.grove.ui.atoms/AtomWatch","cljs.core.get_in","G__12981","shadow.grove/env-watch","key-to-atom","shadow.grove.env_watch","path","default","cljs.core/Keyword","shadow.grove.ui.atoms/EnvWatch","shadow.grove/suspense","opts","vnode","shadow.grove.ui.suspense/SuspenseInit","shadow.grove/simple-seq","coll","render-fn","shadow.arborist.collections/simple-seq","shadow.grove/keyed-seq","key-fn","shadow.arborist.collections/keyed-seq","cljs.core/PROTOCOL_SENTINEL","this__5330__auto__","writer__5331__auto__","opt__5332__auto__","cljs.core/-write","shadow.grove/TrackChange","shadow.grove/->TrackChange","val","trigger-fn","result","component-handle","this","ch","G__12992","G__12993","G__12994","new-track","next-val","prev-result","G__13000","G__13001","G__13002","cljs.core.not_EQ_","shadow.grove/track-change","shadow.grove/ref","cljs.core/volatile!","shadow.grove/effect","deps","callback","shadow.grove.components/EffectHook","shadow.grove/render-effect","shadow.grove/mount-effect","G__13025","shadow.grove/portal","body","shadow.grove.ui.portal/portal","js/document.body","ref-node","shadow.grove/default-error-handler","component","ex","js/goog.DEBUG","js/console.error","shadow.grove/RootEventTarget","shadow.grove/->RootEventTarget","rt-ref","e","origin","shadow.grove/make-root-env","event-target","env-init","cljs.core.reduce","init-fn","cljs.core.atom","shadow.grove/render*","root-node","temp__5802__auto__","active-root","shadow.grove.components/mark-all-dirty!","shadow.arborist/update!","new-env","new-root","shadow.arborist.dom_root","shadow.grove/render","shadow.grove/RootScheduler","shadow.grove/->RootScheduler","update-pending?","work-set","work-task","trigger","shadow.grove.runtime/next-tick","target","action","iter","current","shadow.grove/TracingRootScheduler","shadow.grove/->TracingRootScheduler","js/console.group","js/console.groupEnd","js/goog.define","shadow.grove/TRACE","G__13100","shadow.grove/prepare","data-ref","runtime-id","shadow.grove.prepare","init","root-scheduler","js/Set","active-queries-map","js/Map","cljs.core/reset!","cljs.core.assoc","cljs.core.swap_BANG_","shadow.grove.runtime/known-runtimes-ref","cljs.core/assoc","shadow.grove/vec-conj","x","y","cljs.core.conj","shadow.grove/queue-fx","fx-id","fx-val","cljs.core.update","shadow.grove/reg-event","ev-id","handler-fn","cljs.core/ifn?","cljs.core/assoc-in","shadow.grove/reg-fx"]],"~:used-vars",["^E",["~$shadow.grove.impl/process-event","~$cljs.core/--destructure-map","~$cljs.core/PROTOCOL_SENTINEL","~$js/goog.define","~$shadow.arborist/update!","~$shadow.grove/track-change","~$shadow.grove/unmount-root","~$js/console.error","~$shadow.grove/dispatch-up!","~$cljs.core/vector?","~$cljs.core/ifn?","~$shadow.grove/run-tx!","~$cljs.core/-write","~$shadow.grove/->TracingRootScheduler","~$cljs.core/deref","~$shadow.arborist.collections/simple-seq","~$shadow.grove/portal","~$cljs.core/reduce","~$shadow.grove/queue-fx","~$cljs.core/Keyword","~$shadow.grove/query-root","~$shadow.grove.protocols/handle-event!","~$shadow.grove.ui.atoms/AtomWatch","~$shadow.grove/TrackChange","~$shadow.grove.impl/hook-query","~$shadow.grove.ui.suspense/SuspenseInit","~$cljs.core/not=","~$js/console.groupEnd","~$shadow.grove/simple-seq","~$shadow.grove/keyed-seq","~$cljs.core/atom","~$shadow.grove.ui.atoms/EnvWatch","~$cljs.core/qualified-keyword?","~$js/console.group","~$shadow.grove/TracingRootScheduler","~$shadow.grove/ref","~$shadow.grove/env-watch","~$js/document.body","~$shadow.grove/effect","~$cljs.core/map?","~$cljs.core/reset!","~$cljs.core/conj","~$cljs.core/update","~$shadow.arborist.collections/keyed-seq","~$shadow.grove.ui.portal/portal","~$shadow.grove/reg-event","~$cljs.core/volatile!","~$shadow.grove.runtime/ref?","~$cljs.core/get-in","~$shadow.grove/RootEventTarget","~$shadow.grove.runtime/known-runtimes-ref","~$cljs.core/swap!","~$shadow.grove/make-root-env","~$shadow.grove.protocols/run-now!","~$shadow.grove/TRACE","~$cljs.core/get","~$shadow.grove.protocols/work!","~$shadow.grove/render","~$shadow.grove/->RootEventTarget","~$shadow.grove/run-tx","~$shadow.grove/->RootScheduler","~$shadow.grove.runtime/next-tick","~$shadow.grove/RootScheduler","~$shadow.grove.components/EffectHook","~$js/goog.DEBUG","~$shadow.grove/->TrackChange","~$shadow.grove/default-error-handler","~$shadow.arborist/dom-root","~$js/Map","~$shadow.grove/mount-effect","~$js/Set","~$cljs.core/not","~$shadow.grove.components/mark-all-dirty!","~$shadow.grove/watch","~$cljs.core/assoc","~$cljs.core/assoc-in","~$shadow.grove.protocols/get-component-env","~$shadow.grove/reg-fx","~$shadow.grove/prepare","~$shadow.grove/render*","~$shadow.grove/render-effect","~$js/Error","~$shadow.grove/suspense","~$shadow.grove/vec-conj","~$shadow.grove/query-ident"]]],"~:cache-keys",["~#cmap",[["^24","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^E",[]],"~:deps-syms",["^1C","~$goog.dom.HtmlElement"]]],["^24","goog/labs/useragent/platform.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","~$goog.string.internal","~$goog.labs.userAgent.util"]]],["^24","goog/math/math.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","~$goog.asserts"]]],["^24","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C"]]],["^24","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","~$goog.array","~$goog.object","^4E","^4D"]]],["^24","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4F","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^4D"]]],["^24","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4F"]]],["^24","shadow/arborist.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?","^1>","^1R","^1;","^1N","^1B","^1S"]]],["^24","goog/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^4E","~$goog.reflect","^4D"]]],["^24","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C"]]],["^24","shadow/grove.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?","^1S","^1>","^1N","^1R","^1H","^1B","^1A","^15","^1=","^1J","^1K","^1F","^16","^1;","^19","^18","^1:"]]],["^24","shadow/cljs/modern.cljs"],["ee16ada88101a631936f48dec7336340a66616ec","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?"]]],["^24","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C"]]],["^24","shadow/arborist/protocols.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?"]]],["^24","shadow/arborist/common.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?","~$goog.dom","^1>"]]],["^24","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C"]]],["^24","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C"]]],["^24","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4F"]]],"~:SHADOW-TIMESTAMP",[1693915017000,1693915017000,1667395541000],["^24","shadow/grove/ui/suspense.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?","^1N","^1>","^15","^1A","^1=","^1J"]]],["^24","shadow/arborist/attributes.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?","^4H","~$goog.string","~$goog.functions","~$clojure.string","^1>"]]],["^24","shadow/grove/ui/portal.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?","^1>","^1N"]]],["^24","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4F","^4R"]]],["^24","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4F","~$goog.fs.blob","^4I","~$goog.html.SafeScript","~$goog.html.trustedtypes","^4K","^4L","^4M","^4N"]]],["^24","shadow/grove/ui/util.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?"]]],["^24","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C"]]],["^24","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C"]]],["^24","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4M","~$goog.html.SafeUrl","^4N","^4F","^4D"]]],["^24","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4F","~$goog.dom.asserts","^4V","~$goog.html.SafeHtml","^4Y","~$goog.html.SafeStyle","^4[","^4J","~$goog.html.uncheckedconversions","^4M","^4D"]]],["^24","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4M","^4K","^4L","^4Y","^52","~$goog.html.SafeStyleSheet","^4[","~$goog.dom.TagName","^4J","^4N","^4F","^4O","^4G","^4H","^4D","~$goog.dom.tags","^4Z"]]],["^24","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4H"]]],["^24","goog/math/size.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C"]]],["^24","shadow/css.cljs"],["d2832d43de73c65f701c1751df8edd4523203e6a","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?"]]],["^24","shadow/grove/db.cljc"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?","~$shadow.grove.db.ident"]]],["^24","goog/labs/useragent/engine.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4G","^4D","^4E"]]],["^24","shadow/arborist/collections.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?","^1>","^1N"]]],["^24","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C"]]],["^24","shadow/arborist/fragments.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?","^1>","^1;","^1N"]]],["^24","goog/dom/dom.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4G","^4F","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^55","~$goog.dom.safe","^51","^53","~$goog.math.Coordinate","~$goog.math.Size","^4H","^4U","^4M","~$goog.string.Unicode","~$goog.userAgent"]]],["^24","shadow/grove/components.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?","^4H","~$shadow.cljs.modern","^1H","^1N","^1>","^1;","^15","^1A"]]],["^24","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","~$goog.debug.Error","^59"]]],["^24","shadow/grove/protocols.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?"]]],["^24","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4G","^4F","~$goog.collections.maps","^4U","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^24","shadow/grove/runtime.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?","^1S","^1A"]]],["^24","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C"]]],["^24","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C"]]],["^24","shadow/grove/impl.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?","~$clojure.set","^1A","^15","^19","~$shadow.grove.eql-query","^1="]]],["^24","shadow/grove/ui/atoms.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?","^1=","^1A","^1J"]]],["^24","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C"]]],["^24","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",[]]],["^24","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4G","^4H"]]],["^24","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?","^4U","~$goog.string.StringBuffer"]]],["^24","shadow/grove/db/ident.cljc"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?"]]],["^24","goog/debug/entrypointregistry.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4F"]]],["^24","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^5:","^53","^4M","^4D"]]],["^24","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C"]]],["^24","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","~$goog.labs.userAgent","^4D"]]],["^24","shadow/grove/eql_query.cljc"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?","^19"]]],["^24","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C"]]],["^24","goog/math/coordinate.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","~$goog.math"]]],["^24","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C"]]],["^24","goog/async/nexttick.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","~$goog.debug.entryPointRegistry","^4S","^55","^4V","^4O","^4P"]]],["^24","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4F","^51","^4Y","^52","^54","^4[","^4J","^4M","^4D","^4K"]]],["^24","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C"]]],["^24","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","~$goog.math.Long","~$goog.math.Integer","^4U","^4H","^4G","~$goog.Uri","^5H"]]],["^24","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4M","^4N","^4Z","^4F"]]],["^24","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4M","^52","^4N","^4H","^4F","^4D"]]],["^24","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4R"]]],["^24","goog/dom/browserfeature.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^5>"]]],["^24","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^1?"]]],["^24","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4F","^4U"]]],["^24","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4?",["^ ","^4@",null,"^4A",["^E",[]],"^4B",["^1C","^4F","^4N"]]]]],"~:clj-info",["^ ","jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/com/thheller/shadow-grove/0.4.2/shadow-grove-0.4.2.jar!/shadow/arborist.clj",1693915017000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/com/thheller/shadow-grove/0.4.2/shadow-grove-0.4.2.jar!/shadow/grove.clj",1693915017000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1649406309000,"jar:file:/home/jam/.m2/repository/com/thheller/shadow-css/0.3.0/shadow-css-0.3.0.jar!/shadow/css/specs.cljc",1693915017000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/com/thheller/shadow-grove/0.4.2/shadow-grove-0.4.2.jar!/shadow/grove/components.clj",1693915017000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/spec.alpha/0.3.218/spec.alpha-0.3.218.jar!/clojure/spec/gen/alpha.clj",1649406308000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1667395541000,"jar:file:/home/jam/.m2/repository/thheller/shadow-cljs/2.19.8/shadow-cljs-2.19.8-aot.jar!/shadow/cljs/modern.cljc",1693915017000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1667395541000,"jar:file:/home/jam/.m2/repository/com/thheller/shadow-grove/0.4.2/shadow-grove-0.4.2.jar!/shadow/arborist/fragments.cljc",1693915017000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/spec.alpha/0.3.218/spec.alpha-0.3.218.jar!/clojure/spec/alpha.clj",1649406308000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/com/thheller/shadow-css/0.3.0/shadow-css-0.3.0.jar!/shadow/css.clj",1693915017000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","grove - a small wood or forested area (ie. trees)\n   a mini re-frame/fulcro hybrid. re-frame event styles + somewhat normalized db","^7","shadow/grove.cljs","^8",1,"^9",5,"^:",1,"^;",17],"^<",["^ ","^=","^>","^?","^@","^A","^B"],"^C",null,"^D",["^E",[]],"^F",["^ ","^G",["^ ","^H",["^I",[["~$&","^J"]]],"^8",19,"^9",1,"^7","shadow/grove.clj","^K","^L","^M","^N","^O",true],"^P",["^ ","^H",["^I",[["~$&","^Q"]]],"^8",5,"^9",1,"^7","shadow/grove.clj","^K","^R","^M","^N","^O",true],"^S",["^ ","^H",["^I",[["~$&","^J"]]],"^8",16,"^9",1,"^7","shadow/grove.clj","^K","^T","^M","^N","^O",true],"^U",["^ ","^H",["^I",[["~$&","^J"]]],"^8",25,"^9",1,"^7","shadow/grove.clj","^K","^V","^M","^N","^O",true],"^W",["^ ","^H",["^I",[["~$&","^J"]]],"^8",13,"^9",1,"^7","shadow/grove.clj","^K","^X","^M","^N","^O",true],"^Y",["^ ","^H",["^I",[["~$&","^J"]]],"^8",22,"^9",1,"^7","shadow/grove.clj","^K","^Z","^M","^N","^O",true],"^[",["^ ","^H",["^I",[["~$&","^J"]]],"^8",8,"^9",1,"^7","shadow/grove.clj","^K","^10","^M","^N","^O",true]],"~:shadow/js-access-properties",["^E",["sg$root","body","sg$env"]],"^K","^N","^11",["^ "],"^13",null,"^14",["^ ","^15","^15","^16","^16","^17","^18","^19","^19","^1:","^1:","~$a","^1;","^1<","^1=","^1>","^1>","^1?","^1?","^1@","^1A","^1=","^1=","^1B","^1B","^1C","^1C","^1;","^1;","^1D","^16","^1E","^1F","^1G","^19","^18","^18","^1H","^1H","^1I","^1J","^1K","^1K","^1L","^1K","^1M","^1H","^1F","^1F","^1N","^1N","^1O","^1N","^1P","^15","^1J","^1J","^1A","^1A","^1Q","^1>","^1R","^1R","^1S","^1S","^1T","^1B"],"^1U",["^E",["^1V","^1W"]],"~:shadow/js-access-global",["^E",["Map","document","Error","Set"]],"^1X",null,"~:defs",["^ ","~$effect",["^ ","~:protocol-inline",null,"^5",["^ ","^7","shadow/grove.cljs","^8",134,"^9",7,"^:",134,"^;",13,"^H",["^I",["~$quote",["^I",[["~$deps","~$callback"]]]]],"^6","calls (callback env) after render when provided deps argument changes\n   callback can return a function which will be called if cleanup is required"],"^K","^3:","^7","shadow/grove.cljs","^;",13,"~:method-params",["^I",[["^6R","^6S"]]],"~:protocol-impl",null,"~:arglists-meta",["^I",[null,null]],"^9",1,"~:variadic?",false,"^8",134,"~:ret-tag","^3S","^:",134,"~:max-fixed-arity",2,"~:fn-var",true,"^H",["^I",["^6Q",["^I",[["^6R","^6S"]]]]],"^6","calls (callback env) after render when provided deps argument changes\n   callback can return a function which will be called if cleanup is required"],"~$query-ident",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",34,"^9",7,"^:",34,"^;",18,"^H",["^I",["^6Q",["^I",[["~$ident"],["^70","~$query"],["^70","^71","~$config"]]]]],"~:top-fn",["^ ","^6W",false,"~:fixed-arity",3,"^6Y",3,"^6T",[["^70"],["^70","^71"],["^70","^71","^72"]],"^H",["^I",[["^70"],["^70","^71"],["^70","^71","^72"]]],"^6V",["^I",[null,null,null]]]],"^K","^4<","^7","shadow/grove.cljs","^;",18,"^73",["^ ","^6W",false,"^74",3,"^6Y",3,"^6T",[["^70"],["^70","^71"],["^70","^71","^72"]],"^H",["^I",[["^70"],["^70","^71"],["^70","^71","^72"]]],"^6V",["^I",[null,null,null]]],"^6T",[["^70"],["^70","^71"],["^70","^71","^72"]],"^6U",null,"^74",3,"^6V",["^I",[null,null,null]],"^9",1,"^6W",false,"~:methods",[["^ ","^74",1,"^6W",false,"~:tag","~$shadow.grove.impl/HookQuery"],["^ ","^74",2,"^6W",false,"^76","^77"],["^ ","^74",3,"^6W",false,"^76","^77"]],"^8",34,"^:",34,"^6Y",3,"^6Z",true,"^H",["^I",[["^70"],["^70","^71"],["^70","^71","^72"]]]],"~$reg-event",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",360,"^9",7,"^:",360,"^;",16,"^H",["^I",["^6Q",["^I",[["~$rt-ref","~$ev-id","~$handler-fn"]]]]]],"^K","^3A","^7","shadow/grove.cljs","^;",16,"^6T",["^I",[["^79","^7:","^7;"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",360,"^:",360,"^6Y",3,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^79","^7:","^7;"]]]]]],"~$track-change",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",125,"^9",7,"^:",125,"^;",19,"^H",["^I",["^6Q",["^I",[["~$val","~$trigger-fn"]]]]]],"^K","^2E","^7","shadow/grove.cljs","^;",19,"^6T",["^I",[["^7=","^7>"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",125,"^6X","^2W","^:",125,"^6Y",2,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^7=","^7>"]]]]]],"~$TracingRootScheduler",["^ ","~:num-fields",2,"~:protocols",["^E",["~$shadow.grove.protocols/IScheduleWork","~$cljs.core/Object"]],"^K","^36","^7","shadow/grove.cljs","^;",30,"~:type",true,"^9",10,"^8",265,"~:record",false,"^:",265,"^76","~$function","~:skip-protocol-flag",null],"~$query-root",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",44,"^9",7,"^:",44,"^;",17,"^H",["^I",["^6Q",["^I",[["^71"],["^71","^72"]]]]],"^73",["^ ","^6W",false,"^74",2,"^6Y",2,"^6T",[["^71"],["^71","^72"]],"^H",["^I",[["^71"],["^71","^72"]]],"^6V",["^I",[null,null]]]],"^K","^2T","^7","shadow/grove.cljs","^;",17,"^73",["^ ","^6W",false,"^74",2,"^6Y",2,"^6T",[["^71"],["^71","^72"]],"^H",["^I",[["^71"],["^71","^72"]]],"^6V",["^I",[null,null]]],"^6T",[["^71"],["^71","^72"]],"^6U",null,"^74",2,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^75",[["^ ","^74",1,"^6W",false,"^76","^77"],["^ ","^74",2,"^6W",false,"^76","^77"]],"^8",44,"^:",44,"^6Y",2,"^6Z",true,"^H",["^I",[["^71"],["^71","^72"]]]],"~$unmount-root",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",59,"^9",7,"^:",59,"^;",19,"^H",["^I",["^6Q",["^I",[["~$root-el"]]]]]],"^K","^2F","^7","shadow/grove.cljs","^;",19,"^6T",["^I",[["^7J"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",59,"^6X",["^E",["~$any","~$clj-nil"]],"^:",59,"^6Y",1,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^7J"]]]]]],"~$->RootScheduler",["^ ","^6P",null,"^5",["^ ","^7A",["^E",["^7B","^7C"]],"^7","shadow/grove.cljs","^;",23,"^9",10,"~:factory","~:positional","^8",225,"^:",225,"^H",["^I",["^6Q",["^I",[["~$update-pending?","~$work-set"]]]]],"^7G",null,"^6","Positional factory function for shadow.grove/RootScheduler."],"^7A",["^E",["^7B","^7C"]],"^K","^3P","^7","shadow/grove.cljs","^;",23,"^6T",["^I",[["^7P","^7Q"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^7N","^7O","^8",225,"^6X","^3R","^:",225,"^6Y",2,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^7P","^7Q"]]]]],"^7G",null,"^6","Positional factory function for shadow.grove/RootScheduler."],"~$->TrackChange",["^ ","^6P",null,"^5",["^ ","^7A",["^E",["~$shadow.grove.protocols/IHook"]],"^7","shadow/grove.cljs","^;",21,"^9",10,"^7N","^7O","^8",97,"^:",97,"^H",["^I",["^6Q",["^I",[["^7=","^7>","~$result","~$component-handle"]]]]],"^7G",null,"^6","Positional factory function for shadow.grove/TrackChange."],"^7A",["^E",["^7S"]],"^K","^3U","^7","shadow/grove.cljs","^;",21,"^6T",["^I",[["^7=","^7>","^7T","^7U"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^7N","^7O","^8",97,"^6X","^2W","^:",97,"^6Y",4,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^7=","^7>","^7T","^7U"]]]]],"^7G",null,"^6","Positional factory function for shadow.grove/TrackChange."],"~$simple-seq",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",91,"^9",7,"^:",91,"^;",17,"^H",["^I",["^6Q",["^I",[["~$coll","~$render-fn"]]]]]],"^K","^30","^7","shadow/grove.cljs","^;",17,"^6T",["^I",[["^7W","^7X"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",91,"^6X",["^E",["~$shadow.arborist.collections/SimpleCollectionInit","^7L"]],"^:",91,"^6Y",2,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^7W","^7X"]]]]]],"^1D",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",151,"^9",7,"^:",151,"^;",13,"^H",["^I",["^6Q",["^I",[["^J"],["~$ref-node","^J"]]]]],"^73",["^ ","^6W",false,"^74",2,"^6Y",2,"^6T",[["^J"],["^7Z","^J"]],"^H",["^I",[["^J"],["^7Z","^J"]]],"^6V",["^I",[null,null]]]],"^K","^2P","^7","shadow/grove.cljs","^;",13,"^73",["^ ","^6W",false,"^74",2,"^6Y",2,"^6T",[["^J"],["^7Z","^J"]],"^H",["^I",[["^J"],["^7Z","^J"]]],"^6V",["^I",[null,null]]],"^6T",[["^J"],["^7Z","^J"]],"^6U",null,"^74",2,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^75",[["^ ","^74",1,"^6W",false,"^76","~$shadow.grove.ui.portal/PortalSeed"],["^ ","^74",2,"^6W",false,"^76","^7["]],"^8",151,"^:",151,"^6Y",2,"^6Z",true,"^H",["^I",[["^J"],["^7Z","^J"]]]],"~$->TracingRootScheduler",["^ ","^6P",null,"^5",["^ ","^7A",["^E",["^7B","^7C"]],"^7","shadow/grove.cljs","^;",30,"^9",10,"^7N","^7O","^8",265,"^:",265,"^H",["^I",["^6Q",["^I",[["^7P","^7Q"]]]]],"^7G",null,"^6","Positional factory function for shadow.grove/TracingRootScheduler."],"^7A",["^E",["^7B","^7C"]],"^K","^2M","^7","shadow/grove.cljs","^;",30,"^6T",["^I",[["^7P","^7Q"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^7N","^7O","^8",265,"^6X","^36","^:",265,"^6Y",2,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^7P","^7Q"]]]]],"^7G",null,"^6","Positional factory function for shadow.grove/TracingRootScheduler."],"~$TrackChange",["^ ","^7@",4,"^7A",["^E",["^7S"]],"^K","^2W","^7","shadow/grove.cljs","^;",21,"^7D",true,"^9",10,"^8",97,"^7E",false,"^:",97,"^76","^7F","^7G",null],"~$ref",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",131,"^9",7,"^:",131,"^;",10,"^H",["^I",["^6Q",["^I",[[]]]]]],"^K","^37","^7","shadow/grove.cljs","^;",10,"^6T",["^I",[[]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",131,"^6X","~$cljs.core/Volatile","^:",131,"^6Y",0,"^6Z",true,"^H",["^I",["^6Q",["^I",[[]]]]]],"~$env-watch",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",78,"^9",7,"^:",78,"^;",16,"^H",["^I",["^6Q",["^I",[["~$key-to-atom"],["^85","~$path"],["^85","^86","~$default"]]]]],"^73",["^ ","^6W",false,"^74",3,"^6Y",3,"^6T",[["^85"],["^85","^86"],["^85","^86","^87"]],"^H",["^I",[["^85"],["^85","^86"],["^85","^86","^87"]]],"^6V",["^I",[null,null,null]]]],"^K","^38","^7","shadow/grove.cljs","^;",16,"^73",["^ ","^6W",false,"^74",3,"^6Y",3,"^6T",[["^85"],["^85","^86"],["^85","^86","^87"]],"^H",["^I",[["^85"],["^85","^86"],["^85","^86","^87"]]],"^6V",["^I",[null,null,null]]],"^6T",[["^85"],["^85","^86"],["^85","^86","^87"]],"^6U",null,"^74",3,"^6V",["^I",[null,null,null]],"^9",1,"^6W",false,"^75",[["^ ","^74",1,"^6W",false,"^76","^7K"],["^ ","^74",2,"^6W",false,"^76","^7K"],["^ ","^74",3,"^6W",false,"^76","^33"]],"^8",78,"^:",78,"^6Y",3,"^6Z",true,"^H",["^I",[["^85"],["^85","^86"],["^85","^86","^87"]]]],"~$dispatch-up!",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",27,"^9",7,"^:",27,"^;",19,"^H",["^I",["^6Q",["^I",[[["^ ","~:shadow.grove.components/keys",["~$parent"],"^1[","~$env"],"~$ev-map"]]]]]],"^K","^2H","^7","shadow/grove.cljs","^;",19,"^6T",["^I",[["~$p__12923","^8<"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",27,"^6X","^7K","^:",27,"^6Y",2,"^6Z",true,"^H",["^I",["^6Q",["^I",[[["^ ","^89",["^8:"],"^1[","^8;"],"^8<"]]]]]],"~$render*",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",199,"^9",7,"^:",199,"^;",14,"^H",["^I",["^6Q",["^I",[["^79","^7J","~$root-node"]]]]]],"^K","^47","^7","shadow/grove.cljs","^;",14,"^6T",["^I",[["^79","^7J","^8?"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",199,"^6X","^2S","^:",199,"^6Y",3,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^79","^7J","^8?"]]]]]],"~$keyed-seq",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",94,"^9",7,"^:",94,"^;",16,"^H",["^I",["^6Q",["^I",[["^7W","~$key-fn","^7X"]]]]]],"^K","^31","^7","shadow/grove.cljs","^;",16,"^6T",["^I",[["^7W","^8A","^7X"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",94,"^6X",["^E",["~$shadow.arborist.collections/KeyedCollectionInit","^7L"]],"^:",94,"^6Y",3,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^7W","^8A","^7X"]]]]]],"^1L",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",88,"^9",7,"^:",88,"^;",15,"^H",["^I",["^6Q",["^I",[["~$opts","~$vnode"]]]]]],"^K","^4:","^7","shadow/grove.cljs","^;",15,"^6T",["^I",[["^8C","^8D"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",88,"^6X","^2Y","^:",88,"^6Y",2,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^8C","^8D"]]]]]],"~$make-root-env",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",173,"^9",8,"^:",173,"^;",21,"~:private",true,"^H",["^I",["^6Q",["^I",[["^79","^7J"]]]]]],"^8F",true,"^K","^3H","^7","shadow/grove.cljs","^;",21,"^6T",["^I",[["^79","^7J"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",173,"^6X",["^E",[null,"^7K"]],"^:",173,"^6Y",2,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^79","^7J"]]]]]],"~$reg-fx",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",366,"^9",7,"^:",366,"^;",13,"^H",["^I",["^6Q",["^I",[["^79","~$fx-id","^7;"]]]]]],"^K","^45","^7","shadow/grove.cljs","^;",13,"^6T",["^I",[["^79","^8H","^7;"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",366,"^:",366,"^6Y",3,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^79","^8H","^7;"]]]]]],"~$RootEventTarget",["^ ","^7@",1,"^7A",["^E",["~$shadow.grove.protocols/IHandleEvents"]],"^K","^3E","^7","shadow/grove.cljs","^;",25,"^7D",true,"^9",10,"^8",166,"^7E",false,"^:",166,"^76","^7F","^7G",null],"~$->RootEventTarget",["^ ","^6P",null,"^5",["^ ","^7A",["^E",["^8J"]],"^7","shadow/grove.cljs","^;",25,"^9",10,"^7N","^7O","^8",166,"^:",166,"^H",["^I",["^6Q",["^I",[["^79"]]]]],"^7G",null,"^6","Positional factory function for shadow.grove/RootEventTarget."],"^7A",["^E",["^8J"]],"^K","^3N","^7","shadow/grove.cljs","^;",25,"^6T",["^I",[["^79"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^7N","^7O","^8",166,"^6X","^3E","^:",166,"^6Y",1,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^79"]]]]],"^7G",null,"^6","Positional factory function for shadow.grove/RootEventTarget."],"~$run-tx",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",50,"^9",7,"^:",50,"^;",13,"^H",["^I",["^6Q",["^I",[[["^ ","~:shadow.grove.runtime/keys",["~$runtime-ref"],"^1[","^8;"],"~$tx"]]]]]],"^K","^3O","^7","shadow/grove.cljs","^;",13,"^6T",["^I",[["~$p__12965","^8O"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",50,"^6X","^7K","^:",50,"^6Y",2,"^6Z",true,"^H",["^I",["^6Q",["^I",[[["^ ","^8M",["^8N"],"^1[","^8;"],"^8O"]]]]]],"~$run-tx!",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",54,"^9",7,"^:",54,"^;",14,"^H",["^I",["^6Q",["^I",[["^8N","^8O"]]]]]],"^K","^2K","^7","shadow/grove.cljs","^;",14,"^6T",["^I",[["^8N","^8O"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",54,"^6X","^7K","^:",54,"^6Y",2,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^8N","^8O"]]]]]],"~$vec-conj",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",354,"^9",7,"^:",354,"^;",15,"^H",["^I",["^6Q",["^I",[["~$x","~$y"]]]]]],"^K","^4;","^7","shadow/grove.cljs","^;",15,"^6T",["^I",[["~$x","~$y"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",354,"^6X","~$clj","^:",354,"^6Y",2,"^6Z",true,"^H",["^I",["^6Q",["^I",[["~$x","~$y"]]]]]],"~$render",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",220,"^9",7,"^:",220,"^;",13,"^H",["^I",["^6Q",["^I",[["^79","^7J","^8?"]]]]]],"^K","^3M","^7","shadow/grove.cljs","^;",13,"^6T",["^I",[["^79","^7J","^8?"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",220,"^6X","^7K","^:",220,"^6Y",3,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^79","^7J","^8?"]]]]]],"~$TRACE",["^ ","^5",["^ ","^7","shadow/grove.cljs","^8",317,"^9",14,"^:",317,"^;",19,"~:jsdoc",["^I",["@define {boolean}"]],"^76","~$boolean"],"^K","^3J","^7","shadow/grove.cljs","^;",19,"^9",1,"^8",317,"^:",317,"^76","^8W","^8V",["^I",["@define {boolean}"]]],"~$default-error-handler",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",157,"^9",7,"^:",157,"^;",28,"^H",["^I",["^6Q",["^I",[["~$component","~$ex"]]]]]],"^K","^3V","^7","shadow/grove.cljs","^;",28,"^6T",["^I",[["^8Y","^8Z"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",157,"^6X","~$js","^:",157,"^6Y",2,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^8Y","^8Z"]]]]]],"~$queue-fx",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",357,"^9",7,"^:",357,"^;",15,"^H",["^I",["^6Q",["^I",[["^8;","^8H","~$fx-val"]]]]]],"^K","^2R","^7","shadow/grove.cljs","^;",15,"^6T",["^I",[["^8;","^8H","^91"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",357,"^6X",["^E",["^8S","^7K"]],"^:",357,"^6Y",3,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^8;","^8H","^91"]]]]]],"~$render-effect",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",140,"^9",7,"^:",140,"^;",20,"^H",["^I",["^6Q",["^I",[["^6S"]]]]],"^6","call (callback env) after every render"],"^K","^48","^7","shadow/grove.cljs","^;",20,"^6T",["^I",[["^6S"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",140,"^6X","^3S","^:",140,"^6Y",1,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^6S"]]]]],"^6","call (callback env) after every render"],"~$watch",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",65,"^9",7,"^:",65,"^;",12,"^H",["^I",["^6Q",["^I",[["~$the-atom"],["^94","~$path-or-fn"]]]]],"^6","hook that watches an atom and triggers an update on change\n   accepts an optional path-or-fn arg that can be used for quick diffs\n\n   (watch the-atom [:foo])\n   (watch the-atom (fn [old new] ...))","^73",["^ ","^6W",false,"^74",2,"^6Y",2,"^6T",[["^94"],["^94","^95"]],"^H",["^I",[["^94"],["^94","^95"]]],"^6V",["^I",[null,null]]]],"^K","^41","^7","shadow/grove.cljs","^;",12,"^73",["^ ","^6W",false,"^74",2,"^6Y",2,"^6T",[["^94"],["^94","^95"]],"^H",["^I",[["^94"],["^94","^95"]]],"^6V",["^I",[null,null]]],"^6T",[["^94"],["^94","^95"]],"^6U",null,"^74",2,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^75",[["^ ","^74",1,"^6W",false,"^76","^7K"],["^ ","^74",2,"^6W",false,"^76","^2V"]],"^8",65,"^:",65,"^6Y",2,"^6Z",true,"^H",["^I",[["^94"],["^94","^95"]]],"^6","hook that watches an atom and triggers an update on change\n   accepts an optional path-or-fn arg that can be used for quick diffs\n\n   (watch the-atom [:foo])\n   (watch the-atom (fn [old new] ...))"],"~$mount-effect",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",145,"^9",7,"^:",145,"^;",19,"^H",["^I",["^6Q",["^I",[["^6S"]]]]],"^6","call (callback env) on mount once"],"^K","^3Y","^7","shadow/grove.cljs","^;",19,"^6T",["^I",[["^6S"]]],"^6U",null,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^8",145,"^6X","^3S","^:",145,"^6Y",1,"^6Z",true,"^H",["^I",["^6Q",["^I",[["^6S"]]]]],"^6","call (callback env) on mount once"],"~$prepare",["^ ","^6P",null,"^5",["^ ","^7","shadow/grove.cljs","^8",319,"^9",7,"^:",319,"^;",14,"^H",["^I",["^6Q",["^I",[["~$data-ref","~$runtime-id"],["~$init","^98","^99"]]]]],"^73",["^ ","^6W",false,"^74",3,"^6Y",3,"^6T",[["^98","^99"],["^9:","^98","^99"]],"^H",["^I",[["^98","^99"],["^9:","^98","^99"]]],"^6V",["^I",[null,null]]]],"^K","^46","^7","shadow/grove.cljs","^;",14,"^73",["^ ","^6W",false,"^74",3,"^6Y",3,"^6T",[["^98","^99"],["^9:","^98","^99"]],"^H",["^I",[["^98","^99"],["^9:","^98","^99"]]],"^6V",["^I",[null,null]]],"^6T",[["^98","^99"],["^9:","^98","^99"]],"^6U",null,"^74",3,"^6V",["^I",[null,null]],"^9",1,"^6W",false,"^75",[["^ ","^74",2,"^6W",false,"^76","^7K"],["^ ","^74",3,"^6W",false,"^76","~$cljs.core/Atom"]],"^8",319,"^:",319,"^6Y",3,"^6Z",true,"^H",["^I",[["^98","^99"],["^9:","^98","^99"]]]],"~$RootScheduler",["^ ","^7@",2,"^7A",["^E",["^7B","^7C"]],"^K","^3R","^7","shadow/grove.cljs","^;",23,"^7D",true,"^9",10,"^8",225,"^7E",false,"^:",225,"^76","^7F","^7G",null]],"^1W",["^ ","^N","^N","^1?","^1?","^1:","^1:","^1<","^1=","^1=","^1=","^1H","^1H","^1M","^1H","^1R","^1R"],"~:cljs.analyzer/constants",["^ ","^1U",["^E",["~:shadow.grove.runtime/fx-config","~:shadow.grove.runtime/rt","~:shadow.grove/started","^7U","~:shadow.grove.runtime/runtime-ref","^7P","~:shadow.grove.runtime/query-index-map","~:shadow.grove.runtime/active-queries-map","~:shadow.grove.components/parent","~:shadow.grove.runtime/event-config","~:shadow.grove.runtime/key-index-ref","~:shadow.grove.runtime/data-ref","~:shadow.grove.components/event-target","~:shadow.grove/render","~:shadow.grove.runtime/fx","~:shadow.grove.components/error-handler","^7>","~:shadow.grove.runtime/runtime-id","~:e","~:shadow.grove.runtime/scheduler","^79","~:render","~$not-native","^7=","~:shadow.grove/suspense-keys","~:shadow.grove.runtime/key-index-seq","^76","~:mutable","^7T","~:mount","~:shadow.grove.runtime/env-init","^7Q","~:shadow.grove/updated","~:shadow.grove.runtime/query-index-ref","~:shadow.grove.runtime/root-el","~:shadow.grove/run-tx!","~:shadow.grove.components/scheduler"]],"~:order",["^9D","~:e","^9A","^9M","^9X","^7=","^9R","^7>","^7T","^7U","^76","^9O","^9N","^9S","^79","^9T","^9Y","^9H","^9P","^9W","^9K","^9U","^9@","^9I","^7P","^7Q","^9?","^9L","^9G","^9E","^9>","^9C","^9Q","^9F","^9B","^9V","^9J"]],"^20",["^ ","^1W",["^E",[]],"^1V",["^E",[]]],"^21",["^ "],"^22",["^1C","^1?","^1S","^1>","^1N","^1R","^1H","^1B","^1A","^15","^1=","^1J","^1K","^1F","^16","^1;","^19","^18","^1:"]],"^M","^N","~:ns-specs",["^ "],"~:ns-spec-vars",["^E",[]],"~:compiler-options",["^4>",[["^:1","~:static-fns"],true,["^:1","~:shadow-tweaks"],null,["^:1","~:source-map-inline"],null,["^:1","~:elide-asserts"],false,["^:1","~:optimize-constants"],null,["^:1","^27"],null,["^:1","~:external-config"],null,["^:1","~:tooling-config"],null,["^:1","~:emit-constants"],null,["^:1","~:load-tests"],null,["^:1","~:form-size-threshold"],null,["^:1","~:global-goog-object&array"],null,["^:1","~:data-readers"],null,["^:1","~:infer-externs"],"~:auto",["^:1","^29"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^:1","~:fn-invoke-direct"],null,["^:1","~:source-map"],"/dev/null"]]]