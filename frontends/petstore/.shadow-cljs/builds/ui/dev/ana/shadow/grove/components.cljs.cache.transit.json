["^ ","~:output",["^ ","~:js","goog.provide('shadow.grove.components');\ngoog.scope(function(){\n  shadow.grove.components.goog$module$goog$object = goog.module.get('goog.object');\n});\n/**\n * @define {boolean}\n */\nshadow.grove.components.DEBUG = goog.define(\"shadow.grove.components.DEBUG\",goog.DEBUG);\nif((typeof shadow !== 'undefined') && (typeof shadow.grove !== 'undefined') && (typeof shadow.grove.components !== 'undefined') && (typeof shadow.grove.components.components_ref !== 'undefined')){\n} else {\nshadow.grove.components.components_ref = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n}\nif((typeof shadow !== 'undefined') && (typeof shadow.grove !== 'undefined') && (typeof shadow.grove.components !== 'undefined') && (typeof shadow.grove.components.instances_ref !== 'undefined')){\n} else {\nshadow.grove.components.instances_ref = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY);\n}\nshadow.grove.components.debug_find_roots = (function shadow$grove$components$debug_find_roots(){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (all,instance){\nif(cljs.core.truth_(new cljs.core.Keyword(\"shadow.grove.components\",\"parent\",\"shadow.grove.components/parent\",522357606).cljs$core$IFn$_invoke$arity$1(instance.component_env))){\nreturn all;\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(all,instance);\n}\n}),cljs.core.PersistentVector.EMPTY,cljs.core.deref(shadow.grove.components.instances_ref));\n});\nshadow.grove.components.debug_component_seq = (function shadow$grove$components$debug_component_seq(var_args){\nvar G__12165 = arguments.length;\nswitch (G__12165) {\ncase 0:\nreturn shadow.grove.components.debug_component_seq.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn shadow.grove.components.debug_component_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(shadow.grove.components.debug_component_seq.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn shadow.grove.components.debug_component_seq.cljs$core$IFn$_invoke$arity$1(cljs.core.first(shadow.grove.components.debug_find_roots()));\n}));\n\n(shadow.grove.components.debug_component_seq.cljs$core$IFn$_invoke$arity$1 = (function (root){\nreturn cljs.core.tree_seq((function (component){\nreturn true;\n}),(function (component){\nreturn component.child_components;\n}),root);\n}));\n\n(shadow.grove.components.debug_component_seq.cljs$lang$maxFixedArity = 1);\n\nshadow.grove.components.debug_find_suspended = (function shadow$grove$components$debug_find_suspended(){\nreturn cljs.core.vec(cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__12166_SHARP_){\nreturn p1__12166_SHARP_.suspended_QMARK_;\n}),shadow.grove.components.debug_component_seq.cljs$core$IFn$_invoke$arity$0()));\n});\nshadow.grove.components.get_component = (function shadow$grove$components$get_component(env){\nreturn new cljs.core.Keyword(\"shadow.grove.components\",\"component\",\"shadow.grove.components/component\",-1606419021).cljs$core$IFn$_invoke$arity$1(env);\n});\nshadow.grove.components.mark_all_dirty_BANG_ = (function shadow$grove$components$mark_all_dirty_BANG_(){\nvar seq__12179 = cljs.core.seq(cljs.core.deref(shadow.grove.components.instances_ref));\nvar chunk__12180 = null;\nvar count__12181 = (0);\nvar i__12182 = (0);\nwhile(true){\nif((i__12182 < count__12181)){\nvar comp = chunk__12180.cljs$core$IIndexed$_nth$arity$2(null,i__12182);\ncomp.set_render_required_BANG_();\n\n\nvar G__12447 = seq__12179;\nvar G__12448 = chunk__12180;\nvar G__12449 = count__12181;\nvar G__12450 = (i__12182 + (1));\nseq__12179 = G__12447;\nchunk__12180 = G__12448;\ncount__12181 = G__12449;\ni__12182 = G__12450;\ncontinue;\n} else {\nvar temp__5804__auto__ = cljs.core.seq(seq__12179);\nif(temp__5804__auto__){\nvar seq__12179__$1 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__12179__$1)){\nvar c__5568__auto__ = cljs.core.chunk_first(seq__12179__$1);\nvar G__12451 = cljs.core.chunk_rest(seq__12179__$1);\nvar G__12452 = c__5568__auto__;\nvar G__12453 = cljs.core.count(c__5568__auto__);\nvar G__12454 = (0);\nseq__12179 = G__12451;\nchunk__12180 = G__12452;\ncount__12181 = G__12453;\ni__12182 = G__12454;\ncontinue;\n} else {\nvar comp = cljs.core.first(seq__12179__$1);\ncomp.set_render_required_BANG_();\n\n\nvar G__12455 = cljs.core.next(seq__12179__$1);\nvar G__12456 = null;\nvar G__12457 = (0);\nvar G__12458 = (0);\nseq__12179 = G__12455;\nchunk__12180 = G__12456;\ncount__12181 = G__12457;\ni__12182 = G__12458;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\nshadow.grove.components.make_component_init = (function shadow$grove$components$make_component_init(component,args){\nif(cljs.core.vector_QMARK_(args)){\n} else {\nthrow (new Error(\"Assert failed: (vector? args)\"));\n}\n\nreturn (new shadow.grove.components.ComponentInit(component,args));\n});\n(shadow.grove.protocols.ComponentConfig.prototype.cljs$core$IFn$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.protocols.ComponentConfig.prototype.call = (function() {\nvar G__12459 = null;\nvar G__12459__1 = (function (self__){\nvar self____$1 = this;\nvar this$ = self____$1;\nreturn shadow.grove.components.make_component_init(this$,cljs.core.PersistentVector.EMPTY);\n});\nvar G__12459__2 = (function (self__,a1){\nvar self____$1 = this;\nvar this$ = self____$1;\nreturn shadow.grove.components.make_component_init(this$,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a1], null));\n});\nvar G__12459__3 = (function (self__,a1,a2){\nvar self____$1 = this;\nvar this$ = self____$1;\nreturn shadow.grove.components.make_component_init(this$,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a1,a2], null));\n});\nvar G__12459__4 = (function (self__,a1,a2,a3){\nvar self____$1 = this;\nvar this$ = self____$1;\nreturn shadow.grove.components.make_component_init(this$,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a1,a2,a3], null));\n});\nvar G__12459__5 = (function (self__,a1,a2,a3,a4){\nvar self____$1 = this;\nvar this$ = self____$1;\nreturn shadow.grove.components.make_component_init(this$,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a1,a2,a3,a4], null));\n});\nvar G__12459__6 = (function (self__,a1,a2,a3,a4,a5){\nvar self____$1 = this;\nvar this$ = self____$1;\nreturn shadow.grove.components.make_component_init(this$,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [a1,a2,a3,a4,a5], null));\n});\nvar G__12459__7 = (function (self__,a1,a2,a3,a4,a5,a6){\nvar self____$1 = this;\nvar this$ = self____$1;\nreturn shadow.grove.components.make_component_init(this$,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [a1,a2,a3,a4,a5,a6], null));\n});\nG__12459 = function(self__,a1,a2,a3,a4,a5,a6){\nswitch(arguments.length){\ncase 1:\nreturn G__12459__1.call(this,self__);\ncase 2:\nreturn G__12459__2.call(this,self__,a1);\ncase 3:\nreturn G__12459__3.call(this,self__,a1,a2);\ncase 4:\nreturn G__12459__4.call(this,self__,a1,a2,a3);\ncase 5:\nreturn G__12459__5.call(this,self__,a1,a2,a3,a4);\ncase 6:\nreturn G__12459__6.call(this,self__,a1,a2,a3,a4,a5);\ncase 7:\nreturn G__12459__7.call(this,self__,a1,a2,a3,a4,a5,a6);\n}\nthrow(new Error('Invalid arity: ' + (arguments.length - 1)));\n};\nG__12459.cljs$core$IFn$_invoke$arity$1 = G__12459__1;\nG__12459.cljs$core$IFn$_invoke$arity$2 = G__12459__2;\nG__12459.cljs$core$IFn$_invoke$arity$3 = G__12459__3;\nG__12459.cljs$core$IFn$_invoke$arity$4 = G__12459__4;\nG__12459.cljs$core$IFn$_invoke$arity$5 = G__12459__5;\nG__12459.cljs$core$IFn$_invoke$arity$6 = G__12459__6;\nG__12459.cljs$core$IFn$_invoke$arity$7 = G__12459__7;\nreturn G__12459;\n})()\n);\n\n(shadow.grove.protocols.ComponentConfig.prototype.apply = (function (self__,args12192){\nvar self____$1 = this;\nvar args__5260__auto__ = cljs.core.aclone(args12192);\nreturn self____$1.call.apply(self____$1,[self____$1].concat((((args__5260__auto__.length > (20)))?(function (){var G__12193 = args__5260__auto__.slice((0),(20));\nG__12193.push(args__5260__auto__.slice((20)));\n\nreturn G__12193;\n})():args__5260__auto__)));\n}));\n\n(shadow.grove.protocols.ComponentConfig.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){\nvar this$ = this;\nreturn shadow.grove.components.make_component_init(this$,cljs.core.PersistentVector.EMPTY);\n}));\n\n(shadow.grove.protocols.ComponentConfig.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a1){\nvar this$ = this;\nreturn shadow.grove.components.make_component_init(this$,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a1], null));\n}));\n\n(shadow.grove.protocols.ComponentConfig.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a1,a2){\nvar this$ = this;\nreturn shadow.grove.components.make_component_init(this$,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a1,a2], null));\n}));\n\n(shadow.grove.protocols.ComponentConfig.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a1,a2,a3){\nvar this$ = this;\nreturn shadow.grove.components.make_component_init(this$,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a1,a2,a3], null));\n}));\n\n(shadow.grove.protocols.ComponentConfig.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a1,a2,a3,a4){\nvar this$ = this;\nreturn shadow.grove.components.make_component_init(this$,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a1,a2,a3,a4], null));\n}));\n\n(shadow.grove.protocols.ComponentConfig.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a1,a2,a3,a4,a5){\nvar this$ = this;\nreturn shadow.grove.components.make_component_init(this$,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [a1,a2,a3,a4,a5], null));\n}));\n\n(shadow.grove.protocols.ComponentConfig.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a1,a2,a3,a4,a5,a6){\nvar this$ = this;\nreturn shadow.grove.components.make_component_init(this$,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [a1,a2,a3,a4,a5,a6], null));\n}));\nshadow.grove.components.component_config_QMARK_ = (function shadow$grove$components$component_config_QMARK_(x){\nreturn (x instanceof shadow.grove.protocols.ComponentConfig);\n});\nshadow.grove.components.safe_inc = (function shadow$grove$components$safe_inc(x){\nif((x == null)){\nreturn (0);\n} else {\nreturn (x + (1));\n}\n});\nshadow.grove.components.sort_fn = (function shadow$grove$components$sort_fn(a,b){\nreturn cljs.core.compare(new cljs.core.Keyword(\"shadow.grove.components\",\"depth\",\"shadow.grove.components/depth\",-20661449).cljs$core$IFn$_invoke$arity$1(a.component_env),new cljs.core.Keyword(\"shadow.grove.components\",\"depth\",\"shadow.grove.components/depth\",-20661449).cljs$core$IFn$_invoke$arity$1(b.component_env));\n});\nshadow.grove.components.find_first_set_bit_idx = (function shadow$grove$components$find_first_set_bit_idx(search){\nif((!((search === (0))))){\n} else {\nthrow (new Error(\"Assert failed: (not (zero? search))\"));\n}\n\nvar search__$1 = search;\nvar idx = (0);\nwhile(true){\nif(((1) === (search__$1 & (1)))){\nreturn idx;\n} else {\nvar G__12511 = (search__$1 >> (1));\nvar G__12512 = (idx + (1));\nsearch__$1 = G__12511;\nidx = G__12512;\ncontinue;\n}\nbreak;\n}\n});\n\n/**\n* @constructor\n * @implements {shadow.grove.protocols.IHookDomEffect}\n * @implements {shadow.grove.protocols.IHook}\n*/\nshadow.grove.components.EffectHook = (function (deps,callback,callback_result,should_call_QMARK_,component_handle){\nthis.deps = deps;\nthis.callback = callback;\nthis.callback_result = callback_result;\nthis.should_call_QMARK_ = should_call_QMARK_;\nthis.component_handle = component_handle;\n});\n(shadow.grove.components.EffectHook.prototype.shadow$grove$protocols$IHook$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.components.EffectHook.prototype.shadow$grove$protocols$IHook$hook_init_BANG_$arity$2 = (function (this$,ch){\nvar self__ = this;\nvar this$__$1 = this;\nreturn (self__.component_handle = ch);\n}));\n\n(shadow.grove.components.EffectHook.prototype.shadow$grove$protocols$IHook$hook_ready_QMARK_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn true;\n}));\n\n(shadow.grove.components.EffectHook.prototype.shadow$grove$protocols$IHook$hook_value$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn new cljs.core.Keyword(\"shadow.grove.components\",\"effect-hook\",\"shadow.grove.components/effect-hook\",301527919);\n}));\n\n(shadow.grove.components.EffectHook.prototype.shadow$grove$protocols$IHook$hook_update_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn false;\n}));\n\n(shadow.grove.components.EffectHook.prototype.shadow$grove$protocols$IHook$hook_deps_update_BANG_$arity$2 = (function (this$,new$){\nvar self__ = this;\nvar this$__$1 = this;\n(self__.callback = new$.callback);\n\nvar new_deps_12513 = new$.deps;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new_deps_12513,new cljs.core.Keyword(null,\"render\",\"render\",-1408033454))){\n(self__.should_call_QMARK_ = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(self__.deps,new_deps_12513));\n\n(self__.deps = new_deps_12513);\n} else {\n}\n\nreturn false;\n}));\n\n(shadow.grove.components.EffectHook.prototype.shadow$grove$protocols$IHook$hook_destroy_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nif(cljs.core.fn_QMARK_(self__.callback_result)){\nreturn (self__.callback_result.cljs$core$IFn$_invoke$arity$0 ? self__.callback_result.cljs$core$IFn$_invoke$arity$0() : self__.callback_result.call(null));\n} else {\nreturn null;\n}\n}));\n\n(shadow.grove.components.EffectHook.prototype.shadow$grove$protocols$IHookDomEffect$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.components.EffectHook.prototype.shadow$grove$protocols$IHookDomEffect$hook_did_update_BANG_$arity$2 = (function (this$,did_render_QMARK_){\nvar self__ = this;\nvar this$__$1 = this;\nif(((did_render_QMARK_) && (self__.should_call_QMARK_))){\nif(cljs.core.fn_QMARK_(self__.callback_result)){\n(self__.callback_result.cljs$core$IFn$_invoke$arity$0 ? self__.callback_result.cljs$core$IFn$_invoke$arity$0() : self__.callback_result.call(null));\n} else {\n}\n\n(self__.callback_result = self__.callback(self__.component_handle.shadow$grove$protocols$IEnvSource$get_component_env$arity$1(null)));\n\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(self__.deps,new cljs.core.Keyword(null,\"render\",\"render\",-1408033454))){\nreturn (self__.should_call_QMARK_ = false);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}));\n\n(shadow.grove.components.EffectHook.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"deps\",\"deps\",-771075450,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"callback\",\"callback\",935395299,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"callback-result\",\"callback-result\",1306298612,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"should-call?\",\"should-call?\",1103428156,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"component-handle\",\"component-handle\",-970224254,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"not-native\",\"not-native\",-236392494,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(shadow.grove.components.EffectHook.cljs$lang$type = true);\n\n(shadow.grove.components.EffectHook.cljs$lang$ctorStr = \"shadow.grove.components/EffectHook\");\n\n(shadow.grove.components.EffectHook.cljs$lang$ctorPrWriter = (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\"shadow.grove.components/EffectHook\");\n}));\n\n/**\n * Positional factory function for shadow.grove.components/EffectHook.\n */\nshadow.grove.components.__GT_EffectHook = (function shadow$grove$components$__GT_EffectHook(deps,callback,callback_result,should_call_QMARK_,component_handle){\nreturn (new shadow.grove.components.EffectHook(deps,callback,callback_result,should_call_QMARK_,component_handle));\n});\n\n\n/**\n* @constructor\n * @implements {shadow.grove.protocols.IComponentHookHandle}\n * @implements {shadow.grove.protocols.ISchedulerSource}\n * @implements {shadow.grove.protocols.IEnvSource}\n*/\nshadow.grove.components.ComponentHookHandle = (function (component,idx){\nthis.component = component;\nthis.idx = idx;\n});\n(shadow.grove.components.ComponentHookHandle.prototype.shadow$grove$protocols$IEnvSource$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.components.ComponentHookHandle.prototype.shadow$grove$protocols$IEnvSource$get_component_env$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn self__.component.component_env;\n}));\n\n(shadow.grove.components.ComponentHookHandle.prototype.shadow$grove$protocols$ISchedulerSource$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.components.ComponentHookHandle.prototype.shadow$grove$protocols$ISchedulerSource$get_scheduler$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn self__.component.scheduler;\n}));\n\n(shadow.grove.components.ComponentHookHandle.prototype.shadow$grove$protocols$IComponentHookHandle$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.components.ComponentHookHandle.prototype.shadow$grove$protocols$IComponentHookHandle$hook_invalidate_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn self__.component.invalidate_hook_BANG_(self__.idx);\n}));\n\n(shadow.grove.components.ComponentHookHandle.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"component\",\"component\",-1098498987,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"not-native\",\"not-native\",-236392494,null)], null)),new cljs.core.Symbol(null,\"idx\",\"idx\",-1600747296,null)], null);\n}));\n\n(shadow.grove.components.ComponentHookHandle.cljs$lang$type = true);\n\n(shadow.grove.components.ComponentHookHandle.cljs$lang$ctorStr = \"shadow.grove.components/ComponentHookHandle\");\n\n(shadow.grove.components.ComponentHookHandle.cljs$lang$ctorPrWriter = (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\"shadow.grove.components/ComponentHookHandle\");\n}));\n\n/**\n * Positional factory function for shadow.grove.components/ComponentHookHandle.\n */\nshadow.grove.components.__GT_ComponentHookHandle = (function shadow$grove$components$__GT_ComponentHookHandle(component,idx){\nreturn (new shadow.grove.components.ComponentHookHandle(component,idx));\n});\n\n\n/**\n* @constructor\n * @implements {shadow.grove.protocols.IHook}\n*/\nshadow.grove.components.SimpleVal = (function (val){\nthis.val = val;\n});\n(shadow.grove.components.SimpleVal.prototype.shadow$grove$protocols$IHook$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.components.SimpleVal.prototype.shadow$grove$protocols$IHook$hook_init_BANG_$arity$2 = (function (this$,ch){\nvar self__ = this;\nvar this$__$1 = this;\nreturn null;\n}));\n\n(shadow.grove.components.SimpleVal.prototype.shadow$grove$protocols$IHook$hook_ready_QMARK_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn true;\n}));\n\n(shadow.grove.components.SimpleVal.prototype.shadow$grove$protocols$IHook$hook_value$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn self__.val;\n}));\n\n(shadow.grove.components.SimpleVal.prototype.shadow$grove$protocols$IHook$hook_update_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn null;\n}));\n\n(shadow.grove.components.SimpleVal.prototype.shadow$grove$protocols$IHook$hook_deps_update_BANG_$arity$2 = (function (this$,next){\nvar self__ = this;\nvar this$__$1 = this;\nvar new_val = next.val;\nvar updated_QMARK_ = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new_val,self__.val);\n(self__.val = new_val);\n\nreturn updated_QMARK_;\n}));\n\n(shadow.grove.components.SimpleVal.prototype.shadow$grove$protocols$IHook$hook_destroy_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn null;\n}));\n\n(shadow.grove.components.SimpleVal.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"val\",\"val\",1769233139,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(shadow.grove.components.SimpleVal.cljs$lang$type = true);\n\n(shadow.grove.components.SimpleVal.cljs$lang$ctorStr = \"shadow.grove.components/SimpleVal\");\n\n(shadow.grove.components.SimpleVal.cljs$lang$ctorPrWriter = (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\"shadow.grove.components/SimpleVal\");\n}));\n\n/**\n * Positional factory function for shadow.grove.components/SimpleVal.\n */\nshadow.grove.components.__GT_SimpleVal = (function shadow$grove$components$__GT_SimpleVal(val){\nreturn (new shadow.grove.components.SimpleVal(val));\n});\n\nshadow.grove.components.maybe_wrap_val = (function shadow$grove$components$maybe_wrap_val(val){\nif((((!((val == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === val.shadow$grove$protocols$IHook$))))?true:false):false)){\nreturn val;\n} else {\nreturn (new shadow.grove.components.SimpleVal(val));\n}\n});\nshadow.grove.components.ManagedComponent = class shadow$grove$components$ManagedComponent {\n  constructor(G__12291,G__12292,G__12293) {\nvar e_12521 = G__12291;\nvar c_12522 = G__12292;\nvar a_12523 = G__12293;\nvar self__ = this;\n(self__.current_idx = ((0) | (0)));\n\n(self__.hooks_with_effects = []);\n\n(self__.dirty_from_args = ((0) | (0)));\n\n(self__.dirty_hooks = ((0) | (0)));\n\n(self__.updated_hooks = ((0) | (0)));\n\n(self__.needs_render_QMARK_ = true);\n\n(self__.work_set = (new Set()));\n\n(self__.parent_env = e_12521);\n\n(self__.config = c_12522);\n\n(self__.args = a_12523);\n\n(self__.scheduler = new cljs.core.Keyword(\"shadow.grove.components\",\"scheduler\",\"shadow.grove.components/scheduler\",189849247).cljs$core$IFn$_invoke$arity$1(self__.parent_env));\n\nif(shadow.grove.components.DEBUG){\n(self__.child_components = (new Set()));\n\nvar temp__5808__auto___12527 = new cljs.core.Keyword(\"shadow.grove.components\",\"component\",\"shadow.grove.components/component\",-1606419021).cljs$core$IFn$_invoke$arity$1(self__.parent_env);\nif((temp__5808__auto___12527 == null)){\n} else {\nvar parent_12528 = temp__5808__auto___12527;\nparent_12528.child_components.add(self__);\n}\n} else {\n}\n\n(self__.component_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update.cljs$core$IFn$_invoke$arity$3(self__.parent_env,new cljs.core.Keyword(\"shadow.grove.components\",\"depth\",\"shadow.grove.components/depth\",-20661449),shadow.grove.components.safe_inc),new cljs.core.Keyword(\"shadow.grove.components\",\"parent\",\"shadow.grove.components/parent\",522357606),new cljs.core.Keyword(\"shadow.grove.components\",\"component\",\"shadow.grove.components/component\",-1606419021).cljs$core$IFn$_invoke$arity$1(self__.parent_env),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"shadow.arborist.protocols\",\"dom-event-handler\",\"shadow.arborist.protocols/dom-event-handler\",-755471285),self__,new cljs.core.Keyword(\"shadow.grove.components\",\"component\",\"shadow.grove.components/component\",-1606419021),self__,new cljs.core.Keyword(\"shadow.grove.components\",\"event-target\",\"shadow.grove.components/event-target\",-649187734),self__,new cljs.core.Keyword(\"shadow.grove.components\",\"scheduler\",\"shadow.grove.components/scheduler\",189849247),self__], 0)));\n\nif(shadow.grove.components.DEBUG){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(shadow.grove.components.instances_ref,cljs.core.conj,self__);\n\n(self__.marker_before = (function (){var G__12299 = document.createComment([\"component: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.config.component_name)].join(''));\n(G__12299.shadow$instance = self__);\n\nreturn G__12299;\n})());\n\n(self__.marker_after = (function (){var G__12301 = document.createComment([\"/component: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.config.component_name)].join(''));\n(G__12301.shadow$instance = self__);\n\nreturn G__12301;\n})());\n} else {\n}\n\n(self__.root = shadow.arborist.common.managed_root(self__.component_env));\n\n(self__.hooks = (new Array(self__.config.hooks.length)));\n  }\n};\n(shadow.grove.components.ManagedComponent.prototype.cljs$core$IHash$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.components.ManagedComponent.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$arborist$protocols$IManaged$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$arborist$protocols$IManaged$dom_first$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nif(shadow.grove.components.DEBUG){\nreturn this$__$1.marker_before;\n} else {\nreturn shadow.arborist.protocols.dom_first(self__.root);\n}\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$arborist$protocols$IManaged$dom_insert$arity$3 = (function (this$,parent,anchor){\nvar self__ = this;\nvar this$__$1 = this;\nif(shadow.grove.components.DEBUG){\nparent.insertBefore(this$__$1.marker_before,anchor);\n} else {\n}\n\nshadow.arborist.protocols.dom_insert(self__.root,parent,anchor);\n\nif(shadow.grove.components.DEBUG){\nreturn parent.insertBefore(this$__$1.marker_after,anchor);\n} else {\nreturn null;\n}\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$arborist$protocols$IManaged$dom_entered_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\n(self__.dom_entered_QMARK_ = true);\n\nif(self__.error_QMARK_){\nreturn null;\n} else {\nshadow.arborist.protocols.dom_entered_BANG_(self__.root);\n\nreturn this$__$1.did_update_BANG_(true);\n}\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$arborist$protocols$IManaged$supports_QMARK_$arity$2 = (function (this$,next){\nvar self__ = this;\nvar this$__$1 = this;\nvar and__5043__auto__ = shadow.grove.components.component_init_QMARK_(next);\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 = (function (){var other = next.component;\nreturn (self__.config === other);\n})();\nif(and__5043__auto____$1){\nvar and__5043__auto____$2 = (function (){var stable_args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(self__.config.opts,new cljs.core.Keyword(\"shadow.grove.components\",\"stable-args\",\"shadow.grove.components/stable-args\",691139503));\nvar or__5045__auto__ = (stable_args == null);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar old_args = self__.args;\nvar new_args = next.args;\nreturn cljs.core.every_QMARK_((function (p1__12281_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(old_args,p1__12281_SHARP_),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(new_args,p1__12281_SHARP_));\n}),stable_args);\n}\n})();\nif(and__5043__auto____$2){\nvar custom_check = cljs.core.get.cljs$core$IFn$_invoke$arity$2(self__.config.opts,new cljs.core.Keyword(null,\"supports?\",\"supports?\",1642448130));\nvar or__5045__auto__ = (custom_check == null);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar G__12317 = self__.args;\nvar G__12318 = next.args;\nreturn (custom_check.cljs$core$IFn$_invoke$arity$2 ? custom_check.cljs$core$IFn$_invoke$arity$2(G__12317,G__12318) : custom_check.call(null,G__12317,G__12318));\n}\n} else {\nreturn and__5043__auto____$2;\n}\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$arborist$protocols$IManaged$dom_sync_BANG_$arity$2 = (function (this$,next){\nvar self__ = this;\nvar this$__$1 = this;\nself__.config.check_args_fn(this$__$1,self__.args,next.args);\n\n(self__.args = next.args);\n\nif(cljs.core.truth_(this$__$1.work_pending_QMARK_())){\nreturn this$__$1.schedule_BANG_(new cljs.core.Keyword(\"shadow.grove.components\",\"dom-sync!\",\"shadow.grove.components/dom-sync!\",1006774752));\n} else {\nreturn null;\n}\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$arborist$protocols$IManaged$destroy_BANG_$arity$2 = (function (this$,dom_remove_QMARK_){\nvar self__ = this;\nvar this$__$1 = this;\nthis$__$1.unschedule_BANG_();\n\nif(shadow.grove.components.DEBUG){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(shadow.grove.components.instances_ref,cljs.core.disj,this$__$1);\n\nvar temp__5808__auto___12533 = new cljs.core.Keyword(\"shadow.grove.components\",\"parent\",\"shadow.grove.components/parent\",522357606).cljs$core$IFn$_invoke$arity$1(self__.component_env);\nif((temp__5808__auto___12533 == null)){\n} else {\nvar parent_12534 = temp__5808__auto___12533;\nparent_12534.child_components.delete(this$__$1);\n}\n\nif(dom_remove_QMARK_){\nthis$__$1.marker_before.remove();\n\nthis$__$1.marker_after.remove();\n} else {\n}\n} else {\n}\n\n(self__.destroyed_QMARK_ = true);\n\nself__.hooks.forEach((function (hook){\nif(cljs.core.truth_(hook)){\nreturn hook.shadow$grove$protocols$IHook$hook_destroy_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n}));\n\nreturn shadow.arborist.protocols.destroy_BANG_(self__.root,dom_remove_QMARK_);\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$grove$protocols$IHandleEvents$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$grove$protocols$IHandleEvents$handle_event_BANG_$arity$4 = (function (this$,p__12330,e,origin){\nvar self__ = this;\nvar map__12331 = p__12330;\nvar map__12331__$1 = cljs.core.__destructure_map(map__12331);\nvar ev_map = map__12331__$1;\nvar ev_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12331__$1,new cljs.core.Keyword(null,\"e\",\"e\",1381269198));\nvar this$__$1 = this;\nvar handler = ((cljs.core.qualified_keyword_QMARK_(ev_id))?(function (){var or__5045__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(self__.config.events,ev_id);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(self__.config.opts,ev_id);\n}\n})():(function(){throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"unknown event\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"event\",\"event\",301435442),ev_map], null))})()\n);\nif(cljs.core.truth_(handler)){\nreturn (handler.cljs$core$IFn$_invoke$arity$4 ? handler.cljs$core$IFn$_invoke$arity$4(self__.component_env,ev_map,e,origin) : handler.call(null,self__.component_env,ev_map,e,origin));\n} else {\nvar temp__5806__auto__ = new cljs.core.Keyword(\"shadow.grove.components\",\"event-target\",\"shadow.grove.components/event-target\",-649187734).cljs$core$IFn$_invoke$arity$1(self__.parent_env);\nif((temp__5806__auto__ == null)){\nreturn console.warn(\"event not handled\",ev_id,ev_map);\n} else {\nvar parent = temp__5806__auto__;\nreturn shadow.grove.protocols.handle_event_BANG_(parent,ev_map,e,origin);\n}\n}\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$grove$protocols$IScheduleWork$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$grove$protocols$IScheduleWork$did_suspend_BANG_$arity$2 = (function (this$,work_task){\nvar self__ = this;\nvar this$__$1 = this;\nreturn self__.scheduler.shadow$grove$protocols$IScheduleWork$did_suspend_BANG_$arity$2(null,work_task);\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$grove$protocols$IScheduleWork$did_finish_BANG_$arity$2 = (function (this$,work_task){\nvar self__ = this;\nvar this$__$1 = this;\nreturn self__.scheduler.shadow$grove$protocols$IScheduleWork$did_finish_BANG_$arity$2(null,work_task);\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$grove$protocols$IScheduleWork$schedule_work_BANG_$arity$3 = (function (this$,work_task,trigger){\nvar self__ = this;\nvar this$__$1 = this;\nif((self__.work_set.size === (0))){\nself__.scheduler.shadow$grove$protocols$IScheduleWork$schedule_work_BANG_$arity$3(null,this$__$1,trigger);\n} else {\n}\n\nreturn self__.work_set.add(work_task);\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$grove$protocols$IScheduleWork$unschedule_BANG_$arity$2 = (function (this$,work_task){\nvar self__ = this;\nvar this$__$1 = this;\nself__.work_set.delete(work_task);\n\nif((self__.work_set.size === (0))){\nreturn self__.scheduler.shadow$grove$protocols$IScheduleWork$unschedule_BANG_$arity$2(null,this$__$1);\n} else {\nreturn null;\n}\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$grove$protocols$IScheduleWork$run_now_BANG_$arity$3 = (function (this$,callback,trigger){\nvar self__ = this;\nvar this$__$1 = this;\nreturn self__.scheduler.shadow$grove$protocols$IScheduleWork$run_now_BANG_$arity$3(null,callback,trigger);\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$grove$protocols$IWork$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$grove$protocols$IWork$work_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nif(self__.error_QMARK_){\nreturn null;\n} else {\ntry{while(true){\nif(this$__$1.work_pending_QMARK_()){\nthis$__$1.run_next_BANG_();\n\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar iter = self__.work_set.values();\nwhile(true){\nvar current = iter.next();\nif((!(current.done))){\ncurrent.value.shadow$grove$protocols$IWork$work_BANG_$arity$1(null);\n\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}catch (e12336){var ex = e12336;\nreturn this$__$1.handle_error_BANG_(ex);\n}}\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.handle_error_BANG_ = (function (ex){\nvar self__ = this;\nvar this$ = this;\n(self__.error_QMARK_ = true);\n\nthis$.unschedule_BANG_();\n\nvar err_fn = new cljs.core.Keyword(\"shadow.grove.components\",\"error-handler\",\"shadow.grove.components/error-handler\",-1078927315).cljs$core$IFn$_invoke$arity$1(self__.parent_env);\nreturn (err_fn.cljs$core$IFn$_invoke$arity$2 ? err_fn.cljs$core$IFn$_invoke$arity$2(this$,ex) : err_fn.call(null,this$,ex));\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.get_hook_value = (function (idx){\nvar self__ = this;\nvar this$ = this;\nreturn shadow.grove.protocols.hook_value((self__.hooks[idx]));\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.invalidate_hook_BANG_ = (function (idx){\nvar self__ = this;\nvar this$ = this;\n(self__.dirty_hooks = (self__.dirty_hooks | (1 << idx)));\n\n(self__.current_idx = Math.min(idx,self__.current_idx));\n\n(self__.suspended_QMARK_ = false);\n\nreturn this$.schedule_BANG_(new cljs.core.Keyword(\"shadow.grove.components\",\"hook-invalidate!\",\"shadow.grove.components/hook-invalidate!\",1205709960));\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.mark_hooks_dirty_BANG_ = (function (dirty_bits){\nvar self__ = this;\nvar this$ = this;\n(self__.dirty_hooks = (self__.dirty_hooks | dirty_bits));\n\nreturn (self__.current_idx = shadow.grove.components.find_first_set_bit_idx(self__.dirty_hooks));\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.mark_dirty_from_args_BANG_ = (function (dirty_bits){\nvar self__ = this;\nvar this$ = this;\n(self__.dirty_from_args = (self__.dirty_from_args | dirty_bits));\n\nreturn this$.mark_hooks_dirty_BANG_(dirty_bits);\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.set_render_required_BANG_ = (function (){\nvar self__ = this;\nvar this$ = this;\n(self__.needs_render_QMARK_ = true);\n\nreturn (self__.current_idx = Math.min(self__.current_idx,self__.config.hooks.length));\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.run_next_BANG_ = (function (){\nvar self__ = this;\nvar this$ = this;\nif((self__.current_idx === self__.config.hooks.length)){\nreturn this$.component_render_BANG_();\n} else {\nvar hook = (self__.hooks[self__.current_idx]);\nif(cljs.core.not(hook)){\nvar run_fn = (self__.config.hooks[self__.current_idx]).run;\nvar handle = (new shadow.grove.components.ComponentHookHandle(this$,self__.current_idx));\nvar val = run_fn(this$);\nvar hook__$1 = shadow.grove.components.maybe_wrap_val(val);\n(self__.hooks[self__.current_idx] = hook__$1);\n\nshadow.grove.protocols.hook_init_BANG_(hook__$1,handle);\n\n(self__.dirty_hooks = (self__.dirty_hooks & ~(1 << self__.current_idx)));\n\n(self__.updated_hooks = (self__.updated_hooks | (1 << self__.current_idx)));\n\nif(((self__.config.render_deps & (1 << self__.current_idx)) != 0)){\n(self__.needs_render_QMARK_ = true);\n} else {\n}\n\nif((((!((hook__$1 == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === hook__$1.shadow$grove$protocols$IHookDomEffect$))))?true:(((!hook__$1.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(shadow.grove.protocols.IHookDomEffect,hook__$1):false)):cljs.core.native_satisfies_QMARK_(shadow.grove.protocols.IHookDomEffect,hook__$1))){\nself__.hooks_with_effects.push(hook__$1);\n} else {\n}\n\nif(cljs.core.truth_(shadow.grove.protocols.hook_ready_QMARK_(hook__$1))){\nreturn (self__.current_idx = (self__.current_idx + (1)));\n} else {\nreturn this$.suspend_BANG_(self__.current_idx);\n}\n} else {\nif(((self__.dirty_hooks & (1 << self__.current_idx)) != 0)){\nvar hook_config = (self__.config.hooks[self__.current_idx]);\nvar deps_updated_QMARK_ = ((((hook_config.depends_on & self__.updated_hooks) > (0))) || (((self__.dirty_from_args & (1 << self__.current_idx)) != 0)));\nvar run = hook_config.run;\nvar next_hook = shadow.grove.components.maybe_wrap_val(run(this$));\nvar _ = (((cljs.core.type(hook) === cljs.core.type(next_hook)))?null:(function(){throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"illegal hook value, type cannot change\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"old\",\"old\",-1825222690),hook,new cljs.core.Keyword(null,\"new\",\"new\",-2085437848),next_hook], null))})());\nvar did_update_QMARK_ = ((deps_updated_QMARK_)?shadow.grove.protocols.hook_deps_update_BANG_(hook,next_hook):shadow.grove.protocols.hook_update_BANG_(hook));\n(self__.dirty_hooks = (self__.dirty_hooks & ~(1 << self__.current_idx)));\n\nif(cljs.core.truth_(did_update_QMARK_)){\n(self__.updated_hooks = (self__.updated_hooks | (1 << self__.current_idx)));\n\n(self__.dirty_hooks = (self__.dirty_hooks | hook_config.affects));\n\nif(((self__.config.render_deps & (1 << self__.current_idx)) != 0)){\n(self__.needs_render_QMARK_ = true);\n} else {\n}\n} else {\n}\n\nif(cljs.core.truth_(shadow.grove.protocols.hook_ready_QMARK_(hook))){\nreturn (self__.current_idx = (self__.current_idx + (1)));\n} else {\nreturn this$.suspend_BANG_(self__.current_idx);\n}\n} else {\nreturn (self__.current_idx = (self__.current_idx + (1)));\n\n}\n}\n}\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.work_pending_QMARK_ = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn (((!(self__.destroyed_QMARK_))) && ((((!(self__.suspended_QMARK_))) && ((((!(self__.error_QMARK_))) && ((((self__.dirty_hooks > (0))) || (((self__.needs_render_QMARK_) || ((self__.config.hooks.length >= self__.current_idx)))))))))));\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.suspend_BANG_ = (function (hook_causing_suspend){\nvar self__ = this;\nvar this$ = this;\nthis$.unschedule_BANG_();\n\nself__.scheduler.shadow$grove$protocols$IScheduleWork$did_suspend_BANG_$arity$2(null,this$);\n\nreturn (self__.suspended_QMARK_ = true);\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.schedule_BANG_ = (function (trigger){\nvar self__ = this;\nvar this$ = this;\nif(self__.destroyed_QMARK_){\nreturn null;\n} else {\nreturn self__.scheduler.shadow$grove$protocols$IScheduleWork$schedule_work_BANG_$arity$3(null,this$,trigger);\n}\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.unschedule_BANG_ = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn self__.scheduler.shadow$grove$protocols$IScheduleWork$unschedule_BANG_$arity$2(null,this$);\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.component_render_BANG_ = (function (){\nvar self__ = this;\nvar this$ = this;\nif((self__.dirty_hooks === (0))){\n} else {\nthrow (new Error([\"Assert failed: \",\"Got to render while hooks are dirty\",\"\\n\",\"(zero? dirty-hooks)\"].join('')));\n}\n\n(self__.updated_hooks = ((0) | (0)));\n\n(self__.dirty_from_args = ((0) | (0)));\n\nvar did_render_QMARK__12592 = self__.needs_render_QMARK_;\nif(self__.needs_render_QMARK_){\nvar frag_12593 = self__.config.render_fn(this$);\n(self__.rendered_args = self__.args);\n\n(self__.needs_render_QMARK_ = false);\n\nshadow.arborist.protocols.update_BANG_(self__.root,frag_12593);\n} else {\n}\n\nif(self__.dom_entered_QMARK_){\nthis$.did_update_BANG_(did_render_QMARK__12592);\n} else {\n}\n\n(self__.current_idx = (self__.current_idx + (1)));\n\nself__.scheduler.shadow$grove$protocols$IScheduleWork$did_finish_BANG_$arity$2(null,this$);\n\nreturn this$.unschedule_BANG_();\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.did_update_BANG_ = (function (did_render_QMARK_){\nvar self__ = this;\nvar this$ = this;\nreturn self__.hooks_with_effects.forEach((function (item){\nreturn item.shadow$grove$protocols$IHookDomEffect$hook_did_update_BANG_$arity$2(null,did_render_QMARK_);\n}));\n}));\n(shadow.grove.components.ManagedComponent.prototype.shadow$arborist$protocols$IHandleDOMEvents$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$arborist$protocols$IHandleDOMEvents$validate_dom_event_value_BANG_$arity$4 = (function (this$,env,event,ev_value){\nvar this$__$1 = this;\nif((((ev_value instanceof cljs.core.Keyword)) || (cljs.core.map_QMARK_(ev_value)))){\nreturn null;\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"event: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(event),\" expects a map or keyword value\"].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"event\",\"event\",301435442),event,new cljs.core.Keyword(null,\"value\",\"value\",305978217),ev_value], null));\n}\n}));\n\n(shadow.grove.components.ManagedComponent.prototype.shadow$arborist$protocols$IHandleDOMEvents$handle_dom_event_BANG_$arity$5 = (function (this$,event_env,event,ev_value,dom_event){\nvar this$__$1 = this;\nvar ev_map = ((cljs.core.map_QMARK_(ev_value))?ev_value:new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"e\",\"e\",1381269198),ev_value], null));\nreturn shadow.grove.protocols.run_now_BANG_(this$__$1.scheduler,(function (){\nreturn shadow.grove.protocols.handle_event_BANG_(this$__$1,ev_map,dom_event,event_env);\n}),new cljs.core.Keyword(\"shadow.grove.components\",\"handle-dom-event!\",\"shadow.grove.components/handle-dom-event!\",476157374));\n}));\nshadow.grove.components.component_create = (function shadow$grove$components$component_create(env,config,args){\nif(goog.DEBUG){\nif((config instanceof shadow.grove.protocols.ComponentConfig)){\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"not a component definition\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"config\",\"config\",994861415),config,new cljs.core.Keyword(null,\"props\",\"props\",453281727),args], null));\n}\n} else {\n}\n\nvar G__12397 = (new shadow.grove.components.ManagedComponent(env,config,args));\nshadow.grove.protocols.work_BANG_(G__12397);\n\nreturn G__12397;\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {shadow.arborist.protocols.IConstruct}\n*/\nshadow.grove.components.ComponentInit = (function (component,args){\nthis.component = component;\nthis.args = args;\nthis.cljs$lang$protocol_mask$partition0$ = 2097152;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(shadow.grove.components.ComponentInit.prototype.shadow$arborist$protocols$IConstruct$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.grove.components.ComponentInit.prototype.shadow$arborist$protocols$IConstruct$as_managed$arity$2 = (function (this$,env){\nvar self__ = this;\nvar this$__$1 = this;\nreturn shadow.grove.components.component_create(env,self__.component,self__.args);\n}));\n\n(shadow.grove.components.ComponentInit.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){\nvar self__ = this;\nvar this$__$1 = this;\nreturn (((other instanceof shadow.grove.components.ComponentInit)) && ((((self__.component === other.component)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)))));\n}));\n\n(shadow.grove.components.ComponentInit.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"component\",\"component\",-1098498987,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null)], null);\n}));\n\n(shadow.grove.components.ComponentInit.cljs$lang$type = true);\n\n(shadow.grove.components.ComponentInit.cljs$lang$ctorStr = \"shadow.grove.components/ComponentInit\");\n\n(shadow.grove.components.ComponentInit.cljs$lang$ctorPrWriter = (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\"shadow.grove.components/ComponentInit\");\n}));\n\n/**\n * Positional factory function for shadow.grove.components/ComponentInit.\n */\nshadow.grove.components.__GT_ComponentInit = (function shadow$grove$components$__GT_ComponentInit(component,args){\nreturn (new shadow.grove.components.ComponentInit(component,args));\n});\n\nshadow.grove.components.component_init_QMARK_ = (function shadow$grove$components$component_init_QMARK_(x){\nreturn (x instanceof shadow.grove.components.ComponentInit);\n});\n\n/**\n* @constructor\n*/\nshadow.grove.components.HookConfig = (function (depends_on,affects,run){\nthis.depends_on = depends_on;\nthis.affects = affects;\nthis.run = run;\n});\n\n(shadow.grove.components.HookConfig.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"depends-on\",\"depends-on\",192089505,null),new cljs.core.Symbol(null,\"affects\",\"affects\",-118795949,null),new cljs.core.Symbol(null,\"run\",\"run\",-180635126,null)], null);\n}));\n\n(shadow.grove.components.HookConfig.cljs$lang$type = true);\n\n(shadow.grove.components.HookConfig.cljs$lang$ctorStr = \"shadow.grove.components/HookConfig\");\n\n(shadow.grove.components.HookConfig.cljs$lang$ctorPrWriter = (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\"shadow.grove.components/HookConfig\");\n}));\n\n/**\n * Positional factory function for shadow.grove.components/HookConfig.\n */\nshadow.grove.components.__GT_HookConfig = (function shadow$grove$components$__GT_HookConfig(depends_on,affects,run){\nreturn (new shadow.grove.components.HookConfig(depends_on,affects,run));\n});\n\n/**\n * used by defc macro, do not use directly\n */\nshadow.grove.components.make_hook_config = (function shadow$grove$components$make_hook_config(depends_on,affects,run){\nif(cljs.core.nat_int_QMARK_(depends_on)){\n} else {\nthrow (new Error(\"Assert failed: (nat-int? depends-on)\"));\n}\n\nif(cljs.core.nat_int_QMARK_(affects)){\n} else {\nthrow (new Error(\"Assert failed: (nat-int? affects)\"));\n}\n\nif(cljs.core.fn_QMARK_(run)){\n} else {\nthrow (new Error(\"Assert failed: (fn? run)\"));\n}\n\nreturn (new shadow.grove.components.HookConfig(depends_on,affects,run));\n});\n/**\n * used by defc macro, do not use directly\n */\nshadow.grove.components.make_component_config = (function shadow$grove$components$make_component_config(component_name,hooks,opts,check_args_fn,render_deps,render_fn,events){\nif(typeof component_name === 'string'){\n} else {\nthrow (new Error(\"Assert failed: (string? component-name)\"));\n}\n\nif(cljs.core.array_QMARK_(hooks)){\n} else {\nthrow (new Error(\"Assert failed: (array? hooks)\"));\n}\n\nif(cljs.core.every_QMARK_((function (p1__12417_SHARP_){\nreturn (p1__12417_SHARP_ instanceof shadow.grove.components.HookConfig);\n}),hooks)){\n} else {\nthrow (new Error(\"Assert failed: (every? (fn* [p1__12417#] (instance? HookConfig p1__12417#)) hooks)\"));\n}\n\nif(cljs.core.map_QMARK_(opts)){\n} else {\nthrow (new Error(\"Assert failed: (map? opts)\"));\n}\n\nif(cljs.core.fn_QMARK_(check_args_fn)){\n} else {\nthrow (new Error(\"Assert failed: (fn? check-args-fn)\"));\n}\n\nif(cljs.core.nat_int_QMARK_(render_deps)){\n} else {\nthrow (new Error(\"Assert failed: (nat-int? render-deps)\"));\n}\n\nif(cljs.core.fn_QMARK_(render_fn)){\n} else {\nthrow (new Error(\"Assert failed: (fn? render-fn)\"));\n}\n\nif(cljs.core.map_QMARK_(events)){\n} else {\nthrow (new Error(\"Assert failed: (map? events)\"));\n}\n\nvar cfg = (new shadow.grove.protocols.ComponentConfig(component_name,hooks,opts,check_args_fn,render_deps,render_fn,events));\nif(goog.DEBUG){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(shadow.grove.components.components_ref,cljs.core.assoc,component_name,cfg);\n} else {\n}\n\nreturn cfg;\n});\nshadow.grove.components.get_arg = (function shadow$grove$components$get_arg(comp,idx){\nreturn comp.args.cljs$core$IIndexed$_nth$arity$2(null,idx);\n});\nshadow.grove.components.check_args_BANG_ = (function shadow$grove$components$check_args_BANG_(comp,new_args,expected){\nif((cljs.core.count(new_args) >= expected)){\nreturn null;\n} else {\nthrow (new Error([\"Assert failed: \",[\"component \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(comp.config.component_name),\" expected at least \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(expected),\" arguments\"].join(''),\"\\n\",\"(>= (count new-args) expected)\"].join('')));\n}\n});\nshadow.grove.components.arg_triggers_hooks_BANG_ = (function shadow$grove$components$arg_triggers_hooks_BANG_(comp,idx,dirty_bits){\nreturn comp.mark_dirty_from_args_BANG_(dirty_bits);\n});\nshadow.grove.components.arg_triggers_render_BANG_ = (function shadow$grove$components$arg_triggers_render_BANG_(comp,idx){\nreturn comp.set_render_required_BANG_();\n});\nshadow.grove.components.get_hook_value = (function shadow$grove$components$get_hook_value(comp,idx){\nreturn comp.get_hook_value(idx);\n});\nshadow.grove.components.get_events = (function shadow$grove$components$get_events(comp){\nreturn comp.config.events;\n});\nshadow.grove.components.get_parent = (function shadow$grove$components$get_parent(comp){\nreturn shadow.grove.components.get_component(comp.parent_env);\n});\nshadow.grove.components.get_component_name = (function shadow$grove$components$get_component_name(comp){\nreturn comp.config.component_name;\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","shadow/grove/components.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",28],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$defclass","~$shadow.cljs.modern"],"~:excludes",["~#set",[]],"~:macros",["^ ","~$defc",["^ ","~:arglists",["~#list",[["~$&","~$args"]]],"^7",402,"^8",1,"^6","shadow/grove/components.clj","~:name","~$shadow.grove.components/defc","~:ns","~$shadow.grove.components","~:macro",true]],"^L","^O","~:reader-aliases",["^ "],"~:op","^N","~:imports",null,"~:requires",["^ ","~$shadow.grove.runtime","^U","~$a","~$shadow.arborist.attributes","~$shadow.arborist.protocols","^W","~$cljs.core","^X","~$gp","~$shadow.grove.protocols","^D","^D","~$gobj","~$goog.object","~$goog","^11","^V","^V","^10","^10","~$shadow.arborist","^12","~$sa","^12","~$shadow.arborist.common","^14","~$common","^14","~$rt","^U","^Z","^Z","~$ap","^W"],"~:seen",["^F",["~:require","~:require-macros"]],"~:uses",["^ ","^C","^D"],"^1:",["^ ","^O","^O","^X","^X","^D","^D","^12","^12","^13","^12"],"~:form",["^J",["~$ns","^O",["^J",["^1:",["^O"]]],["^J",["^19",["^10","~:as","^["],["^D","~:refer",["^J",["^C"]]],["^12","^1>","^13"],["^14","^1>","^15"],["^W","^1>","^17"],["^V","^1>","~$a"],["^U","^1>","^16"],["^Z","^1>","^Y"]]]]],"~:flags",["^ ","^1:",["^F",[]],"^19",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^11","^X","^10","^D","^12","^14","^W","^V","^U","^Z"]],"^N","^O","~:resource-id",["~:shadow.build.classpath/resource","shadow/grove/components.cljs"],"~:compiled-at",1693994118147,"^Q",["^ ","^U","^U","~$a","^V","^W","^W","^X","^X","^Y","^Z","^O","^O","^D","^D","^[","^10","^11","^11","^V","^V","^10","^10","^12","^12","^13","^12","^14","^14","^15","^14","^16","^U","^Z","^Z","^17","^W"],"~:resource-name","shadow/grove/components.cljs","~:warnings",[],"~:source","(ns shadow.grove.components\n  (:require-macros [shadow.grove.components])\n  (:require\n    [goog.object :as gobj]\n    [shadow.cljs.modern :refer (defclass)]\n    [shadow.arborist :as sa]\n    [shadow.arborist.common :as common]\n    [shadow.arborist.protocols :as ap]\n    [shadow.arborist.attributes :as a]\n    [shadow.grove.runtime :as rt]\n    [shadow.grove.protocols :as gp]))\n\n(def ^{:tag boolean\n       :jsdoc [\"@define {boolean}\"]}\n  DEBUG\n  (js/goog.define \"shadow.grove.components.DEBUG\" js/goog.DEBUG))\n\n;; this file is an exercise in writing the least idiomatic clojure code possible\n;; shield your eyes and beware!\n\n(defonce components-ref (atom {}))\n(defonce instances-ref (atom #{}))\n\n(set! *warn-on-infer* false)\n\n(defn debug-find-roots []\n  (reduce\n    (fn [all instance]\n      (if (::parent (.-component-env instance))\n        all\n        (conj all instance)))\n    []\n    @instances-ref))\n\n(defn debug-component-seq\n  ([]\n   (debug-component-seq (first (debug-find-roots))))\n  ([root]\n   (tree-seq\n     (fn [component]\n       true)\n     (fn [component]\n       (.-child-components component))\n     root)))\n\n(defn debug-find-suspended []\n  (->> (debug-component-seq)\n       (filter #(.-suspended? %))\n       (vec)))\n\n(set! *warn-on-infer* true)\n\n(defn get-component [env]\n  (::component env))\n\n;; called on start for hot-reload purposes\n;; otherwise components may decide to skip rendering and preventing nested UI updates\n;; will be stripped in release builds\n(defn mark-all-dirty! []\n  (doseq [^ManagedComponent comp @instances-ref]\n    (.set-render-required! comp)))\n\n(declare ^{:arglists '([x])} component-init?)\n(declare ComponentInit)\n\n(defn- make-component-init [component args]\n  ;; FIXME: maybe use array, never directly accessible anyways\n  {:pre [(vector? args)]}\n  (ComponentInit. component args))\n\n(extend-type gp/ComponentConfig\n  cljs.core/IFn\n  (-invoke\n    ([this]\n     (make-component-init this []))\n    ([this a1]\n     (make-component-init this [a1]))\n    ([this a1 a2]\n     (make-component-init this [a1 a2]))\n    ([this a1 a2 a3]\n     (make-component-init this [a1 a2 a3]))\n    ([this a1 a2 a3 a4]\n     (make-component-init this [a1 a2 a3 a4]))\n    ([this a1 a2 a3 a4 a5]\n     (make-component-init this [a1 a2 a3 a4 a5]))\n    ([this a1 a2 a3 a4 a5 a6]\n     (make-component-init this [a1 a2 a3 a4 a5 a6]))\n    ;; FIXME: add more, user should really use maps at this point\n    ))\n\n(defn component-config? [x]\n  (instance? gp/ComponentConfig x))\n\n(defn safe-inc [x]\n  (if (nil? x)\n    0\n    (inc x)))\n\n(set! *warn-on-infer* false)\n\n(defn sort-fn [^ManagedComponent a ^ManagedComponent b]\n  (compare\n    (-> a (.-component-env) (::depth))\n    (-> b (.-component-env) (::depth))\n    ))\n\n;; FIXME: there are likely faster ways to do this\n(defn find-first-set-bit-idx [search]\n  {:pre [(not (zero? search))]}\n  (loop [search search\n         idx 0]\n    (if (identical? 1 (bit-and search 1))\n      idx\n      (recur (bit-shift-right search 1) (inc idx)))))\n\n(deftype EffectHook\n  [^:mutable deps\n   ^:mutable ^function callback\n   ^:mutable callback-result\n   ^:mutable ^boolean should-call?\n   ^:mutable ^not-native component-handle]\n\n  gp/IHook\n  (hook-init! [this ch]\n    (set! component-handle ch))\n\n  (hook-ready? [this] true)\n  (hook-value [this] ::effect-hook)\n  (hook-update! [this] false)\n\n  (hook-deps-update! [this ^EffectHook new]\n    ;; comp-did-update! will call it\n    ;; FIXME: (sg/effect :mount (fn [] ...)) is only called once ever\n    ;; should it be called in case it uses other hook data?\n    (set! callback (.-callback new))\n\n    ;; run after each render\n    ;; (sg/effect :render (fn [env] ...))\n\n    ;; run once on mount, any constant really works\n    ;; (sg/effect :mount (fn [env] ...))\n\n    ;; when when [a b] changes\n    ;; (sg/effect [a b] (fn [env] ....))\n\n    (let [new-deps (.-deps new)]\n      (when (not= new-deps :render)\n        (set! should-call? (not= deps new-deps))\n        (set! deps new-deps)))\n\n    ;; doesn't have a usable output\n    false)\n\n  (hook-destroy! [this]\n    (when (fn? callback-result)\n      (callback-result)))\n\n  gp/IHookDomEffect\n  (hook-did-update! [this ^boolean did-render?]\n    (when (and did-render? should-call?)\n      (when (fn? callback-result)\n        (callback-result))\n\n      (set! callback-result (callback (gp/get-component-env component-handle)))\n\n      (when (not= deps :render)\n        (set! should-call? false))\n      )))\n\n(deftype ComponentHookHandle [^not-native component idx]\n  gp/IEnvSource\n  (get-component-env [this]\n    (.-component-env component))\n\n  gp/ISchedulerSource\n  (get-scheduler [this]\n    (.-scheduler component))\n\n  gp/IComponentHookHandle\n  (hook-invalidate! [this]\n    (.invalidate-hook! component idx)))\n\n(deftype SimpleVal [^:mutable val]\n  gp/IHook\n  (hook-init! [this ch])\n  (hook-ready? [this] true)\n  (hook-value [this] val)\n  (hook-update! [this])\n  (hook-deps-update! [this ^SimpleVal next]\n    (let [new-val (.-val next)\n          updated? (not= new-val val)]\n      (set! val new-val)\n      updated?))\n  (hook-destroy! [this]))\n\n(defn maybe-wrap-val [val]\n  (if (implements? gp/IHook val)\n    val\n    (SimpleVal. val)))\n\n(defclass ManagedComponent\n  (field ^not-native scheduler)\n  (field ^not-native parent-env)\n  (field ^not-native component-env)\n  (field ^ComponentConfig config)\n  (field root)\n  (field args)\n  (field rendered-args)\n  (field ^number current-idx (int 0))\n  (field ^array hooks)\n  (field ^array hooks-with-effects #js [])\n  (field ^number dirty-from-args (int 0))\n  (field ^number dirty-hooks (int 0))\n  (field ^number updated-hooks (int 0))\n  (field ^boolean needs-render? true) ;; initially needs a render\n  (field ^boolean suspended? false)\n  (field ^boolean destroyed? false)\n  (field ^boolean error? false)\n  (field ^boolean dom-entered? false)\n  (field work-set (js/Set.)) ;; sub-tree pending work\n\n  (constructor [this e c a]\n    (set! parent-env e)\n    (set! config c)\n    (set! args a)\n    (set! scheduler (::scheduler parent-env))\n    (when DEBUG\n      ;; only keeping this info for debugging purposes currently, don't think its needed otherwise\n      ;; use js/Set since it always maintains insertion order which makes debugging easier\n      (set! this -child-components (js/Set.))\n      (when-some [parent (::component parent-env)]\n        (.. parent -child-components (add this))))\n\n    (set! component-env\n      (-> parent-env\n          (update ::depth safe-inc)\n          (assoc ::parent (::component parent-env)\n                 ::ap/dom-event-handler this\n                 ::component this\n                 ::event-target this\n                 ::scheduler this)))\n\n    ;; marks component boundaries in dev mode for easier inspect\n    (when DEBUG\n      (swap! instances-ref conj this)\n      (set! (.-marker-before this)\n        (doto (js/document.createComment (str \"component: \" (.-component-name config)))\n          (set! -shadow$instance this)))\n      (set! (.-marker-after this)\n        (doto (js/document.createComment (str \"/component: \" (.-component-name config)))\n          (set! -shadow$instance this))))\n\n    (set! root (common/managed-root component-env))\n    (set! hooks (js/Array. (alength (.-hooks config)))))\n\n  cljs.core/IHash\n  (-hash [this]\n    (goog/getUid this))\n\n  ap/IManaged\n  (dom-first [this]\n    (if DEBUG\n      (.-marker-before this)\n      (ap/dom-first root)))\n\n  (dom-insert [this parent anchor]\n    (when DEBUG\n      (.insertBefore parent (.-marker-before this) anchor))\n    (ap/dom-insert root parent anchor)\n    (when DEBUG\n      (.insertBefore parent (.-marker-after this) anchor)))\n\n  (dom-entered! [this]\n    (set! dom-entered? true)\n    (when-not error?\n      (ap/dom-entered! root)\n      ;; trigger first on mount\n      (.did-update! this true)))\n\n  (supports? [this next]\n    (and (component-init? next)\n         (let [other (.-component ^ComponentInit next)]\n           (identical? config other))\n         ;; (defc ui-thing [^:stable ident] ...)\n         ;; should cause unmount on changing ident\n         (let [stable-args (-> config .-opts (get ::stable-args))]\n           (or (nil? stable-args)\n               (let [old-args args\n                     new-args (.-args next)]\n                 (every? #(= (nth old-args %) (nth new-args %)) stable-args))))\n         (let [custom-check (-> config .-opts (get :supports?))]\n           (or (nil? custom-check)\n               (custom-check args (.-args next))))))\n\n  (dom-sync! [this ^ComponentInit next]\n    (. config (check-args-fn this args (.-args next)))\n    (set! args (.-args next))\n    (when (.work-pending? this)\n      (.schedule! this ::dom-sync!)))\n\n  (destroy! [this ^boolean dom-remove?]\n    (.unschedule! this)\n    (when DEBUG\n      (swap! instances-ref disj this)\n\n      (when-some [parent (::parent component-env)]\n        (.. parent -child-components (delete this)))\n\n      (when dom-remove?\n        (.remove (.-marker-before this))\n        (.remove (.-marker-after this))))\n\n    (set! destroyed? true)\n\n    (.forEach hooks\n      (fn [^not-native hook]\n        (when hook\n          (gp/hook-destroy! hook))))\n\n    (ap/destroy! root dom-remove?))\n\n  ;; FIXME: figure out default event handler\n  ;; don't want to declare all events all the time\n  gp/IHandleEvents\n  (handle-event! [this {ev-id :e :as ev-map} e origin]\n    (let [handler\n          (cond\n            (qualified-keyword? ev-id)\n            (or (get (.-events config) ev-id)\n                (get (.-opts config) ev-id))\n\n            :else\n            (throw (ex-info \"unknown event\" {:event ev-map})))]\n\n      (if handler\n        (handler component-env ev-map e origin)\n\n        ;; no handler, try parent\n        (if-some [parent (::event-target parent-env)]\n          (gp/handle-event! parent ev-map e origin)\n          (js/console.warn \"event not handled\" ev-id ev-map)))))\n\n  gp/IScheduleWork\n  (did-suspend! [this work-task]\n    (gp/did-suspend! scheduler work-task))\n\n  (did-finish! [this work-task]\n    (gp/did-finish! scheduler work-task))\n\n  (schedule-work! [this work-task trigger]\n    (when (zero? (.-size work-set))\n      (gp/schedule-work! scheduler this trigger))\n\n    (.add work-set work-task))\n\n  (unschedule! [this work-task]\n    (.delete work-set work-task)\n\n    (when (zero? (.-size work-set))\n      (gp/unschedule! scheduler this)))\n\n  (run-now! [this callback trigger]\n    (gp/run-now! scheduler callback trigger))\n\n  ;; parent tells us to work\n  gp/IWork\n  (work! [this]\n    (when-not error?\n      (try\n        ;; always complete our own work first\n        ;; a re-render may cause the child tree to change\n        ;; and maybe some work to disappear\n        (while ^boolean (.work-pending? this)\n          (.run-next! this))\n\n        ;; FIXME: only process children when this is done and not suspended?\n        (let [iter (.values work-set)]\n          (loop []\n            (let [current (.next iter)]\n              (when (not ^boolean (.-done current))\n                (gp/work! ^not-native (.-value current))\n\n                ;; should time slice later and only continue work\n                ;; until a given time budget is consumed\n                (recur)))))\n        (catch :default ex\n          (.handle-error! this ex)))))\n\n  ;; FIXME: should have an easier way to tell shadow-cljs not to create externs for these\n  Object\n  (handle-error! [this ex]\n    (set! error? true)\n    (.unschedule! this)\n\n    (let [err-fn (::error-handler parent-env)]\n      (err-fn this ex)))\n\n  (get-hook-value [this idx]\n    (gp/hook-value (aget hooks idx)))\n\n  (invalidate-hook! [this idx]\n    ;; (js/console.log \"invalidate-hook!\" idx current-idx (.-component-name config) this)\n\n    (set! dirty-hooks (bit-set dirty-hooks idx))\n\n    ;; don't set higher when currently at lower index, would otherwise skip work\n    (set! current-idx (js/Math.min idx current-idx))\n\n    ;; always need to resume so the invalidated hooks can do work\n    ;; could check if actually suspended but no need\n    (set! suspended? false)\n\n    (.schedule! this ::hook-invalidate!))\n\n  (mark-hooks-dirty! [this dirty-bits]\n    (set! dirty-hooks (bit-or dirty-hooks dirty-bits))\n    (set! current-idx (find-first-set-bit-idx dirty-hooks)))\n\n  (mark-dirty-from-args! [this dirty-bits]\n    (set! dirty-from-args (bit-or dirty-from-args dirty-bits))\n    (.mark-hooks-dirty! this dirty-bits))\n\n  (set-render-required! [this]\n    (set! needs-render? true)\n    (set! current-idx (js/Math.min current-idx (alength (.-hooks config)))))\n\n  (run-next! [^not-native this]\n    #_(js/console.log \"Component:run-next!\"\n        (.-component-name config)\n        current-idx\n        (alength (.-hooks config))\n        dirty-hooks\n        (bit-test dirty-hooks current-idx)\n        this)\n    (if (identical? current-idx (alength (.-hooks config)))\n      ;; all hooks done\n      (.component-render! this)\n\n      ;; process hooks in order, starting at the lowest index invalidated\n      (let [hook (aget hooks current-idx)]\n        ;; (js/console.log \"Component:run-next!\" current-idx (:component-name config) (pr-str (type hook)) this)\n\n        (cond\n          ;; doesn't exist, create it\n          (not hook)\n          (let [^function run-fn (-> (.-hooks config) (aget current-idx) (.-run))\n                handle (ComponentHookHandle. this current-idx)\n                val (run-fn this)\n                hook (maybe-wrap-val val)]\n\n            ;; (js/console.log \"Component:init-hook!\" (:component-name config) current-idx val hook)\n\n            (aset hooks current-idx hook)\n\n            (gp/hook-init! hook handle)\n\n            ;; previous hook may have marked hook as dirty since it used data\n            ;; but hook may have not been constructed yet, constructing must clear dirty bit\n            (set! dirty-hooks (bit-clear dirty-hooks current-idx))\n            ;; construction counts as updated since value became available for first time\n            (set! updated-hooks (bit-set updated-hooks current-idx))\n\n            (when (bit-test (.-render-deps config) current-idx)\n              (set! needs-render? true))\n\n            (when (satisfies? gp/IHookDomEffect hook)\n              (.push hooks-with-effects hook))\n\n            (if (gp/hook-ready? hook)\n              (set! current-idx (inc current-idx))\n              (.suspend! this current-idx)))\n\n          ;; marked dirty, update it\n          ;; make others dirty if actually updated\n          (bit-test dirty-hooks current-idx)\n          (let [hook-config (aget (.-hooks config) current-idx)\n\n                deps-updated?\n                ;; dirty hooks this depends-on should trigger an update\n                ;; or changed args used by this should trigger\n                (or (pos? (bit-and (.-depends-on hook-config) updated-hooks))\n                    (bit-test dirty-from-args current-idx))\n\n                ^function run (.-run hook-config)\n\n                next-hook\n                (maybe-wrap-val (run this))\n\n                _ (when-not (identical? (type hook) (type next-hook))\n                    (throw (ex-info \"illegal hook value, type cannot change\" {:old hook :new next-hook})))\n\n                did-update? ;; checks if hook deps changed as well, calling init again\n                (if deps-updated?\n                  (gp/hook-deps-update! hook next-hook)\n                  (gp/hook-update! hook))]\n\n            #_(js/console.log \"Component:hook-update!\"\n                (:component-name config)\n                current-idx\n                deps-updated?\n                did-update?\n                hook)\n\n            (set! dirty-hooks (bit-clear dirty-hooks current-idx))\n\n            (when did-update?\n              (set! updated-hooks (bit-set updated-hooks current-idx))\n              (set! dirty-hooks (bit-or dirty-hooks (.-affects hook-config)))\n\n              (when (bit-test (.-render-deps config) current-idx)\n                (set! needs-render? true)))\n\n            (if (gp/hook-ready? hook)\n              (set! current-idx (inc current-idx))\n              (.suspend! this current-idx)))\n\n          :else\n          (set! current-idx (inc current-idx))))))\n\n  (work-pending? [this]\n    (and (not destroyed?)\n         (not suspended?)\n         (not error?)\n         (or (pos? dirty-hooks)\n             needs-render?\n             (>= (alength (.-hooks config)) current-idx))))\n\n  (suspend! [this hook-causing-suspend]\n    ;; (js/console.log \"suspending\" hook-causing-suspend this)\n\n    ;; just in case we were already scheduled. should really track this more efficiently\n    (.unschedule! this)\n    (gp/did-suspend! scheduler this)\n    (set! suspended? true))\n\n  (schedule! [this trigger]\n    (when-not destroyed?\n      (gp/schedule-work! scheduler this trigger)))\n\n  (unschedule! [this]\n    (gp/unschedule! scheduler this))\n\n  (component-render! [^ManagedComponent this]\n    (assert (zero? dirty-hooks) \"Got to render while hooks are dirty\")\n    ;; (js/console.log \"Component:render!\" (.-component-name config) updated-hooks needs-render? suspended? destroyed? this)\n    (set! updated-hooks (int 0))\n    (set! dirty-from-args (int 0))\n\n    (let [did-render? needs-render?]\n      (when needs-render?\n        (let [frag (. config (render-fn this))]\n\n          (set! rendered-args args)\n          (set! needs-render? false)\n\n          (ap/update! root frag)))\n\n      ;; only trigger dom effects when mounted\n      (when dom-entered?\n        (.did-update! this did-render?)))\n\n    ;; must keep this for work scheduling so it knows its done\n    (set! current-idx (inc current-idx))\n\n    (gp/did-finish! scheduler this)\n    (.unschedule! this))\n\n  (did-update! [this did-render?]\n    (.forEach hooks-with-effects\n      (fn [^not-native item]\n        (gp/hook-did-update! item did-render?)))))\n\n;; FIXME: no clue why I can't put this in ManagedComponent directly\n;; compiler complains with undeclared var ManagedComponent\n;; probably something in defclass I missed\n\n(extend-type ManagedComponent\n  ap/IHandleDOMEvents\n  (validate-dom-event-value! [this env event ev-value]\n    (when-not (or (keyword? ev-value) (map? ev-value))\n      (throw\n        (ex-info\n          (str \"event: \" event \" expects a map or keyword value\")\n          {:event event :value ev-value}))))\n\n  ;; event is \"click\" for :on-click etc which we just drop\n  (handle-dom-event! [this event-env event ev-value dom-event]\n    (let [ev-map\n          (if (map? ev-value)\n            ev-value\n            {:e ev-value})]\n\n      ;; (js/console.log \"dom-event\" this event-env event ev-map dom-event)\n      (gp/run-now! (.-scheduler this)\n        #(gp/handle-event! this ev-map dom-event event-env)\n        ::handle-dom-event!))))\n\n(set! *warn-on-infer* true)\n\n(defn component-create [env ^gp/ComponentConfig config args]\n  (when ^boolean js/goog.DEBUG\n    (when-not (instance? gp/ComponentConfig config)\n      (throw (ex-info \"not a component definition\" {:config config :props args}))))\n\n  (doto (ManagedComponent. env config args)\n    ;; do as much work as possible now\n    ;; only go async when suspended\n    (gp/work!)))\n\n(deftype ComponentInit [component args]\n  ap/IConstruct\n  (as-managed [this env]\n    (component-create env component args))\n\n  IEquiv\n  (-equiv [this ^ComponentInit other]\n    (and (instance? ComponentInit other)\n         (identical? component (.-component other))\n         (= args (.-args other)))))\n\n(defn component-init? [x]\n  (instance? ComponentInit x))\n\n(deftype HookConfig [depends-on affects run])\n\n(defn make-hook-config\n  \"used by defc macro, do not use directly\"\n  [depends-on affects run]\n  {:pre [(nat-int? depends-on)\n         (nat-int? affects)\n         (fn? run)]}\n  (HookConfig. depends-on affects run))\n\n(defn make-component-config\n  \"used by defc macro, do not use directly\"\n  [component-name\n   hooks\n   opts\n   check-args-fn\n   render-deps\n   render-fn\n   events]\n  {:pre [(string? component-name)\n         (array? hooks)\n         (every? #(instance? HookConfig %) hooks)\n         (map? opts)\n         (fn? check-args-fn)\n         (nat-int? render-deps)\n         (fn? render-fn)\n         (map? events)]}\n\n  (let [cfg\n        (gp/ComponentConfig.\n          component-name\n          hooks\n          opts\n          check-args-fn\n          render-deps\n          render-fn\n          events)]\n\n    (when ^boolean js/goog.DEBUG\n      (swap! components-ref assoc component-name cfg))\n\n    cfg))\n\n;; these are called by defc macro, do not delete!\n;; cursive marks these as unused\n\n(defn get-arg ^not-native [^ManagedComponent comp idx]\n  (-nth ^not-native (.-args comp) idx))\n\n(defn check-args! [^ManagedComponent comp new-args expected]\n  (assert (>= (count new-args) expected) (str \"component \" (. ^ComponentConfig (. comp -config) -component-name) \" expected at least \" expected \" arguments\")))\n\n(defn arg-triggers-hooks! [^ManagedComponent comp idx dirty-bits]\n  (.mark-dirty-from-args! comp dirty-bits))\n\n(defn arg-triggers-render! [^ManagedComponent comp idx]\n  (.set-render-required! comp))\n\n(defn get-hook-value [^ManagedComponent comp idx]\n  (.get-hook-value comp idx))\n\n(defn get-events [^ManagedComponent comp]\n  ;; FIXME: ... loses typehints?\n  (. ^clj (. comp -config) -events))\n\n(defn get-parent [^ManagedComponent comp]\n  (get-component (. comp -parent-env)))\n\n(defn get-component-name [^ManagedComponent comp]\n  (. ^clj (. comp -config) -component-name))\n\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["shadow.grove.components/DEBUG","js/goog.define","js/goog.DEBUG","js/shadow","js/shadow.grove","js/shadow.grove.components","js/shadow.grove.components.components-ref","shadow.grove.components/components-ref","cljs.core.atom","js/shadow.grove.components.instances-ref","shadow.grove.components/instances-ref","shadow.grove.components/debug-find-roots","cljs.core/deref","cljs.core.reduce","all","instance","cljs.core.conj","var_args","G__12165","shadow.grove.components/debug-component-seq","js/Error","shadow.grove.components.debug_component_seq","cljs.core/first","root","cljs.core/tree-seq","component","shadow.grove.components/debug-find-suspended","p1__12166#","cljs.core.filter","cljs.core/vec","shadow.grove.components/get-component","env","shadow.grove.components/mark-all-dirty!","seq__12179","cljs.core/seq","chunk__12180","count__12181","i__12182","temp__5804__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/next","comp","shadow.grove.components/make-component-init","args","cljs.core/vector?","shadow.grove.components/ComponentInit","cljs.core/PROTOCOL_SENTINEL","shadow.grove.protocols/ComponentConfig","self__","args12192","args__5260__auto__","cljs.core/aclone","G__12193","this","a1","a2","a3","a4","a5","a6","shadow.grove.components/component-config?","x","shadow.grove.components/safe-inc","shadow.grove.components/sort-fn","a","b","cljs.core/compare","shadow.grove.components/find-first-set-bit-idx","search","idx","this__5330__auto__","writer__5331__auto__","opt__5332__auto__","cljs.core/-write","shadow.grove.components/EffectHook","shadow.grove.components/->EffectHook","deps","callback","callback-result","should-call?","component-handle","ch","new","new-deps","cljs.core.not_EQ_","cljs.core/fn?","did-render?","shadow.grove.components/ComponentHookHandle","shadow.grove.components/->ComponentHookHandle","shadow.grove.components/SimpleVal","shadow.grove.components/->SimpleVal","val","next","new-val","updated?","shadow.grove.components/maybe-wrap-val","G__12291","G__12292","G__12293","shadow.grove.components/ManagedComponent","current-idx","hooks-with-effects","dirty-from-args","dirty-hooks","updated-hooks","needs-render?","work-set","js/Set","e","c","parent-env","config","scheduler","temp__5808__auto__","parent","component-env","cljs.core.update","cljs.core.assoc","cljs.core.swap_BANG_","cljs.core/conj","G__12299","js/document.createComment","G__12301","shadow.arborist.common/managed-root","hooks","js/Array","goog/getUid","shadow.arborist.protocols/dom-first","anchor","shadow.arborist.protocols/dom-insert","dom-entered?","error?","shadow.arborist.protocols/dom-entered!","and__5043__auto__","shadow.grove.components/component-init?","other","stable-args","cljs.core.get","or__5045__auto__","old-args","new-args","p1__12281#","cljs.core/every?","cljs.core._EQ_","cljs.core.nth","custom-check","G__12317","G__12318","dom-remove?","cljs.core/disj","destroyed?","hook","shadow.arborist.protocols/destroy!","p__12330","map__12331","cljs.core/--destructure-map","ev-id","ev-map","origin","handler","cljs.core/qualified-keyword?","cljs.core.ex_info","temp__5806__auto__","shadow.grove.protocols/handle-event!","js/console.warn","work-task","trigger","e12336","iter","current","ex","err-fn","shadow.grove.protocols/hook-value","js/Math.min","suspended?","dirty-bits","cljs.core/not","run-fn","handle","shadow.grove.protocols/hook-init!","cljs.core/native-satisfies?","shadow.grove.protocols/IHookDomEffect","shadow.grove.protocols/hook-ready?","hook-config","deps-updated?","run","next-hook","_","cljs.core/type","did-update?","shadow.grove.protocols/hook-deps-update!","shadow.grove.protocols/hook-update!","hook-causing-suspend","frag","rendered-args","shadow.arborist.protocols/update!","item","event","ev-value","cljs.core/Keyword","cljs.core/map?","event-env","dom-event","shadow.grove.protocols/run-now!","shadow.grove.components/component-create","G__12397","shadow.grove.protocols/work!","shadow.grove.components/->ComponentInit","shadow.grove.components/HookConfig","shadow.grove.components/->HookConfig","depends-on","affects","shadow.grove.components/make-hook-config","cljs.core/nat-int?","shadow.grove.components/make-component-config","component-name","opts","check-args-fn","render-deps","render-fn","events","cljs.core/array?","p1__12417#","cfg","cljs.core/assoc","shadow.grove.components/get-arg","shadow.grove.components/check-args!","expected","shadow.grove.components/arg-triggers-hooks!","shadow.grove.components/arg-triggers-render!","shadow.grove.components/get-hook-value","shadow.grove.components/get-events","shadow.grove.components/get-parent","shadow.grove.components/get-component-name"]],"~:used-vars",["^F",["~$cljs.core/array?","~$cljs.core/--destructure-map","~$shadow.grove.protocols/unschedule!","~$cljs.core/PROTOCOL_SENTINEL","~$js/goog.define","~$shadow.grove.components/safe-inc","~$shadow.arborist.protocols/dom-insert","~$shadow.arborist.protocols/dom-first","~$shadow.grove.components/debug-component-seq","~$shadow.grove.components/check-args!","~$shadow.grove.components/->ComponentInit","~$shadow.grove.components/component-config?","~$shadow.grove.components/debug-find-roots","~$shadow.grove.protocols/did-finish!","~$shadow.grove.protocols/hook-deps-update!","~$js/shadow.grove.components","~$cljs.core/vector?","~$cljs.core/filter","~$cljs.core/=","~$shadow.grove.components/arg-triggers-render!","~$shadow.grove.components/HookConfig","~$shadow.grove.components/ComponentInit","~$cljs.core/-write","~$shadow.grove.components/ManagedComponent","~$shadow.grove.components/->ComponentHookHandle","~$shadow.grove.components/component-init?","~$cljs.core/count","~$cljs.core/deref","~$shadow.grove.components/debug-find-suspended","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/chunk-first","~$shadow.grove.components/maybe-wrap-val","~$cljs.core/Keyword","~$shadow.grove.protocols/handle-event!","~$cljs.core/aclone","~$goog/getUid","~$shadow.grove.protocols/ComponentConfig","~$cljs.core/not=","~$cljs.core/chunk-rest","~$cljs.core/atom","~$shadow.grove.components/SimpleVal","~$cljs.core/qualified-keyword?","~$shadow.grove.protocols/IHookDomEffect","~$shadow.grove.components/sort-fn","~$js/console.warn","~$cljs.core/tree-seq","~$shadow.grove.components/->SimpleVal","~$js/document.createComment","~$js/shadow.grove","~$shadow.grove.components/components-ref","~$cljs.core/native-satisfies?","~$js/Math.min","~$cljs.core/map?","~$cljs.core/conj","~$shadow.grove.components/get-parent","~$shadow.arborist.common/managed-root","~$cljs.core/update","~$shadow.arborist.protocols/update!","~$cljs.core/fn?","~$js/shadow.grove.components.components-ref","~$shadow.grove.components/component-create","~$shadow.grove.components/get-hook-value","~$js/shadow.grove.components.instances-ref","~$cljs.core/swap!","~$shadow.grove.protocols/run-now!","~$cljs.core/get","~$shadow.grove.components/get-component","~$shadow.grove.protocols/work!","~$js/Array","~$cljs.core/-nth","~$shadow.grove.components/find-first-set-bit-idx","~$shadow.grove.components/DEBUG","~$shadow.grove.components/make-component-config","~$cljs.core/nat-int?","~$shadow.grove.protocols/hook-value","~$shadow.grove.components/EffectHook","~$shadow.grove.components/ComponentHookHandle","~$cljs.core/nth","~$cljs.core/ex-info","~$shadow.grove.protocols/did-suspend!","~$shadow.grove.components/get-events","~$js/goog.DEBUG","~$shadow.grove.components/instances-ref","~$cljs.core/next","~$cljs.core/vec","~$shadow.grove.components/->EffectHook","~$shadow.arborist.protocols/destroy!","~$js/Set","~$cljs.core/not","~$cljs.core/compare","~$shadow.grove.components/mark-all-dirty!","~$cljs.core/disj","~$cljs.core/assoc","~$shadow.grove.components/make-component-init","~$shadow.arborist.protocols/dom-entered!","~$shadow.grove.protocols/hook-update!","~$shadow.grove.protocols/get-component-env","~$shadow.grove.protocols/schedule-work!","~$js/shadow","~$shadow.grove.components/make-hook-config","~$shadow.grove.protocols/hook-destroy!","~$cljs.core/first","~$shadow.grove.components/get-component-name","~$shadow.grove.protocols/hook-ready?","~$cljs.core/every?","~$shadow.grove.components/->HookConfig","~$js/Error","~$shadow.grove.components/get-arg","~$cljs.core/type","~$shadow.grove.protocols/hook-did-update!","~$shadow.grove.components/arg-triggers-hooks!","~$cljs.core/chunked-seq?","~$shadow.grove.protocols/hook-init!"]]],"~:cache-keys",["~#cmap",[["^1D","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^11","~$goog.dom.HtmlElement"]]],["^1D","goog/labs/useragent/platform.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","~$goog.string.internal","~$goog.labs.userAgent.util"]]],["^1D","goog/math/math.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","~$goog.asserts"]]],["^1D","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11"]]],["^1D","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","~$goog.array","^10","^4F","^4E"]]],["^1D","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4G","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^4E"]]],["^1D","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4G"]]],["^1D","shadow/arborist.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^X","^W","~$shadow.arborist.fragments","^V","^14","~$shadow.arborist.collections","~$goog.async.nextTick"]]],["^1D","goog/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^4F","~$goog.reflect","^4E"]]],["^1D","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11"]]],["^1D","shadow/cljs/modern.cljs"],["ee16ada88101a631936f48dec7336340a66616ec","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^X"]]],["^1D","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11"]]],["^1D","shadow/arborist/protocols.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^X"]]],["^1D","shadow/arborist/common.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^X","~$goog.dom","^W"]]],["^1D","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11"]]],["^1D","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11"]]],["^1D","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4G"]]],"~:SHADOW-TIMESTAMP",[1693915017000,1693915017000,1667395541000],["^1D","shadow/arborist/attributes.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^X","^10","~$goog.string","~$goog.functions","~$clojure.string","^W"]]],["^1D","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4G","^4U"]]],["^1D","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4G","~$goog.fs.blob","^4I","~$goog.html.SafeScript","~$goog.html.trustedtypes","^4K","^4L","^4M","^4N"]]],["^1D","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11"]]],["^1D","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11"]]],["^1D","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4M","~$goog.html.SafeUrl","^4N","^4G","^4E"]]],["^1D","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4G","~$goog.dom.asserts","^4Y","~$goog.html.SafeHtml","^50","~$goog.html.SafeStyle","^52","^4J","~$goog.html.uncheckedconversions","^4M","^4E"]]],["^1D","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4M","^4K","^4L","^50","^55","~$goog.html.SafeStyleSheet","^52","~$goog.dom.TagName","^4J","^4N","^4G","^4R","^4H","^10","^4E","~$goog.dom.tags","^51"]]],["^1D","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^10"]]],["^1D","goog/math/size.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11"]]],["^1D","goog/labs/useragent/engine.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4H","^4E","^4F"]]],["^1D","shadow/arborist/collections.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^X","^W","^14"]]],["^1D","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11"]]],["^1D","shadow/arborist/fragments.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^X","^W","^V","^14"]]],["^1D","goog/dom/dom.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4H","^4G","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^58","~$goog.dom.safe","^54","^56","~$goog.math.Coordinate","~$goog.math.Size","^10","^4X","^4M","~$goog.string.Unicode","~$goog.userAgent"]]],["^1D","shadow/grove/components.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^X","^10","^D","^12","^14","^W","^V","^U","^Z"]]],["^1D","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","~$goog.debug.Error","^5;"]]],["^1D","shadow/grove/protocols.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^X"]]],["^1D","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4H","^4G","~$goog.collections.maps","^4X","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1D","shadow/grove/runtime.cljs"],["b8a0dc13df75ac7867d81f2487e68ccce4839bd9","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^X","^4Q","^Z"]]],["^1D","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11"]]],["^1D","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11"]]],["^1D","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11"]]],["^1D","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",[]]],["^1D","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4H","^10"]]],["^1D","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^X","^4X","~$goog.string.StringBuffer"]]],["^1D","goog/debug/entrypointregistry.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4G"]]],["^1D","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^5<","^56","^4M","^4E"]]],["^1D","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11"]]],["^1D","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","~$goog.labs.userAgent","^4E"]]],["^1D","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11"]]],["^1D","goog/math/coordinate.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","~$goog.math"]]],["^1D","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11"]]],["^1D","goog/async/nexttick.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","~$goog.debug.entryPointRegistry","^4V","^58","^4Y","^4R","^4S"]]],["^1D","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4G","^54","^50","^55","^57","^52","^4J","^4M","^4E","^4K"]]],["^1D","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11"]]],["^1D","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","~$goog.math.Long","~$goog.math.Integer","^4X","^10","^4H","~$goog.Uri","^5G"]]],["^1D","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4M","^4N","^51","^4G"]]],["^1D","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4M","^55","^4N","^10","^4G","^4E"]]],["^1D","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4U"]]],["^1D","goog/dom/browserfeature.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^5@"]]],["^1D","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4G","^4X"]]],["^1D","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4@",["^ ","^4A",null,"^4B",["^F",[]],"^4C",["^11","^4G","^4N"]]]]],"~:clj-info",["^ ","jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/com/thheller/shadow-grove/0.4.2/shadow-grove-0.4.2.jar!/shadow/arborist.clj",1693915017000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/com/thheller/shadow-grove/0.4.2/shadow-grove-0.4.2.jar!/shadow/grove/components.clj",1693915017000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/spec.alpha/0.3.218/spec.alpha-0.3.218.jar!/clojure/spec/gen/alpha.clj",1649406308000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1667395541000,"jar:file:/home/jam/.m2/repository/thheller/shadow-cljs/2.19.8/shadow-cljs-2.19.8-aot.jar!/shadow/cljs/modern.cljc",1693915017000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1667395541000,"jar:file:/home/jam/.m2/repository/com/thheller/shadow-grove/0.4.2/shadow-grove-0.4.2.jar!/shadow/arborist/fragments.cljc",1693915017000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/spec.alpha/0.3.218/spec.alpha-0.3.218.jar!/clojure/spec/alpha.clj",1649406308000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1667395541000,"jar:file:/home/jam/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1649406309000,"jar:file:/home/jam/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1667395541000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","shadow/grove/components.cljs","^7",1,"^8",5,"^9",1,"^:",28],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",["^ ","^C","^D"],"^E",["^F",[]],"^G",["^ ","^H",["^ ","^I",["^J",[["~$&","^K"]]],"^7",402,"^8",1,"^6","shadow/grove/components.clj","^L","^M","^N","^O","^P",true]],"~:shadow/js-access-properties",["^F",["min","createComment","shadow$instance"]],"^L","^O","^Q",["^ "],"^S",null,"^T",["^ ","^U","^U","~$a","^V","^W","^W","^X","^X","^Y","^Z","^D","^D","^[","^10","^11","^11","^V","^V","^10","^10","^12","^12","^13","^12","^14","^14","^15","^14","^16","^U","^Z","^Z","^17","^W"],"^18",["^F",["^19","^1:"]],"~:shadow/js-access-global",["^F",["document","Math","Error","Array","Set"]],"^1;",["^ ","^C","^D"],"~:defs",["^ ","~$safe-inc",["^ ","~:protocol-inline",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",94,"^8",7,"^9",94,"^:",15,"^I",["^J",["~$quote",["^J",[["~$x"]]]]]],"^L","^1U","^6","shadow/grove/components.cljs","^:",15,"~:method-params",["^J",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^J",[null,null]],"^8",1,"~:variadic?",false,"^7",94,"~:ret-tag","~$number","^9",94,"~:max-fixed-arity",1,"~:fn-var",true,"^I",["^J",["^6M",["^J",[["~$x"]]]]]],"~$debug-find-suspended",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",46,"^8",7,"^9",46,"^:",27,"^I",["^J",["^6M",["^J",[[]]]]]],"^L","^2@","^6","shadow/grove/components.cljs","^:",27,"^6N",["^J",[[]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",46,"^6R",["^F",["~$clj","~$cljs.core/IVector","~$any","~$cljs.core/MetaFn","~$clj-nil"]],"^9",46,"^6T",0,"^6U",true,"^I",["^J",["^6M",["^J",[[]]]]]],"~$debug-find-roots",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",26,"^8",7,"^9",26,"^:",23,"^I",["^J",["^6M",["^J",[[]]]]]],"^L","^20","^6","shadow/grove/components.cljs","^:",23,"^6N",["^J",[[]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",26,"^6R",["^F",[null,"^6Y"]],"^9",26,"^6T",0,"^6U",true,"^I",["^J",["^6M",["^J",[[]]]]]],"~$debug-component-seq",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",35,"^8",7,"^9",35,"^:",26,"^I",["^J",["^6M",["^J",[[],["~$root"]]]]],"~:top-fn",["^ ","^6Q",false,"~:fixed-arity",1,"^6T",1,"^6N",[[],["^72"]],"^I",["^J",[[],["^72"]]],"^6P",["^J",[null,null]]]],"^L","^1X","^6","shadow/grove/components.cljs","^:",26,"^73",["^ ","^6Q",false,"^74",1,"^6T",1,"^6N",[[],["^72"]],"^I",["^J",[[],["^72"]]],"^6P",["^J",[null,null]]],"^6N",[[],["^72"]],"^6O",null,"^74",1,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"~:methods",[["^ ","^74",0,"^6Q",false,"~:tag","^6Y"],["^ ","^74",1,"^6Q",false,"^76","~$cljs.core/LazySeq"]],"^7",35,"^9",35,"^6T",1,"^6U",true,"^I",["^J",[[],["^72"]]]],"~$check-args!",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",673,"^8",7,"^9",673,"^:",18,"^I",["^J",["^6M",["^J",[["~$comp","~$new-args","~$expected"]]]]]],"^L","^1Y","^6","shadow/grove/components.cljs","^:",18,"^6N",["^J",[["^79","^7:","^7;"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",673,"^6R","^6[","^9",673,"^6T",3,"^6U",true,"^I",["^J",["^6M",["^J",[["^79","^7:","^7;"]]]]]],"~$->ComponentInit",["^ ","^6L",null,"^5",["^ ","~:protocols",["^F",["~$cljs.core/IEquiv","~$shadow.arborist.protocols/IConstruct"]],"^6","shadow/grove/components.cljs","^:",23,"^8",10,"~:factory","~:positional","^7",610,"^9",610,"^I",["^J",["^6M",["^J",[["~$component","^K"]]]]],"~:skip-protocol-flag",["^F",["^7>"]],"~:doc","Positional factory function for shadow.grove.components/ComponentInit."],"^7=",["^F",["^7>","^7?"]],"^L","^1Z","^6","shadow/grove/components.cljs","^:",23,"^6N",["^J",[["^7B","^K"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7@","^7A","^7",610,"^6R","^29","^9",610,"^6T",2,"^6U",true,"^I",["^J",["^6M",["^J",[["^7B","^K"]]]]],"^7C",["^F",["^7>"]],"^7D","Positional factory function for shadow.grove.components/ComponentInit."],"~$ManagedComponent",["^ ","~:num-fields",3,"^7=",["^F",[]],"^L","^2;","^6","shadow/grove/components.cljs","~:type",true,"^8",1,"^7",201,"~:record",false,"^76","~$function"],"~$HookConfig",["^ ","^7F",3,"^7=",["^F",[]],"^L","^28","^6","shadow/grove/components.cljs","^:",20,"^7G",true,"^8",10,"^7",624,"^7H",false,"^9",624,"^76","^7I","^7C",null],"~$component-init?",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",621,"^8",7,"^9",621,"^:",22,"^I",["^J",["^6M",["^J",[["~$x"]]]]]],"^L","^2=","^6","shadow/grove/components.cljs","^:",22,"^6N",["^J",[["~$x"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",621,"^6R","~$boolean","^9",621,"^6T",1,"^6U",true,"^I",["^J",["^6M",["^J",[["~$x"]]]]]],"~$maybe-wrap-val",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",196,"^8",7,"^9",196,"^:",21,"^I",["^J",["^6M",["^J",[["~$val"]]]]]],"^L","^2D","^6","shadow/grove/components.cljs","^:",21,"^6N",["^J",[["^7N"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",196,"^6R","^6W","^9",196,"^6T",1,"^6U",true,"^I",["^J",["^6M",["^J",[["^7N"]]]]]],"~$ComponentInit",["^ ","^5",["^ ","^6","shadow/grove/components.cljs","^7",64,"^8",10,"^9",64,"^:",23,"~:declared",true],"^7F",2,"^7=",["^F",["^7>","^7?"]],"^L","^29","^6","shadow/grove/components.cljs","^:",23,"^7G",true,"^8",10,"^7",610,"^7H",false,"^7P",true,"^9",610,"^76","^7I","^7C",["^F",["^7>"]]],"~$->ComponentHookHandle",["^ ","^6L",null,"^5",["^ ","^7=",["^F",["~$shadow.grove.protocols/IComponentHookHandle","~$shadow.grove.protocols/ISchedulerSource","~$shadow.grove.protocols/IEnvSource"]],"^6","shadow/grove/components.cljs","^:",29,"^8",10,"^7@","^7A","^7",170,"^9",170,"^I",["^J",["^6M",["^J",[["^7B","~$idx"]]]]],"^7C",null,"^7D","Positional factory function for shadow.grove.components/ComponentHookHandle."],"^7=",["^F",["^7R","^7S","^7T"]],"^L","^2<","^6","shadow/grove/components.cljs","^:",29,"^6N",["^J",[["^7B","^7U"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7@","^7A","^7",170,"^6R","^3E","^9",170,"^6T",2,"^6U",true,"^I",["^J",["^6M",["^J",[["^7B","^7U"]]]]],"^7C",null,"^7D","Positional factory function for shadow.grove.components/ComponentHookHandle."],"~$arg-triggers-render!",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",679,"^8",7,"^9",679,"^:",27,"^I",["^J",["^6M",["^J",[["^79","^7U"]]]]]],"^L","^27","^6","shadow/grove/components.cljs","^:",27,"^6N",["^J",[["^79","^7U"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",679,"^6R","^6Y","^9",679,"^6T",2,"^6U",true,"^I",["^J",["^6M",["^J",[["^79","^7U"]]]]]],"~$sort-fn",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",101,"^8",7,"^9",101,"^:",14,"^I",["^J",["^6M",["^J",[["~$a","~$b"]]]]]],"^L","^2P","^6","shadow/grove/components.cljs","^:",14,"^6N",["^J",[["~$a","~$b"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",101,"^6R","^6S","^9",101,"^6T",2,"^6U",true,"^I",["^J",["^6M",["^J",[["~$a","~$b"]]]]]],"~$->SimpleVal",["^ ","^6L",null,"^5",["^ ","^7=",["^F",["~$shadow.grove.protocols/IHook"]],"^6","shadow/grove/components.cljs","^:",19,"^8",10,"^7@","^7A","^7",183,"^9",183,"^I",["^J",["^6M",["^J",[["^7N"]]]]],"^7C",null,"^7D","Positional factory function for shadow.grove.components/SimpleVal."],"^7=",["^F",["^7Y"]],"^L","^2S","^6","shadow/grove/components.cljs","^:",19,"^6N",["^J",[["^7N"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7@","^7A","^7",183,"^6R","^2M","^9",183,"^6T",1,"^6U",true,"^I",["^J",["^6M",["^J",[["^7N"]]]]],"^7C",null,"^7D","Positional factory function for shadow.grove.components/SimpleVal."],"~$components-ref",["^ ","^L","^2V","^6","shadow/grove/components.cljs","^7",21,"^8",1,"^9",21,"^:",24,"^5",["^ ","^6","shadow/grove/components.cljs","^7",21,"^8",10,"^9",21,"^:",24],"^76","~$cljs.core/Atom"],"~$SimpleVal",["^ ","^7F",1,"^7=",["^F",["^7Y"]],"^L","^2M","^6","shadow/grove/components.cljs","^:",19,"^7G",true,"^8",10,"^7",183,"^7H",false,"^9",183,"^76","^7I","^7C",null],"~$find-first-set-bit-idx",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",108,"^8",7,"^9",108,"^:",29,"^I",["^J",["^6M",["^J",[["~$search"]]]]]],"^L","^3?","^6","shadow/grove/components.cljs","^:",29,"^6N",["^J",[["^82"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",108,"^6R","^6S","^9",108,"^6T",1,"^6U",true,"^I",["^J",["^6M",["^J",[["^82"]]]]]],"~$get-component",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",53,"^8",7,"^9",53,"^:",20,"^I",["^J",["^6M",["^J",[["~$env"]]]]]],"^L","^3;","^6","shadow/grove/components.cljs","^:",20,"^6N",["^J",[["^84"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",53,"^6R","^6Y","^9",53,"^6T",1,"^6U",true,"^I",["^J",["^6M",["^J",[["^84"]]]]]],"~$get-parent",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",689,"^8",7,"^9",689,"^:",17,"^I",["^J",["^6M",["^J",[["^79"]]]]]],"^L","^2[","^6","shadow/grove/components.cljs","^:",17,"^6N",["^J",[["^79"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",689,"^6R","^6Y","^9",689,"^6T",1,"^6U",true,"^I",["^J",["^6M",["^J",[["^79"]]]]]],"~$get-hook-value",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",682,"^8",7,"^9",682,"^:",21,"^I",["^J",["^6M",["^J",[["^79","^7U"]]]]]],"^L","^36","^6","shadow/grove/components.cljs","^:",21,"^6N",["^J",[["^79","^7U"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",682,"^6R","^6Y","^9",682,"^6T",2,"^6U",true,"^I",["^J",["^6M",["^J",[["^79","^7U"]]]]]],"~$make-component-config",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",634,"^8",7,"^9",634,"^:",28,"^I",["^J",["^6M",["^J",[["~$component-name","~$hooks","~$opts","~$check-args-fn","~$render-deps","~$render-fn","~$events"]]]]],"^7D","used by defc macro, do not use directly"],"^L","^3A","^6","shadow/grove/components.cljs","^:",28,"^6N",["^J",[["^88","^89","^8:","^8;","^8<","^8=","^8>"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",634,"^6R","^2I","^9",634,"^6T",7,"^6U",true,"^I",["^J",["^6M",["^J",[["^88","^89","^8:","^8;","^8<","^8=","^8>"]]]]],"^7D","used by defc macro, do not use directly"],"~$DEBUG",["^ ","^5",["^ ","^6","shadow/grove/components.cljs","^7",15,"^8",3,"^9",15,"^:",8,"^76","^7L","~:jsdoc",["@define {boolean}"]],"^L","^3@","^6","shadow/grove/components.cljs","^:",8,"^8",1,"^7",13,"^9",15,"^76","^7L","^8@",["@define {boolean}"]],"~$component-create",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",600,"^8",7,"^9",600,"^:",23,"^I",["^J",["^6M",["^J",[["^84","~$config","^K"]]]]]],"^L","^35","^6","shadow/grove/components.cljs","^:",23,"^6N",["^J",[["^84","^8B","^K"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",600,"^6R","^2;","^9",600,"^6T",3,"^6U",true,"^I",["^J",["^6M",["^J",[["^84","^8B","^K"]]]]]],"~$EffectHook",["^ ","^7F",5,"^7=",["^F",["^2O","^7Y"]],"^L","^3D","^6","shadow/grove/components.cljs","^:",20,"^7G",true,"^8",10,"^7",116,"^7H",false,"^9",116,"^76","^7I","^7C",null],"~$ComponentHookHandle",["^ ","^7F",2,"^7=",["^F",["^7R","^7S","^7T"]],"^L","^3E","^6","shadow/grove/components.cljs","^:",29,"^7G",true,"^8",10,"^7",170,"^7H",false,"^9",170,"^76","^7I","^7C",null],"~$get-events",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",685,"^8",7,"^9",685,"^:",17,"^I",["^J",["^6M",["^J",[["^79"]]]]]],"^L","^3I","^6","shadow/grove/components.cljs","^:",17,"^6N",["^J",[["^79"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",685,"^6R","^6Y","^9",685,"^6T",1,"^6U",true,"^I",["^J",["^6M",["^J",[["^79"]]]]]],"~$instances-ref",["^ ","^L","^3K","^6","shadow/grove/components.cljs","^7",22,"^8",1,"^9",22,"^:",23,"^5",["^ ","^6","shadow/grove/components.cljs","^7",22,"^8",10,"^9",22,"^:",23],"^76","^7["],"~$->EffectHook",["^ ","^6L",null,"^5",["^ ","^7=",["^F",["^2O","^7Y"]],"^6","shadow/grove/components.cljs","^:",20,"^8",10,"^7@","^7A","^7",116,"^9",116,"^I",["^J",["^6M",["^J",[["~$deps","~$callback","~$callback-result","~$should-call?","~$component-handle"]]]]],"^7C",null,"^7D","Positional factory function for shadow.grove.components/EffectHook."],"^7=",["^F",["^2O","^7Y"]],"^L","^3N","^6","shadow/grove/components.cljs","^:",20,"^6N",["^J",[["^8H","^8I","^8J","^8K","^8L"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7@","^7A","^7",116,"^6R","^3D","^9",116,"^6T",5,"^6U",true,"^I",["^J",["^6M",["^J",[["^8H","^8I","^8J","^8K","^8L"]]]]],"^7C",null,"^7D","Positional factory function for shadow.grove.components/EffectHook."],"~$mark-all-dirty!",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",59,"^8",7,"^9",59,"^:",22,"^I",["^J",["^6M",["^J",[[]]]]]],"^L","^3S","^6","shadow/grove/components.cljs","^:",22,"^6N",["^J",[[]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",59,"^6R","^6[","^9",59,"^6T",0,"^6U",true,"^I",["^J",["^6M",["^J",[[]]]]]],"~$->HookConfig",["^ ","^6L",null,"^5",["^ ","^7=",["^F",[]],"^6","shadow/grove/components.cljs","^:",20,"^8",10,"^7@","^7A","^7",624,"^9",624,"^I",["^J",["^6M",["^J",[["~$depends-on","~$affects","~$run"]]]]],"^7C",null,"^7D","Positional factory function for shadow.grove.components/HookConfig."],"^7=",["^F",[]],"^L","^46","^6","shadow/grove/components.cljs","^:",20,"^6N",["^J",[["^8O","^8P","^8Q"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7@","^7A","^7",624,"^6R","^28","^9",624,"^6T",3,"^6U",true,"^I",["^J",["^6M",["^J",[["^8O","^8P","^8Q"]]]]],"^7C",null,"^7D","Positional factory function for shadow.grove.components/HookConfig."],"~$make-component-init",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",66,"^8",8,"^9",66,"^:",27,"~:private",true,"^I",["^J",["^6M",["^J",[["^7B","^K"]]]]]],"^8S",true,"^L","^3V","^6","shadow/grove/components.cljs","^:",27,"^6N",["^J",[["^7B","^K"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",66,"^6R","^29","^9",66,"^6T",2,"^6U",true,"^I",["^J",["^6M",["^J",[["^7B","^K"]]]]]],"~$make-hook-config",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",626,"^8",7,"^9",626,"^:",23,"^I",["^J",["^6M",["^J",[["^8O","^8P","^8Q"]]]]],"^7D","used by defc macro, do not use directly"],"^L","^40","^6","shadow/grove/components.cljs","^:",23,"^6N",["^J",[["^8O","^8P","^8Q"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",626,"^6R","^28","^9",626,"^6T",3,"^6U",true,"^I",["^J",["^6M",["^J",[["^8O","^8P","^8Q"]]]]],"^7D","used by defc macro, do not use directly"],"~$get-component-name",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",692,"^8",7,"^9",692,"^:",25,"^I",["^J",["^6M",["^J",[["^79"]]]]]],"^L","^43","^6","shadow/grove/components.cljs","^:",25,"^6N",["^J",[["^79"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",692,"^6R","^6Y","^9",692,"^6T",1,"^6U",true,"^I",["^J",["^6M",["^J",[["^79"]]]]]],"~$component-config?",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",91,"^8",7,"^9",91,"^:",24,"^I",["^J",["^6M",["^J",[["~$x"]]]]]],"^L","^1[","^6","shadow/grove/components.cljs","^:",24,"^6N",["^J",[["~$x"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",91,"^6R","^7L","^9",91,"^6T",1,"^6U",true,"^I",["^J",["^6M",["^J",[["~$x"]]]]]],"~$get-arg",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",670,"^8",7,"^9",670,"^:",14,"^I",["^J",["^6M",["^J",[["^79","^7U"]]]]]],"^L","^48","^6","shadow/grove/components.cljs","^:",14,"^6N",["^J",[["^79","^7U"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",670,"^6R","^6Y","^9",670,"^6T",2,"^6U",true,"^I",["^J",["^6M",["^J",[["^79","^7U"]]]]]],"~$arg-triggers-hooks!",["^ ","^6L",null,"^5",["^ ","^6","shadow/grove/components.cljs","^7",676,"^8",7,"^9",676,"^:",26,"^I",["^J",["^6M",["^J",[["^79","^7U","~$dirty-bits"]]]]]],"^L","^4;","^6","shadow/grove/components.cljs","^:",26,"^6N",["^J",[["^79","^7U","^8Y"]]],"^6O",null,"^6P",["^J",[null,null]],"^8",1,"^6Q",false,"^7",676,"^6R","^6Y","^9",676,"^6T",3,"^6U",true,"^I",["^J",["^6M",["^J",[["^79","^7U","^8Y"]]]]]]],"^1:",["^ ","^O","^O","^X","^X","^D","^D","^12","^12","^13","^12"],"~:cljs.analyzer/constants",["^ ","^18",["^F",["^7U","~:shadow.grove.components/dom-sync!","^8O","~:supports?","^8L","^7L","^8I","~:else","^8H","~:shadow.grove.components/parent","~:config","^K","~:shadow.grove.components/hook-invalidate!","~:new","~:value","^8Q","~:shadow.grove.components/event-target","~:shadow.arborist.protocols/dom-event-handler","~:shadow.grove.components/error-handler","~:e","~:shadow.grove.components/effect-hook","~:shadow.grove.components/stable-args","~:render","~:event","~$not-native","^8P","~:shadow.grove.components/component","^7N","^8J","^7B","^7I","~:shadow.grove.components/depth","^76","~:mutable","^8K","~:shadow.grove.components/handle-dom-event!","~:old","~:shadow.grove.components/scheduler","~:props"]],"~:order",["^92","^9?","^9@","^9:","^9<","^8H","^9A","^8I","^76","^7I","^8J","^8K","^7L","^8L","^9>","^7B","^7U","^7N","^9D","^98","^97","^9;","^90","^8[","~:e","^91","^9=","^99","^94","^9C","^95","^96","^9B","^93","^9E","^K","^8O","^8P","^8Q"]],"^1@",["^ ","^1:",["^F",[]],"^19",["^F",[]]],"^1A",["^ "],"^1B",["^11","^X","^10","^D","^12","^14","^W","^V","^U","^Z"]],"^N","^O","~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^4?",[["^9I","~:static-fns"],true,["^9I","~:shadow-tweaks"],null,["^9I","~:source-map-inline"],null,["^9I","~:elide-asserts"],false,["^9I","~:optimize-constants"],null,["^9I","^1G"],null,["^9I","~:external-config"],null,["^9I","~:tooling-config"],null,["^9I","~:emit-constants"],null,["^9I","~:load-tests"],null,["^9I","~:form-size-threshold"],null,["^9I","~:global-goog-object&array"],null,["^9I","~:data-readers"],null,["^9I","~:infer-externs"],"~:auto",["^9I","^1I"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^9I","~:fn-invoke-direct"],null,["^9I","~:source-map"],"/dev/null"]]]