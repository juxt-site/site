{:deps
 ["https://data.example.org/_site/events"
  "https://auth.example.org/operations/get-events"
  "https://auth.example.org/operations/put-resource"]
 :install
 {:juxt.site/subject-uri "https://auth.example.org/_site/subjects/system"
  :juxt.site/operation-uri "https://auth.example.org/operations/put-resource"
  :juxt.site/input
  {:xt/id "{{$id}}"
   :juxt.site/methods
   {:get {;; TODO: Should we be calling this an operation? It isn't
          ;; transacted. Could we call it something like a
          ;; 'state-function' or query? Does 'operation' imply
          ;; transaction?  Are we complecting acl-rules with
          ;; operations?  Do operations only exist to 'normalise'
          ;; endpoints? i.e. so REST unsafe methods and GraphQL
          ;; mutations can share the same logic?
          :juxt.site/operation-uri "https://auth.example.org/operations/get-events"}}
   :juxt.site/variant-of "https://data.example.org/_site/events"
   :juxt.http/content-type "application/json"

   ;; TODO: put in juxt.site/responses? See users.edn
   :juxt.site/respond
   {:juxt.site.sci/program
    #juxt.pprint
    (let [content (str (jsonista.core/write-value-as-string *state*) "\r\n")]
      (-> *ctx*
          (assoc :ring.response/body content)
          (update :ring.response/headers assoc "content-length" (str (count (.getBytes content))))))}

   :juxt.site/protection-space-uris #{"https://auth.example.org/protection-spaces/bearer"}
   :juxt.site/access-control-allow-origins
   [[".*" {:juxt.site/access-control-allow-origin "*"
           :juxt.site/access-control-allow-methods [:get]
           :juxt.site/access-control-allow-headers ["authorization"]}]]}}}
