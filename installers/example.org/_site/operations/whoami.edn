{:deps [{:juxt.site/base-uri "https://data.example.org", :juxt.site/installer-path "/_site/scopes/system/self-identification"}]
 :install
 {:juxt.site/subject-uri "https://auth.example.org/_site/subjects/system"
  :juxt.site/operation-uri "https://auth.example.org/_site/operations/create-operation"
  :juxt.site/input
  {:xt/id "{{$id}}"
   :juxt.site/do-operation-tx-fn "https://auth.example.org/_site/do-operation"

   ;; NOTE: This means: Use the operation to extract part of the
   ;; resource's state.  Operations are used to extract
   ;; protected data, particularly part of the state of a
   ;; resource.
   ;;
   ;; NOTE: Operations emit DATA, not form. It is the data that
   ;; an operation is protecting and managing, not a particular
   ;; view of it.

   :juxt.site/state
   {:juxt.site.sci/program
    #juxt.pprint
    (let [subject (:juxt.site/subject *ctx*)
          subject-uri (:xt/id subject)
          operations (vec
                      (for [{operation :juxt.site/operation-uri, permitted-by :juxt.site/permitted-by}
                            (juxt.site/allowed-operations {})]
                        {:juxt.site/operation-ref (:xt/id operation)
                         :juxt.site/permitted-by permitted-by}))]
      (into {:juxt.site/subject subject
             :juxt.site/permitted-operations operations}
            (cond
              (:juxt.site/user-identity subject)
              (let [user-identity (xt/entity (:juxt.site/user-identity subject))
                    user-ref (:juxt.site/user user-identity)
                    user (xt/entity user-ref)
                    assignments
                    (->> (xt/q '{:find [(pull assignment [*])]
                                 :where [[assignment :juxt.site/type "https://meta.juxt.site/types/role-assignment"]
                                         [assignment :juxt.site/user user]]
                                 :in [user]} user-ref)
                         (mapv first))
                    roles
                    (->> (xt/q '{:find [role]
                                 :where [[assignment :juxt.site/type "https://meta.juxt.site/types/role-assignment"]
                                         [role :juxt.site/type "https://meta.juxt.site/types/role"]
                                         [assignment :juxt.site/role role]
                                         [assignment :juxt.site/user user]]
                                 :in [user]} user-ref)
                         (mapv first))]
                {:juxt.site/user-identity user-identity
                 :juxt.site/user user
                 :juxt.site/role-assignments assignments
                 :juxt.site/roles roles})

              (:juxt.site/application subject)
              (let [application-ref (:juxt.site/application subject)
                    application (xt/entity application-ref)
                    assignments
                    (->> (xt/q '{:find [(pull assignment [*])]
                                 :where [[assignment :juxt.site/type "https://meta.juxt.site/types/role-assignment"]
                                         [assignment :juxt.site/application application]]
                                 :in [application]
                                 } application-ref)
                         (mapv first))

                    roles
                    (->> (xt/q '{:find [role]
                                 :where [[assignment :juxt.site/type "https://meta.juxt.site/types/role-assignment"]
                                         [role :juxt.site/type "https://meta.juxt.site/types/role"]
                                         [assignment :juxt.site/role role]
                                         [assignment :juxt.site/application application]]
                                 :in [application]} application-ref)
                         (mapv first))]
                {:juxt.site/application-ref application-ref
                 :juxt.site/application application
                 :juxt.site/role-assignments assignments
                 :juxt.site/roles roles})

              :else {})))}

   :juxt.site/scope
   #{"https://data.example.org/_site/scopes/system/self-identification"}

   ;; Anyone should be able to call whoami
   :juxt.site/rules
   [
    [(allowed? subject operation resource permission)
     [subject :xt/id]]]}}}
