{:deps
 [{:juxt.site/base-uri "https://auth.example.org", :juxt.site/installer-path "/scopes/system/read"}
]
 :install
 {:juxt.site/subject-uri "https://auth.example.org/_site/subjects/system"
  :juxt.site/operation-uri "https://auth.example.org/_site/operations/create-operation"
  :juxt.site/input
  {:xt/id "{{$id}}"
   :juxt.site/do-operation-tx-fn "https://auth.example.org/_site/do-operation"

   :juxt.site/state
   {:juxt.site.sci/program
    #juxt.pprint
    (let [group-by-reference
          (fn [x] (cond
                    (and (map-entry? x) (= (first x) :referenced-by))
                    [(first x) (group-by :juxt.site/type (second x))]
                    :else x))
          user-id (or (:juxt.site/variant-of *resource*) (:xt/id *resource*))]

      (clojure.walk/postwalk
       group-by-reference
       (xt/pull
        ;; TODO: Add access tokens
        '[:juxt.site/username
          :fullname
          {(:juxt.site/_user {:as :referenced-by})
           [* {(:juxt.site/_user-identity {:as :referenced-by})
               [* {(:juxt.site/_subject {:as :referenced-by})
                   [*]}]}]}]
        user-id)))}

   :juxt.site/scope
   #{"https://auth.example.org/scopes/system/read"}

   :juxt.site/rules
   [
    [(allowed? subject operation resource permission)
     [subject :juxt.site/user-identity id]
     [id :juxt.site/user user]
     [permission :juxt.site/role role]
     [role :juxt.site/type "https://meta.juxt.site/types/role"]
     [role-assignment :juxt.site/type "https://meta.juxt.site/types/role-assignment"]
     [role-assignment :juxt.site/role role]
     [role-assignment :juxt.site/user user]]

    [(allowed? subject operation resource permission)
     [subject :juxt.site/application app]
     [permission :juxt.site/role role]
     [role :juxt.site/type "https://meta.juxt.site/types/role"]
     [role-assignment :juxt.site/type "https://meta.juxt.site/types/role-assignment"]
     [role-assignment :juxt.site/role role]
     [role-assignment :juxt.site/application app]]]}}}
