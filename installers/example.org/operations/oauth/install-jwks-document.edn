{:deps [{:juxt.site/base-uri "https://auth.example.org"
         :juxt.site/installer-path "/operations/oauth/get-jwks-document"}
        {:juxt.site/base-uri "https://auth.example.org"
         :juxt.site/installer-path "/permissions/oauth/get-jwks-document"}]
 :install
 {:juxt.site/subject-uri "https://auth.example.org/_site/subjects/system"
  :juxt.site/operation-uri "https://auth.example.org/_site/operations/create-operation"
  :juxt.site/input
  {:xt/id "{{$id}}"
   :juxt.site/do-operation-tx-fn "https://auth.example.org/_site/do-operation"

   :juxt.site.malli/input-schema
   [:map
    [:xt/id [:re "https://auth.example.org/.*"]]]

   :juxt.site/prepare
   {:juxt.site.sci/program
    #juxt.pprint
    (let [input (:juxt.site/received-representation *ctx*)
          content-type (:juxt.http/content-type input)]
      (case content-type
        "application/edn"
        (some->
         input
         :juxt.http/body
         (String.)
         clojure.edn/read-string
         juxt.site.malli/validate-input
         (assoc
          :juxt.site/methods
          {:get {:juxt.site/operation-uri "https://auth.example.org/operations/oauth/get-jwks-document"}}
          :juxt.http/content-type "application/json"
          :juxt.site/respond
          {:juxt.site.sci/program
           #juxt.pprint
           (let [content (jsonista.core/write-value-as-string *state*)]
             (-> *ctx*
                 (assoc :ring.response/body content)
                 (update :ring.response/headers assoc "content-length" (str (count (.getBytes content))))))}))))}

   :juxt.site/transact
   {:juxt.site.sci/program
    #juxt.pprint
    [[:xtdb.api/put *prepare*]]}

   :juxt.site/rules
   [
    [(allowed? subject operation resource permission)
     [permission :juxt.site/subject subject]]]}}}
