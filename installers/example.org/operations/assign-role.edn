{:deps [#_"https://auth.example.org/operations/get-role-assignment"]
 :install
 {:juxt.site/subject-uri "https://auth.example.org/_site/subjects/system"
  :juxt.site/operation-uri "https://auth.example.org/_site/operations/create-operation"
  :juxt.site/input
  {:xt/id "{{$id}}"
   :juxt.site/do-operation-tx-fn "https://auth.example.org/_site/do-operation"

   :juxt.site.malli/input-schema
   [:or
    [:map
     [:juxt.site/user [:re "https?://.*?/.+"]]
     [:juxt.site/role [:re "https?://.*?/.+"]]]
    [:map
     [:juxt.site/application [:re "https?://.*?/.+"]]
     [:juxt.site/role [:re "https?://.*?/.+"]]]]

   :juxt.site/prepare
   {:juxt.site.sci/program
    #juxt.pprint
    (let [content-type (-> *ctx*
                           :juxt.site/received-representation
                           :juxt.http/content-type)
          body (-> *ctx*
                   :juxt.site/received-representation
                   :juxt.http/body)
          input (case content-type
                  "application/edn"
                  (some->
                   body
                   (String.)
                   clojure.edn/read-string)

                  "application/json"
                  (some->
                   body
                   (String.)
                   jsonista.core/read-value-with-keywords))]

      (let [doc (juxt.site.malli/validate-input input)
            [_ username] (when (:juxt.site/user doc)
                           (re-matches (re-pattern "https://data.example.org/_site/users/(.+)") (:juxt.site/user doc)))
            [_ client-id] (when (:juxt.site/application doc)
                            (re-matches (re-pattern "https://auth.example.org/applications/(.+)") (:juxt.site/application doc)))
            [_ rolename] (re-matches (re-pattern "https://data.example.org/_site/roles/(.+)") (:juxt.site/role doc))]
        (assert (or username client-id))
        (assert rolename)
        (assoc doc
               :xt/id (format "https://data.example.org/_site/role-assignments/%s-%s" (or username client-id) rolename)
               :juxt.site/type "https://meta.juxt.site/types/role-assignment"
               :juxt.site/methods
               {:get {:juxt.site/operation-uri "https://auth.example.org/operations/get-role-assignment"}})))}

   :juxt.site/transact
   {:juxt.site.sci/program
    #juxt.pprint
    ;; TODO: We could/should see if the role has already be assigned,
    ;; and if not, assign it. Don't create multiple role assignment
    ;; documents.
    [[:xtdb.api/put *prepare*]]}

   ;; This operation can be performed via its URI
   :juxt.site/methods
   {:post {:juxt.site/operation-uri "{{$id}}"
           :juxt.site/acceptable {"accept" "application/json,application/edn"}}}

   :juxt.site/protection-space-uris #{"https://auth.example.org/protection-spaces/bearer"}

   :juxt.site/rules
   [
    [(allowed? subject operation resource permission)
     [permission :juxt.site/subject subject]]

    [(allowed? subject operation resource permission)
     [subject :juxt.site/user-identity id]
     [id :juxt.site/user user]
     [permission :juxt.site/role role]
     [role :juxt.site/type "https://meta.juxt.site/types/role"]
     [role-assignment :juxt.site/type "https://meta.juxt.site/types/role-assignment"]
     [role-assignment :juxt.site/role role]
     [role-assignment :juxt.site/user user]]

    [(allowed? subject operation resource permission)
     [subject :juxt.site/application app]
     [permission :juxt.site/role role]
     [role :juxt.site/type "https://meta.juxt.site/types/role"]
     [role-assignment :juxt.site/type "https://meta.juxt.site/types/role-assignment"]
     [role-assignment :juxt.site/role role]
     [role-assignment :juxt.site/application app]]]

   }}}
