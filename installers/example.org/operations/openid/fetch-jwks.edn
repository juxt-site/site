{:install
 {:juxt.site/subject-uri "https://auth.example.org/_site/subjects/system"
  :juxt.site/operation-uri "https://auth.example.org/_site/operations/create-operation"
  :juxt.site/input
  {:xt/id "{{$id}}"
   :juxt.site/do-operation-tx-fn "https://auth.example.org/_site/do-operation"

   :juxt.site.malli/input-schema
   [:map
    [:xt/id [:re "https://auth.example.org/.*"]]]

   :juxt.site/prepare
   {:juxt.site.sci/program
    #juxt.pprint
    (do
      (juxt.site.malli/validate-input)
      (let [issuer (:xt/id *input*)
            issuer-doc (xt/entity* issuer)
            _ (when-not issuer-doc
                (throw (ex-info "Issuer not installed in database" {:issuer (:juxt.site/issuer *input*)})))
            jwks-uri (get-in issuer-doc [:juxt.site/openid-configuration "jwks_uri"])
            _ (when-not jwks-uri
                (if (nil? (:juxt.site/openid-configuration issuer-doc))
                  (throw
                   (ex-info
                    "The entry :juxt.site/openid-configuration is missing from the issuer entity"
                    {:issuer issuer-doc}))
                  (throw
                   (ex-info
                    "jwks_uri not found in :juxt.site/openid-configuration entry of issuer entity"
                    {:issuer issuer-doc
                     :openid-configuration (:juxt.site/openid-configuration issuer-doc)}))))

            get-jwks-response
            (java-http-clj.core/send
             {:method :get
              :uri jwks-uri
              :headers {"Accept" "application/json"}}
             {:as :byte-array})

            _ (when-not (= 200 (:status get-jwks-response))
                (throw (ex-info "Failed to get JWKS from issuer" {:issuer issuer})))

            jwks (jsonista.core/read-value (:body get-jwks-response))]
        {:jwks-uri jwks-uri
         :juxt.site/jwks jwks}))}

   :juxt.site/transact
   {:juxt.site.sci/program
    #juxt.pprint
    (let [issuer-doc (xt/entity (:xt/id *input*))
          jwks-uri (get-in issuer-doc [:juxt.site/openid-configuration "jwks_uri"])]
      (cond-> []
        (= jwks-uri (:jwks-uri *prepare*))
        (conj [:xtdb.api/put (assoc issuer-doc :juxt.site/jwks (:juxt.site/jwks *prepare*))])))}

   :juxt.site/rules
   [
    [(allowed? subject operation resource permission)
     [permission :xt/id]]]}}}
